{"html":"<article><div class=\"content-top\"><\/div><div class=\"textblock\"><h1>I/O Stream<span id=\"i-o-stream\" class=\"self-anchor\"><a class=\"perm\" href=\"#i-o-stream\">#<\/a><\/span><\/h1><p style=\"color:inherit\">I/O Stream can be used to read/write different formats of data to various streams. <\/p><p style=\"color:inherit\">The source files for I/O Stream platform software module are present under platform/services/iostream.<\/p><h3>Overview<span id=\"overview\" class=\"self-anchor\"><a class=\"perm\" href=\"#overview\">#<\/a><\/span><\/h3><p style=\"color:inherit\">I/O Stream is a platform module software that provides Input/Output functionalities by creating streams. Streams are abstractions allowing a uniform way to read/write data regardless of the physical communication interface.<\/p><p style=\"color:inherit\">I/O Stream offers many interfaces, see submodules for a list of all types available and their specificities.You can load multiple streams in the project and you can select the interface that must be used at runtime.Some interface type can also be instantiated, meaning that you can have multiple instances of an interface type which will be normally bound to a hardware peripheral.<\/p><h3>Initialization<span id=\"initialization\" class=\"self-anchor\"><a class=\"perm\" href=\"#initialization\">#<\/a><\/span><\/h3><p style=\"color:inherit\">The I/O Stream core doesn't require any initialization. Instead each stream type has their own initialization and their own configuration. See I/O Stream specific type to know more about how to initialize a stream.<\/p><p style=\"color:inherit\">Note that most stream will set itself as the default stream during their initialization. Thus the initial default stream will be the last stream initialized.<\/p><h3>Default system-wide stream<span id=\"default-system-wide-stream\" class=\"self-anchor\"><a class=\"perm\" href=\"#default-system-wide-stream\">#<\/a><\/span><\/h3><p style=\"color:inherit\">Multiple streams can be initialized in your application and you can configure a default stream that must be used when no stream is specified. Also note that the default stream will be used when calling printf and you can change the default stream at runtime. The following defines should be used for the default stream:<\/p><p style=\"color:inherit\">SL_IOSTREAM_STDIN SL_IOSTREAM_STDOUT SL_IOSTREAM_STDERR<\/p><h3>RTOS - Task's default stream<span id=\"rtos-task-s-default-stream\" class=\"self-anchor\"><a class=\"perm\" href=\"#rtos-task-s-default-stream\">#<\/a><\/span><\/h3><p style=\"color:inherit\">In the case of an RTOS environment, each task can set its own stream. By default, the task stream will be set to the system_wide default stream. From your task, you can change the default stream assigned to your task without affecting the other tasks' stream.<\/p><h3>Printf<span id=\"printf\" class=\"self-anchor\"><a class=\"perm\" href=\"#printf\">#<\/a><\/span><\/h3><p style=\"color:inherit\">I/O Stream provides third-party printf integrations. It can work with toolchain implementation or with the tiny printf implementation for embedded system. The printf API doesn't have an argument for specifying the stream to be used, so I/O Stream provides a printf API that takes a stream as an argument and calls the configured third-party implementation of printf. <\/p><h2>Modules<span id=\"modules\" class=\"self-anchor\"><a class=\"perm\" href=\"#modules\">#<\/a><\/span><\/h2><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/sl-iostream-t\" target=\"_blank\" rel=\"\">sl_iostream_t<\/a><\/p><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/sl-iostream-instance-info-t\" target=\"_blank\" rel=\"\">sl_iostream_instance_info_t<\/a><\/p><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-cpc\" target=\"_blank\" rel=\"\">I/O Stream CPC<\/a><\/p><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-eusart\" target=\"_blank\" rel=\"\">I/O Stream EUSART<\/a><\/p><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-rtt\" target=\"_blank\" rel=\"\">I/O Stream RTT<\/a><\/p><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-stdlib-cfg\" target=\"_blank\" rel=\"\">I/O Stream STDLIB Configuration<\/a><\/p><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-swo\" target=\"_blank\" rel=\"\">I/O Stream SWO<\/a><\/p><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-uart\" target=\"_blank\" rel=\"\">I/O Stream UART<\/a><\/p><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-usart\" target=\"_blank\" rel=\"\">I/O Stream USART<\/a><\/p><p style=\"color:inherit\"><a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-vuart\" target=\"_blank\" rel=\"\">I/O Stream VUART<\/a><\/p><div class=\"decl-class-section\"><h2>Enumerations<span id=\"enum-declaration\" class=\"self-anchor\"><a class=\"perm\" href=\"#enum-declaration\">#<\/a><\/span><\/h2><div><div class=\"columns\"><div class=\"attributename has-text-right\">enum<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#sl-iostream-type-t\">sl_iostream_type_t<\/a> {<\/div><div class=\"enum\">SL_IOSTREAM_TYPE_SWO = 0<\/div><div class=\"enum\">SL_IOSTREAM_TYPE_RTT = 1<\/div><div class=\"enum\">SL_IOSTREAM_TYPE_UART = 2<\/div><div class=\"enum\">SL_IOSTREAM_TYPE_VUART = 3<\/div><div class=\"enum\">SL_IOSTREAM_TYPE_DEBUG_OUTPUT = 4<\/div><div class=\"enum\">SL_IOSTREAM_TYPE_LOOPBACK = 5<\/div><div class=\"enum\">SL_IOSTREAM_TYPE_UNDEFINED = 6<\/div><div class=\"attributename\">}<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Enumeration representing the possible types of iostream instances. <\/p><\/div><\/div><\/div><\/div><\/div><div class=\"decl-class-section\"><h2>Variables<span id=\"var-declaration\" class=\"self-anchor\"><a class=\"perm\" href=\"#var-declaration\">#<\/a><\/span><\/h2><div><div class=\"columns\"><div class=\"attributename has-text-right\">const char *<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#format\">format<\/a><\/div><div class=\"classdescription\"><\/div><\/div><\/div><\/div><\/div><div class=\"decl-class-section\"><h2>Functions<span id=\"func-declaration\" class=\"self-anchor\"><a class=\"perm\" href=\"#func-declaration\">#<\/a><\/span><\/h2><div><div class=\"columns\"><div class=\"attributename has-text-right\">sl_status_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#sl-iostream-set-default\">sl_iostream_set_default<\/a>(sl_iostream_t *stream)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Set the stream as default I/O Stream. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\"><a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/sl-iostream-t\" target=\"_blank\" rel=\"\">sl_iostream_t<\/a> *<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#sl-iostream-get-default\">sl_iostream_get_default<\/a>(void)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Get the default I/O Stream configured. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">sl_status_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#sl-iostream-set-system-default\">sl_iostream_set_system_default<\/a>(sl_iostream_t *stream)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Configure the systemwide default stream. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">sl_status_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#sl-iostream-write\">sl_iostream_write<\/a>(sl_iostream_t *stream, const void *buffer, size_t buffer_length)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Output data on a stream. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">sl_status_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#sl-iostream-read\">sl_iostream_read<\/a>(sl_iostream_t *stream, void *buffer, size_t buffer_length, size_t *bytes_read)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Get data from a stream. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">sl_status_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#sl-iostream-putchar\">sl_iostream_putchar<\/a>(sl_iostream_t *stream, char c)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Print a character on stream. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">sl_status_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#sl-iostream-getchar\">sl_iostream_getchar<\/a>(sl_iostream_t *stream, char *c)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Print a character on stream. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\">sl_status_t<\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#sl-iostream-vprintf\">sl_iostream_vprintf<\/a>(sl_iostream_t *stream, const char *format, va_list argp)<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Print a formated string on stream. <\/p><\/div><\/div><\/div><\/div><div><div class=\"columns\"><div class=\"attributename has-text-right\"><\/div><div class=\"column\"><div class=\"attributename\"><a href=\"#attribute\">__attribute__<\/a>((format(printf, 2, 3))) sl_status_t sl_iostream_printf(sl_iostream_t *stream<\/div><div class=\"classdescription\"><p style=\"color:inherit\">Print a formated string on stream. <\/p><\/div><\/div><\/div><\/div><\/div><div class=\"def-class-section\"><h2>Enumeration Documentation<span id=\"enum-definition\" class=\"self-anchor\"><a class=\"perm\" href=\"#enum-definition\">#<\/a><\/span><\/h2><div><h3>sl_iostream_type_t<span id=\"sl-iostream-type-t\" class=\"self-anchor\"><a class=\"perm\" href=\"#sl-iostream-type-t\">#<\/a><\/span><\/h3><blockquote>sl_iostream_type_t<\/blockquote><p style=\"color:inherit\">Enumeration representing the possible types of iostream instances. <\/p><table><tbody><tr><th colspan=\"2\">Enumerator<\/th><\/tr><tr><td class=\"fieldname\">SL_IOSTREAM_TYPE_SWO<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">SWO Instance. <\/p><\/td><\/tr><tr><td class=\"fieldname\">SL_IOSTREAM_TYPE_RTT<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">RTT Instance. <\/p><\/td><\/tr><tr><td class=\"fieldname\">SL_IOSTREAM_TYPE_UART<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">USART Instance. <\/p><\/td><\/tr><tr><td class=\"fieldname\">SL_IOSTREAM_TYPE_VUART<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Vuart. <\/p><\/td><\/tr><tr><td class=\"fieldname\">SL_IOSTREAM_TYPE_DEBUG_OUTPUT<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Backchannel output Instance Type. <\/p><\/td><\/tr><tr><td class=\"fieldname\">SL_IOSTREAM_TYPE_LOOPBACK<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Loopback Instance. <\/p><\/td><\/tr><tr><td class=\"fieldname\">SL_IOSTREAM_TYPE_UNDEFINED<\/td><td class=\"fielddescription\"><p style=\"color:inherit\">Undefined Instance Type. <\/p><\/td><\/tr><\/tbody><\/table><br><div>Definition at line <code>118<\/code> of file <code>platform/service/iostream/inc/sl_iostream.h<\/code><\/div><br><\/div><\/div><div class=\"def-class-section\"><h2>Variable Documentation<span id=\"var-definition\" class=\"self-anchor\"><a class=\"perm\" href=\"#var-definition\">#<\/a><\/span><\/h2><div><h3>format<span id=\"format\" class=\"self-anchor\"><a class=\"perm\" href=\"#format\">#<\/a><\/span><\/h3><blockquote>const char* format<\/blockquote><br><div>Definition at line <code>277<\/code> of file <code>platform/service/iostream/inc/sl_iostream.h<\/code><\/div><br><\/div><\/div><div class=\"def-class-section\"><h2>Function Documentation<span id=\"func-definition\" class=\"self-anchor\"><a class=\"perm\" href=\"#func-definition\">#<\/a><\/span><\/h2><div><h3>sl_iostream_set_default<span id=\"sl-iostream-set-default\" class=\"self-anchor\"><a class=\"perm\" href=\"#sl-iostream-set-default\">#<\/a><\/span><\/h3><blockquote>sl_status_t sl_iostream_set_default (<a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/sl-iostream-t\" target=\"_blank\" rel=\"\">sl_iostream_t<\/a> * stream)<\/blockquote><p style=\"color:inherit\">Set the stream as default I/O Stream. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">stream<\/td><td><p style=\"color:inherit\">I/O Stream to set as default.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Status result <\/p><\/li><\/ul><br><div>Definition at line <code>152<\/code> of file <code>platform/service/iostream/inc/sl_iostream.h<\/code><\/div><br><\/div><div><h3>sl_iostream_get_default<span id=\"sl-iostream-get-default\" class=\"self-anchor\"><a class=\"perm\" href=\"#sl-iostream-get-default\">#<\/a><\/span><\/h3><blockquote>sl_iostream_t * sl_iostream_get_default (void )<\/blockquote><p style=\"color:inherit\">Get the default I/O Stream configured. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>N/A<\/td><td class=\"paramname\"><\/td><td><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Status result <\/p><\/li><\/ul><br><div>Definition at line <code>159<\/code> of file <code>platform/service/iostream/inc/sl_iostream.h<\/code><\/div><br><\/div><div><h3>sl_iostream_set_system_default<span id=\"sl-iostream-set-system-default\" class=\"self-anchor\"><a class=\"perm\" href=\"#sl-iostream-set-system-default\">#<\/a><\/span><\/h3><blockquote>sl_status_t sl_iostream_set_system_default (<a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/sl-iostream-t\" target=\"_blank\" rel=\"\">sl_iostream_t<\/a> * stream)<\/blockquote><p style=\"color:inherit\">Configure the systemwide default stream. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">stream<\/td><td><p style=\"color:inherit\">I/O Stream to be used.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Status result <\/p><\/li><\/ul><br><div>Definition at line <code>169<\/code> of file <code>platform/service/iostream/inc/sl_iostream.h<\/code><\/div><br><\/div><div><h3>sl_iostream_write<span id=\"sl-iostream-write\" class=\"self-anchor\"><a class=\"perm\" href=\"#sl-iostream-write\">#<\/a><\/span><\/h3><blockquote>sl_status_t sl_iostream_write (<a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/sl-iostream-t\" target=\"_blank\" rel=\"\">sl_iostream_t<\/a> * stream, const void * buffer, size_t buffer_length)<\/blockquote><p style=\"color:inherit\">Output data on a stream. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">stream<\/td><td><p style=\"color:inherit\">I/O Stream to be used. SL_IOSTREAM_STDOUT; Default output stream will be used. Pointer to specific stream; Specific stream will be used.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">buffer<\/td><td><p style=\"color:inherit\">Buffer that contains the data to output.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">buffer_length<\/td><td><p style=\"color:inherit\">Data length contained in the buffer.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Status result <\/p><\/li><\/ul><br><div>Definition at line <code>187<\/code> of file <code>platform/service/iostream/inc/sl_iostream.h<\/code><\/div><br><\/div><div><h3>sl_iostream_read<span id=\"sl-iostream-read\" class=\"self-anchor\"><a class=\"perm\" href=\"#sl-iostream-read\">#<\/a><\/span><\/h3><blockquote>sl_status_t sl_iostream_read (<a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/sl-iostream-t\" target=\"_blank\" rel=\"\">sl_iostream_t<\/a> * stream, void * buffer, size_t buffer_length, size_t * bytes_read)<\/blockquote><p style=\"color:inherit\">Get data from a stream. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">stream<\/td><td><p style=\"color:inherit\">I/O Stream to be used. SL_IOSTREAM_STDOUT; Default output stream will be used. Pointer to specific stream; Specific stream will be used.<\/p><\/td><\/tr><tr><td>[out]<\/td><td class=\"paramname\">buffer<\/td><td><p style=\"color:inherit\">Buffer that contains the data to output.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">buffer_length<\/td><td><p style=\"color:inherit\">Data length contained in the buffer.<\/p><\/td><\/tr><tr><td>[out]<\/td><td class=\"paramname\">bytes_read<\/td><td><p style=\"color:inherit\">Data length copied to the buffer.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Status result <\/p><\/li><\/ul><br><div>Definition at line <code>206<\/code> of file <code>platform/service/iostream/inc/sl_iostream.h<\/code><\/div><br><\/div><div><h3>sl_iostream_putchar<span id=\"sl-iostream-putchar\" class=\"self-anchor\"><a class=\"perm\" href=\"#sl-iostream-putchar\">#<\/a><\/span><\/h3><blockquote>sl_status_t sl_iostream_putchar (<a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/sl-iostream-t\" target=\"_blank\" rel=\"\">sl_iostream_t<\/a> * stream, char c)<\/blockquote><p style=\"color:inherit\">Print a character on stream. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">stream<\/td><td><p style=\"color:inherit\">I/O Stream to be used: SL_IOSTREAM_STDOUT; Default output stream will be used. SL_IOSTREAM_STDERR; Default error output stream will be used. Pointer to specific stream; Specific stream will be used.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">c<\/td><td><p style=\"color:inherit\">Character to print<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Status result <\/p><\/li><\/ul><br><div>Definition at line <code>223<\/code> of file <code>platform/service/iostream/inc/sl_iostream.h<\/code><\/div><br><\/div><div><h3>sl_iostream_getchar<span id=\"sl-iostream-getchar\" class=\"self-anchor\"><a class=\"perm\" href=\"#sl-iostream-getchar\">#<\/a><\/span><\/h3><blockquote>sl_status_t sl_iostream_getchar (<a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/sl-iostream-t\" target=\"_blank\" rel=\"\">sl_iostream_t<\/a> * stream, char * c)<\/blockquote><p style=\"color:inherit\">Print a character on stream. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">stream<\/td><td><p style=\"color:inherit\">I/O Stream to be used. SL_IOSTREAM_STDIN; Default input stream will be used. Pointer to specific stream; Specific stream will be used.<\/p><\/td><\/tr><tr><td>[out]<\/td><td class=\"paramname\">c<\/td><td><p style=\"color:inherit\">Pointer to variable that will receive the character.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Status result <\/p><\/li><\/ul><br><div>Definition at line <code>237<\/code> of file <code>platform/service/iostream/inc/sl_iostream.h<\/code><\/div><br><\/div><div><h3>sl_iostream_vprintf<span id=\"sl-iostream-vprintf\" class=\"self-anchor\"><a class=\"perm\" href=\"#sl-iostream-vprintf\">#<\/a><\/span><\/h3><blockquote>sl_status_t sl_iostream_vprintf (<a href=\"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/sl-iostream-t\" target=\"_blank\" rel=\"\">sl_iostream_t<\/a> * stream, const char * format, va_list argp)<\/blockquote><p style=\"color:inherit\">Print a formated string on stream. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\">stream<\/td><td><p style=\"color:inherit\">I/O Stream to be used: SL_IOSTREAM_STDOUT; Default output stream will be used. SL_IOSTREAM_STDERR; Default error output stream will be used. Pointer to specific stream; Specific stream will be used.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">format<\/td><td><p style=\"color:inherit\">String that contains the text to be written.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">argp<\/td><td><p style=\"color:inherit\">A value identifying a variable arguments list.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Status result <\/p><\/li><\/ul><br><div>Definition at line <code>254<\/code> of file <code>platform/service/iostream/inc/sl_iostream.h<\/code><\/div><br><\/div><div><h3>__attribute__<span id=\"attribute\" class=\"self-anchor\"><a class=\"perm\" href=\"#attribute\">#<\/a><\/span><\/h3><blockquote>__attribute__ ((format(printf, 2, 3)) ,  format,  ...)<\/blockquote><p style=\"color:inherit\">Print a formated string on stream. <\/p><div class=\"parameters-section\"><strong class=\"parameters\">Parameters<\/strong><table><tbody><tr><td>[in]<\/td><td class=\"paramname\"><\/td><td><p style=\"color:inherit\">I/O Stream to be used: SL_IOSTREAM_STDOUT; Default output stream will be used. SL_IOSTREAM_STDERR; Default error output stream will be used. Pointer to specific stream; Specific stream will be used.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">format<\/td><td><p style=\"color:inherit\">String that contains the text to be written.<\/p><\/td><\/tr><tr><td>[in]<\/td><td class=\"paramname\">...<\/td><td><p style=\"color:inherit\">Additional arguments.<\/p><\/td><\/tr><\/tbody><\/table><\/div><p style=\"color:inherit\"><strong>Returns<\/strong><\/p><ul style=\"list-style:\"><li><p style=\"color:inherit\">Status result <\/p><\/li><\/ul><br><div>Definition at line <code>259<\/code> of file <code>platform/service/iostream/inc/sl_iostream.h<\/code><\/div><br><\/div><\/div><\/div><\/article><footer class=\"footer-commons-msg\"><\/footer><div class=\"light_theme hidden-lg\" ub-in-page=\"634f96f53042a864e44b82f8\"><\/div><div class=\"dark_theme hidden-lg\" ub-in-page=\"6735652b86eaf07b7012c67e\"><\/div>","url":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream","status":"success"}
