[{"children":[{"launchableId":"bleGattConfigurator","isConfigurable":true,"description":"The GATT database is the heart of your Bluetooth application. It exposes profiles, services and characteristics to be accessed by remote devices. The GATT Configurator is a simple-to-use tool to help you build your own GATT database with an intuitive GUI instead of coding. It provides the possibility of adding profiles/services/characteristics defined by the Bluetooth SIG as well as defining custom ones. For detailed description see UG438: GATT Configurator User's Guide for Bluetooth SDK v3.x.","instantiable":false,"label":"Bluetooth GATT Configurator","type":"shortcut","tags":"tool|tools|configure|configurator","isUserSelected":true,"isEditable":true,"isEnabled":true,"name":"bleGattConfigurator","isSelected":true,"id":"studiocomproot-Advanced_Configurators-bleGattConfigurator"},{"launchableId":"memoryeditor","isConfigurable":true,"description":"Graphical tool for editing the memory layout of the applications in your workspace","instantiable":false,"label":"Memory Editor","type":"shortcut","tags":"tool|tools|configure|configurator","isUserSelected":true,"isEditable":true,"isEnabled":true,"name":"memoryeditor","isSelected":true,"id":"studiocomproot-Advanced_Configurators-memoryeditor"},{"launchableId":"pintool","isConfigurable":true,"description":"Graphical tool for configuring pins on your hardware.","instantiable":false,"label":"Pin Tool","type":"shortcut","tags":"pin_tool|tool|tools|configure|configurator","isUserSelected":true,"isEditable":true,"isEnabled":true,"name":"pintool","isSelected":true,"id":"studiocomproot-Advanced_Configurators-pintool"},{"launchableId":"postbuildeditor","isConfigurable":true,"description":"Graphical tool for editing the post build steps of the applications in your workspace","instantiable":false,"label":"Post Build Editor","type":"shortcut","tags":"tool|tools|configure|configurator","isUserSelected":true,"isEditable":true,"isEnabled":true,"name":"postbuildeditor","isSelected":true,"id":"studiocomproot-Advanced_Configurators-postbuildeditor"}],"isEnabled":true,"name":"Advanced Configurators","id":"studiocomproot-Advanced_Configurators","label":"Advanced Configurators","type":"category"},{"children":[{"children":[{"keyWords":"coremark","componentId":"coremark","isConfigurable":false,"documentation":"","description":"CoreMark component provides a way to measure the performance of central processing units (CPU) used in embedded systems, CoreMark is a simple, yet sophisticated benchmark that is designed specifically to test the functionality of a processor core. Running CoreMark produces a single-number score allowing users to make quick comparisons between processors. Note: For more information related to CoreMark library, please refer https://www.eembc.org/coremark/\n","instantiable":false,"label":"Coremark Benchmark","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Application|studiocomproot-Application-Benchmark|studiocomproot-Application-Benchmark-coremark","isEditable":false,"isEnabled":true,"name":"coremark","isSelected":false,"id":"studiocomproot-Application-Benchmark-coremark"}],"isEnabled":true,"name":"Benchmark","id":"studiocomproot-Application-Benchmark","label":"Benchmark","type":"category"},{"children":[{"keyWords":"app_queue","componentId":"app_queue","isConfigurable":false,"documentation":"","description":"The Application Queue component simplifies the implementation of homogeneous queues. It provides an API for static allocation of fixed-size elements. The implementation is based on a circular buffer of fixed-size items. A buffer overflow callback can be passed to the queue in order to handle overflow events as requested.\n","instantiable":false,"label":"Application Queue","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-app_queue","isEditable":false,"isEnabled":true,"name":"app_queue","isSelected":true,"id":"studiocomproot-Application-Utility-app_queue"},{"keyWords":"app_rta","componentId":"app_rta","isConfigurable":false,"documentation":"","description":"Application Runtime Adaptor (RTA) component provides runtime context for application level software components.\n\nThe runtime context implementation is available for bare-metal, FreeRTOS and Micrium OS.\n\nThe Application Runtime Adaptor handles task creation based on the module preferences utilizing the underlying OS. Provides a common API for basic internal state protection (mutexing), signalling (semaphore) and queueing.\n\nFor bare-metal Application Runtime Adaptor provides a seamless integration with the system.\n","instantiable":false,"label":"Application Runtime Adaptor (RTA)","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-app_rta","isEditable":false,"isEnabled":true,"name":"app_rta","isSelected":true,"id":"studiocomproot-Application-Utility-app_rta"},{"keyWords":"app_assert","componentId":"app_assert","isConfigurable":true,"documentation":"","description":"The Assert component aborts the program if assertion is false, which helps to find bugs in the programs or abort the program with or without logs. Assert log contains the assertion text.\n","instantiable":false,"label":"Assert","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-app_assert","isEditable":true,"isEnabled":true,"name":"app_assert","isSelected":true,"id":"studiocomproot-Application-Utility-app_assert"},{"keyWords":"bluetooth_ncp_transport_cpc","componentId":"bluetooth_ncp_transport_cpc","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/bluetooth-ncp-transport","description":"Component that provides transport layer for Bluetooth NCP over CPC.\n","instantiable":false,"label":"Bluetooth NCP Transport over CPC","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-bluetooth_ncp_transport_cpc","isEditable":false,"isEnabled":true,"name":"bluetooth_ncp_transport_cpc","isSelected":false,"id":"studiocomproot-Application-Utility-bluetooth_ncp_transport_cpc"},{"keyWords":"bluetooth_ncp_transport_iostream","componentId":"bluetooth_ncp_transport_iostream","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/bluetooth-ncp-transport","description":"Component that provides transport layer for Bluetooth NCP over IO Stream.\nIO Stream type and instance can be configured in the configuration file, but the given IO Stream type or instance is required to be present in the project.\n","instantiable":false,"label":"Bluetooth NCP Transport over IO Stream","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-bluetooth_ncp_transport_iostream","isEditable":false,"isEnabled":true,"name":"bluetooth_ncp_transport_iostream","isSelected":false,"id":"studiocomproot-Application-Utility-bluetooth_ncp_transport_iostream"},{"keyWords":"bluetooth_ncp_transport_usart","componentId":"bluetooth_ncp_transport_usart","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/bluetooth-ncp-transport","description":"Component that provides transport layer for Bluetooth NCP over USART.\nThis is a No-Code component if used together with NCP Interface or NCP Host Communication Interface components.\n","instantiable":false,"label":"Bluetooth NCP Transport over USART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-bluetooth_ncp_transport_usart","isEditable":false,"isEnabled":true,"name":"bluetooth_ncp_transport_usart","isSelected":false,"id":"studiocomproot-Application-Utility-bluetooth_ncp_transport_usart"},{"keyWords":"app_button_press","componentId":"app_button_press","isConfigurable":true,"documentation":"","description":"The Button Press component is used for handling the button state, button states are: 1) Button is not pressed, 2) Button is pressed for a short duration, 3) Button is pressed for a medium duration, 4) Button is pressed for a long duration, 5) Button is pressed for a very long duration and 6) Button has just been pressed down. Button press duration for various lengths is configurable.\n","instantiable":false,"label":"Button Press","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-app_button_press","isEditable":true,"isEnabled":true,"name":"app_button_press","isSelected":true,"id":"studiocomproot-Application-Utility-app_button_press"},{"keyWords":"app_scheduler_memory_dynamic","componentId":"app_scheduler_memory_dynamic","isConfigurable":false,"documentation":"","description":"This component implements dynamic memory management for the Scheduler component. If memory the is free, it is allocated. Otherwise the component returns 'No more resources'.\nNote: Allocated resource must be freed to avoid memory leakages.\n","instantiable":false,"label":"Dynamic memory management implementation for the Scheduler","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-app_scheduler_memory_dynamic","isEditable":false,"isEnabled":true,"name":"app_scheduler_memory_dynamic","isSelected":false,"id":"studiocomproot-Application-Utility-app_scheduler_memory_dynamic"},{"keyWords":"app_em4h_reset","componentId":"app_em4h_reset","isConfigurable":false,"documentation":"","description":"The EM4H-Reset component provides unlatch pin retention when returning from EM4. In order to have a constantly running oscillator with correct tuning values re-apply tuning value before unlatching.\n","instantiable":false,"label":"EM4H-Reset","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-app_em4h_reset","isEditable":false,"isEnabled":true,"name":"app_em4h_reset","isSelected":false,"id":"studiocomproot-Application-Utility-app_em4h_reset"},{"keyWords":"app_log","componentId":"app_log","isConfigurable":true,"documentation":"","description":"The Log component provides the logging functionality at different levels: 1) INFO 2) DEBUG 3) ERROR 4) WARNING 5) CRITICAL stream type and stream instance are configurable options, the default stream type is UART and stream instance is VCOM. Other configuration options include log level, logging color, log timing and more.\n","instantiable":false,"label":"Log","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-app_log","isEditable":true,"isEnabled":true,"name":"app_log","isSelected":true,"id":"studiocomproot-Application-Utility-app_log"},{"keyWords":"app_scheduler","componentId":"app_scheduler","isConfigurable":true,"documentation":"","description":"The Scheduler component helps with handling events and scheduling tasks for execution. It can be used to enqueue task functions with specified data from interrupt and other contexts and then to run them strictly from the main loop - when running on bare metal. Data is stored in the memory management implementation component that can be static or dynamic. The component enables pausing and resuming the execution. It also uses Power Manager to prevent sleep when there is a triggered task to be executed.\n","instantiable":false,"label":"Scheduler","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-app_scheduler","isEditable":false,"isEnabled":true,"name":"app_scheduler","isSelected":false,"id":"studiocomproot-Application-Utility-app_scheduler"},{"keyWords":"app_scheduler_memory_static","componentId":"app_scheduler_memory_static","isConfigurable":false,"documentation":"","description":"This component provides a static memory management implementation for the Scheduler component. It provides APIs for allocating and freeing memory.\n","instantiable":false,"label":"Static memory management implementation for the Scheduler","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-app_scheduler_memory_static","isEditable":false,"isEnabled":true,"name":"app_scheduler_memory_static","isSelected":false,"id":"studiocomproot-Application-Utility-app_scheduler_memory_static"},{"keyWords":"app_timer","componentId":"app_timer","isConfigurable":false,"documentation":"","description":"Timer service for applications with less strict timing requirements. This module is based on the sleeptimer, but runs the timer callbacks in non-interrupt context. This behavior gives more flexibility for the callback implementation but causes a less precise timing. If your application requires precise timing, please use the sleeptimer directly.\n","instantiable":false,"label":"Timer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Application|studiocomproot-Application-Utility|studiocomproot-Application-Utility-app_timer","isEditable":false,"isEnabled":true,"name":"app_timer","isSelected":true,"id":"studiocomproot-Application-Utility-app_timer"}],"isEnabled":true,"name":"Utility","id":"studiocomproot-Application-Utility","label":"Utility","type":"category"}],"isEnabled":true,"name":"Application","id":"studiocomproot-Application","label":"Application","type":"category"},{"children":[{"children":[{"children":[{"keyWords":"app_ota_dfu","componentId":"app_ota_dfu","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/app-ota-dfu","description":"Component that provides over-the-air (OTA) device firmware update (DFU) functionality in user application during runtime. No need to enter a specialized OTA state to update, and no AppLoader utility required. No code is required from user to enable this component.\n","instantiable":false,"label":"Application OTA DFU","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Firmware_Update|studiocomproot-Bluetooth-Application-Firmware_Update-app_ota_dfu","isEditable":false,"isEnabled":true,"name":"app_ota_dfu","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Firmware_Update-app_ota_dfu"},{"keyWords":"bt_post_build","componentId":"bt_post_build","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/bt-post-build","description":"Post build scripts for BLE applications.","instantiable":false,"label":"BLE Post Build","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Firmware_Update|studiocomproot-Bluetooth-Application-Firmware_Update-bt_post_build","isEditable":false,"isEnabled":true,"name":"bt_post_build","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Firmware_Update-bt_post_build"},{"keyWords":"in_place_ota_dfu","componentId":"in_place_ota_dfu","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/in-place-ota-dfu","description":"Component that provides in-place over-the-air (OTA) device firmware update (DFU) functionality. In this solution, the application flash area is used as a temporary storage for the update.\nThis is a Low-Code component because additional security measures might be needed from user side for checking the correct security status. Our minimal solution can be seen in\nsl_bt_in_place_ota_dfu_security_status()\nfunction in sl_bt_in_place_ota_dfu.c file.\n","instantiable":false,"label":"In-Place OTA DFU","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Firmware_Update|studiocomproot-Bluetooth-Application-Firmware_Update-in_place_ota_dfu","isEditable":false,"isEnabled":true,"name":"in_place_ota_dfu","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Firmware_Update-in_place_ota_dfu"}],"isEnabled":true,"name":"Firmware Update","id":"studiocomproot-Bluetooth-Application-Firmware_Update","label":"Firmware Update","type":"category"},{"children":[{"keyWords":"esl_tag_core","componentId":"esl_tag_core","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/esl-tag-core","description":"Implements the ESL Tag role of the Bluetooth Electronic Shelf Label Profile. It contains the mandatory ESL Tag characteristics, only. Optional features has to be added to the project as separate components, if needed. This component implements all the core functionalities, while also declares the interface of the optional features (and provides the WEAK implementations for them).\nThis is a No-Code component, any additional feature can be added as a component.\n","instantiable":false,"label":"ESL Tag core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Profiles|studiocomproot-Bluetooth-Application-GATT_Profiles-esl_tag_core","isEditable":false,"isEnabled":true,"name":"esl_tag_core","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Profiles-esl_tag_core"},{"keyWords":"ots_client","componentId":"ots_client","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ots-client","description":"The Object Transfer Service (OTS) Object Client provides an API for managing objects on the remote Object Server.\n","instantiable":false,"label":"Object Client","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Profiles|studiocomproot-Bluetooth-Application-GATT_Profiles-ots_client","isEditable":false,"isEnabled":true,"name":"ots_client","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Profiles-ots_client"}],"isEnabled":true,"name":"GATT Profiles","id":"studiocomproot-Bluetooth-Application-GATT_Profiles","label":"GATT Profiles","type":"category"},{"children":[{"keyWords":"gatt_service_gas","componentId":"gatt_service_gas","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-gas","description":"Provides air quality sensor data in GATT characteristics. Designed for the Thunderboard smartphone app.\n","instantiable":false,"label":"Air Quality GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_gas","isEditable":false,"isEnabled":true,"name":"gatt_service_gas","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_gas"},{"keyWords":"gatt_service_aio","componentId":"gatt_service_aio","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-aio","description":"Provides the LEDs and buttons in GATT characteristics. Designed for the Thunderboard smartphone app.\n","instantiable":false,"label":"Automation IO GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_aio","isEditable":false,"isEnabled":true,"name":"gatt_service_aio","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_aio"},{"keyWords":"gatt_service_battery","componentId":"gatt_service_battery","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-battery","description":"Provides battery sensor data in GATT characteristics. Designed for the Thunderboard smartphone app.\n","instantiable":false,"label":"Battery GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_battery","isEditable":true,"isEnabled":true,"name":"gatt_service_battery","isSelected":true,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_battery"},{"keyWords":"gatt_service_cte","componentId":"gatt_service_cte","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-cte","description":"Constant Tone Extension GATT Service reference implementation for ACL connection.\nThe CTE mode (AoA or AoD) depends on the presence of the AoD Transmitter Bluetooth stack feature.\nLimitations:\n- The Bluetooth SIG specifies bit 1 of the Constant Tone Extension Enable characteristic to enable/disable AoD Constant Tone Extension in advertising packets. This runtime configuration is not supported by this component. If any of the advertising CTE components are added to the project, the CTE in the advertising packets is enabled automatically upon system boot.\n- The AoD mode parameters are configured globally in this component.\n","instantiable":false,"label":"Constant Tone Extension GATT Service (Connection)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_cte","isEditable":false,"isEnabled":true,"name":"gatt_service_cte","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_cte"},{"keyWords":"gatt_service_cte_connectionless","componentId":"gatt_service_cte_connectionless","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-cte-connectionless","description":"Constant Tone Extension GATT Service reference implementation for periodic advertising.\nLimitations:\n- The Bluetooth SIG specifies to maintain a list about the characteristic values for each client and take the largest/smallest value. Instead of this, the latest valid value will take effect.\n- The Advertising Constant Tone Extension Transmit Duration characteristic is not implemented.\n- The AoD mode parameters are configured globally in the Constant Tone Extension GATT Service (Connection) component.\n","instantiable":false,"label":"Constant Tone Extension GATT Service (Connectionless)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_cte_connectionless","isEditable":false,"isEnabled":true,"name":"gatt_service_cte_connectionless","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_cte_connectionless"},{"keyWords":"gatt_service_cte_silabs","componentId":"gatt_service_cte_silabs","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-cte-silabs","description":"Constant Tone Extension GATT Service reference implementation for extended advertising.\nThis Silabs proprietary solution uses the same characteristics as the standard Bluetooth SIG solution.\nLimitations:\n- The Bluetooth SIG specifies to maintain a list about the characteristic values for each client and take the largest/smallest value. Instead of this, the latest valid value will take effect.\n- The Advertising Constant Tone Extension Transmit Duration characteristic is not implemented.\n- The AoD mode parameters are configured globally in the Constant Tone Extension GATT Service (Connection) component.\n","instantiable":false,"label":"Constant Tone Extension GATT Service (Silabs proprietary)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_cte_silabs","isEditable":false,"isEnabled":true,"name":"gatt_service_cte_silabs","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_cte_silabs"},{"keyWords":"gatt_service_device_information","componentId":"gatt_service_device_information","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-device-information","description":"This component provides the default values for the characteristics under the Device Information service upon boot event.\n","instantiable":false,"label":"Device Information GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_device_information","isEditable":false,"isEnabled":true,"name":"gatt_service_device_information","isSelected":true,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_device_information"},{"keyWords":"esl_tag_display","componentId":"esl_tag_display","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/esl-tag-display","description":"Extends the Bluetooth Electronic Shelf Label design with display class capabilities and its corresponding ESL Display Information characteristic. This is an abstract display class, only. A user defined low level driver implementation for the actual display is needed. See ESL Tag WSTK LCD driver as a reference, hence this is a Custom-Code component.\n","instantiable":false,"label":"ESL Tag Display","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Custom-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-esl_tag_display","isEditable":false,"isEnabled":true,"name":"esl_tag_display","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-esl_tag_display"},{"keyWords":"esl_tag_led","componentId":"esl_tag_led","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/esl-tag-led","description":"Extends the Bluetooth Electronic Shelf Label design with LED class capabilities and its corresponding ESL LED Information characteristic. This is an abstract LED class, only. A user defined low level driver implementation for the actual LED control is needed. See SoC ESL Tag example as an implementation reference, hence this is a Custom-Code component.\n","instantiable":false,"label":"ESL Tag LED","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Custom-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-esl_tag_led","isEditable":false,"isEnabled":true,"name":"esl_tag_led","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-esl_tag_led"},{"keyWords":"esl_tag_nvm_image","componentId":"esl_tag_nvm_image","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/esl-tag-nvm-image","description":"Extends the Bluetooth Electronic Shelf Label design with image handling capabilities and associated features, including OTS image transfer capability as per ESL profile and service specifications. Best suited for larger multi-colour displays.\n\nThis component utilizes the non-volatile memory on the target MCU.\nThis is a Low-Code component. For reference API usage please see Bluetooth - SoC ESL Tag example application.\n","instantiable":false,"label":"ESL Tag NVM Image","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-esl_tag_nvm_image","isEditable":false,"isEnabled":true,"name":"esl_tag_nvm_image","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-esl_tag_nvm_image"},{"keyWords":"esl_tag_ram_image","componentId":"esl_tag_ram_image","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/esl-tag-ram-image","description":"Extends the Bluetooth Electronic Shelf Label design with image handling capabilities and its corresponding characteristics, including OTS image transfer service with the limited feature set required by the ESL Profile and Service Specifications. Best fit for tiny, monochrome displays.\nThis component utilizes the static RAM on the target MCU.\nThis is a Low-Code component. For reference API usage please see Bluetooth - SoC ESL Tag example application.\n","instantiable":false,"label":"ESL Tag RAM Image","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-esl_tag_ram_image","isEditable":false,"isEnabled":true,"name":"esl_tag_ram_image","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-esl_tag_ram_image"},{"keyWords":"esl_tag_sensor","componentId":"esl_tag_sensor","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/esl-tag-sensor","description":"Extends the Bluetooth Electronic Shelf Label example design with ESL Sensor class capabilities and its corresponding ESL Sensor Information characteristic. This is an abstract sensor class, while it may also provide a few useful sensor instances for demonstration purposes. PLEASE NOTE that this component automatically registers those sensors which are enabled in the configuration header at the beginning of the sensor list (from index 0). More supported sensors can be added later by custom needs. To add your custom sensors please invoke the esl_sensor_add(<your_property_id>) method from esl_core_boot_event() callback and then implement the provided esl_read_user_sensor() method accordingly.\nThis is a Custom-Code component.\n","instantiable":false,"label":"ESL Tag Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Custom-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-esl_tag_sensor","isEditable":false,"isEnabled":true,"name":"esl_tag_sensor","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-esl_tag_sensor"},{"keyWords":"gatt_service_pressure","componentId":"gatt_service_pressure","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-pressure","description":"Provides air pressure sensor data in GATT characteristics. Designed for the Thunderboard smartphone app.\n","instantiable":false,"label":"Environment Sensing - Air Pressure GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_pressure","isEditable":false,"isEnabled":true,"name":"gatt_service_pressure","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_pressure"},{"keyWords":"gatt_service_lux","componentId":"gatt_service_lux","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-lux","description":"Provides ambient light sensor data in GATT characteristics. Designed for the Thunderboard smartphone app.\n","instantiable":false,"label":"Environment Sensing - Ambient Light GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_lux","isEditable":false,"isEnabled":true,"name":"gatt_service_lux","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_lux"},{"keyWords":"gatt_service_light","componentId":"gatt_service_light","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-light","description":"Provides ambient light and UV index sensor data in GATT characteristics. Designed for the Thunderboard smartphone app.\n","instantiable":false,"label":"Environment Sensing - Ambient Light and UV Index GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_light","isEditable":false,"isEnabled":true,"name":"gatt_service_light","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_light"},{"keyWords":"gatt_service_rht","componentId":"gatt_service_rht","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-rht","description":"Provides relative humidity and temperature sensor data in GATT characteristics. Designed for the Thunderboard smartphone app.\n","instantiable":false,"label":"Environment Sensing - Relative Humidity and Temperature GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_rht","isEditable":false,"isEnabled":true,"name":"gatt_service_rht","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_rht"},{"keyWords":"gatt_service_sound","componentId":"gatt_service_sound","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-sound","description":"Provides microphone sound level data in GATT characteristics. Designed for the Thunderboard smartphone app.\n","instantiable":false,"label":"Environment Sensing - Sound Level GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_sound","isEditable":false,"isEnabled":true,"name":"gatt_service_sound","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_sound"},{"keyWords":"gatt_service_hall","componentId":"gatt_service_hall","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-hall","description":"Provides hall sensor data in GATT characteristics. Designed for the Thunderboard smartphone app.\n","instantiable":false,"label":"Hall Effect GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_hall","isEditable":false,"isEnabled":true,"name":"gatt_service_hall","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_hall"},{"keyWords":"health_thermometer","componentId":"health_thermometer","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/health-thermometer","description":"API for the Health Thermometer GATT service\nThis is a Low-Code component. At start, the temperature sensor has to be initialized. Once the BLE connection is established, the\nsl_bt_ht_temperature_measurement_indication_changed_cb()\nfunction will be called where either a single measurement can be done, or a timer started. A reference implementation for this function can be found in Bluetooth - SoC Thermometer example, in app.c file. The result of the measurement can be send using\nsl_bt_ht_temperature_measurement_indicate()\nfunction.","instantiable":false,"label":"Health Thermometer API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-health_thermometer","isEditable":false,"isEnabled":true,"name":"health_thermometer","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-health_thermometer"},{"keyWords":"gatt_service_imu","componentId":"gatt_service_imu","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-imu","description":"Provides inertial measurement unit sensor data in GATT characteristics. Designed for the Thunderboard smartphone app.\n","instantiable":false,"label":"Inertial Measurement Unit GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_imu","isEditable":false,"isEnabled":true,"name":"gatt_service_imu","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_imu"},{"keyWords":"ots_server","componentId":"ots_server","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ots-server","description":"The Object Transfer Service(OTS) Static Object Server provides an instance of OTS Object Server implemented using static GATT.\nThis component is instantiable, meaning that several named instances can be created. For each instance, a configuration header, an instance header and a source file is generated to encapsulate functionalities and initialize and manage the instance.\nThese instance variables are available in a generated header file, sl_bt_ots_server_instances.h.\nThe instances are initialized automatically after the boot event of the Bluetooth stack.\nSelecting this component will include the Object Transfer Service (OTS) Object Server Core component, which is the implementation of the OTS Object Server API.\n","instantiable":true,"label":"Object Server","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-ots_server","isEditable":false,"isEnabled":true,"name":"ots_server","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-ots_server"},{"keyWords":"gatt_service_rgb","componentId":"gatt_service_rgb","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-service-rgb","description":"Provides RGB LED controls in GATT characteristics. Designed for the Thunderboard smartphone app.\n","instantiable":false,"label":"RGB LED GATT Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_rgb","isEditable":false,"isEnabled":true,"name":"gatt_service_rgb","isSelected":false,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_service_rgb"},{"keyWords":"gatt_configuration","componentId":"gatt_configuration","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/gatt-configuration","description":"Adds a basic, static GATT database. It can be customized by the GATT Configurator tool. It is compatible with the Dynamic GATT feature <bluetooth_feature_dynamic_gattdb> - static and dynamic GATT databases can co-exist. It will also provide the GATT Configurator tool.\n","instantiable":false,"label":"Static GATT Database and Configuration","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-GATT_Services|studiocomproot-Bluetooth-Application-GATT_Services-gatt_configuration","isEditable":true,"isEnabled":true,"name":"gatt_configuration","isSelected":true,"id":"studiocomproot-Bluetooth-Application-GATT_Services-gatt_configuration"}],"isEnabled":true,"name":"GATT Services","id":"studiocomproot-Bluetooth-Application-GATT_Services","label":"GATT Services","type":"category"},{"children":[{"keyWords":"sensor_light","componentId":"sensor_light","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/sensor-light","description":"Ambient light and UV index sensor driver abstraction designed for Thunderboard. Not suitable for other applications.","instantiable":false,"label":"Ambient light and UV index sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-sensor_light","isEditable":false,"isEnabled":true,"name":"sensor_light","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-sensor_light"},{"keyWords":"sensor_light_lux_mock","componentId":"sensor_light_lux_mock","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/sensor-light-lux-mock","description":"Ambient light and UV index sensor (Mock) driver abstraction.","instantiable":false,"label":"Ambient light and UV index sensor (Mock)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-sensor_light_lux_mock","isEditable":false,"isEnabled":true,"name":"sensor_light_lux_mock","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-sensor_light_lux_mock"},{"keyWords":"sensor_lux","componentId":"sensor_lux","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/sensor-lux","description":"Ambient light sensor driver abstraction designed for development boards with VEML6035 sensor, i.e. Thunderboard and Dev Kit. Not suitable for other applications.","instantiable":false,"label":"Ambient light sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-sensor_lux","isEditable":false,"isEnabled":true,"name":"sensor_lux","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-sensor_lux"},{"keyWords":"ble_peer_manager_central","componentId":"ble_peer_manager_central","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ble-peer-manager-central","description":"Peer Manager for Bluetooth Low Energy. Responsible for scanning and creating connections. Filters can be used for setting Bluetooth specific parameters.\n","instantiable":false,"label":"BLE Peer Manager Central","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-ble_peer_manager_central","isEditable":false,"isEnabled":true,"name":"ble_peer_manager_central","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-ble_peer_manager_central"},{"keyWords":"ble_peer_manager_common","componentId":"ble_peer_manager_common","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ble-peer-manager-common","description":"Peer Manager for Bluetooth Low Energy. Responsible for advertising and creating connections. The user can set the advertising parameters.\n","instantiable":false,"label":"BLE Peer Manager Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-ble_peer_manager_common","isEditable":false,"isEnabled":true,"name":"ble_peer_manager_common","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-ble_peer_manager_common"},{"keyWords":"ble_peer_manager_filter","componentId":"ble_peer_manager_filter","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ble-peer-manager-filter","description":"Peer Manager for Bluetooth Low Energy. Responsible for advertising and creating connections. The user can set the advertising parameters.\n","instantiable":false,"label":"BLE Peer Manager Filter","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-ble_peer_manager_filter","isEditable":false,"isEnabled":true,"name":"ble_peer_manager_filter","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-ble_peer_manager_filter"},{"keyWords":"ble_peer_manager_peripheral","componentId":"ble_peer_manager_peripheral","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ble-peer-manager-peripheral","description":"Peer Manager for Bluetooth Low Energy. Responsible for advertising and creating connections. The user can set the advertising parameters.\n","instantiable":false,"label":"BLE Peer Manager Peripheral","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-ble_peer_manager_peripheral","isEditable":false,"isEnabled":true,"name":"ble_peer_manager_peripheral","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-ble_peer_manager_peripheral"},{"keyWords":"bt_ipc_listener","componentId":"bt_ipc_listener","isConfigurable":true,"documentation":"","description":"Listens to Bluetooth events published by the Bluetooth Event System IPC (inter-process communication) component.\nThis component subscribes the bluetooth event callbacks provided by the application and other components to Bluetooth events. Creates an RTOS task and calls the callbacks from that context.\n","instantiable":false,"label":"Bluetooth IPC Listener","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-bt_ipc_listener","isEditable":false,"isEnabled":true,"name":"bt_ipc_listener","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-bt_ipc_listener"},{"keyWords":"cs_acp","componentId":"cs_acp","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/cs-acp","description":"Channel Sounding (CS) Application Co-Processor (ACP) provides the ACP commands and events to the CS device roles.\n","instantiable":false,"label":"CS ACP","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-cs_acp","isEditable":false,"isEnabled":true,"name":"cs_acp","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-cs_acp"},{"keyWords":"cs_antenna","componentId":"cs_antenna","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/cs-antenna","description":"Channel Sounding (CS) Antenna manages CS antenna offset settings.\n","instantiable":false,"label":"CS Antenna","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-cs_antenna","isEditable":false,"isEnabled":true,"name":"cs_antenna","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-cs_antenna"},{"keyWords":"cs_initiator_cli","componentId":"cs_initiator_cli","isConfigurable":false,"documentation":"","description":"Command Line Interface (CLI) for the CS Initiator example. Serves testing purposes only.\n","instantiable":false,"label":"CS Initiator CLI","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-cs_initiator_cli","isEditable":false,"isEnabled":true,"name":"cs_initiator_cli","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-cs_initiator_cli"},{"keyWords":"cs_initiator_display","componentId":"cs_initiator_display","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/cs-initiator-display","description":"Prints Channel Sounding (CS) Initiator status information to the LCD of the WSTK.\n","instantiable":false,"label":"CS Initiator Display","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-cs_initiator_display","isEditable":false,"isEnabled":true,"name":"cs_initiator_display","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-cs_initiator_display"},{"keyWords":"cs_ras","componentId":"cs_ras","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/cs-ras","description":"Channel Sounding (CS) Ranging Service (RAS) is used for parsing RAS GATT messages as well as creating RAS GATT responses.\n","instantiable":false,"label":"CS Ranging Service","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-cs_ras","isEditable":false,"isEnabled":true,"name":"cs_ras","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-cs_ras"},{"keyWords":"cs_reflector_cli","componentId":"cs_reflector_cli","isConfigurable":false,"documentation":"","description":"Command Line Interface (CLI) for the CS Reflector example. Serves testing purposes only.\n","instantiable":false,"label":"CS Reflector CLI","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-cs_reflector_cli","isEditable":false,"isEnabled":true,"name":"cs_reflector_cli","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-cs_reflector_cli"},{"keyWords":"cbap","componentId":"cbap","isConfigurable":true,"documentation":"","description":"Handles the certificate and OOB data authentication.\n","instantiable":false,"label":"Certificate Based Authentication and Pairing","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-cbap","isEditable":false,"isEnabled":true,"name":"cbap","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-cbap"},{"keyWords":"esl_tag_user_display_driver","componentId":"esl_tag_user_display_driver","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/esl-tag-user-display-driver","description":"This component provides skeleton code for a user defined display driver - to be filled in with actual low level driver code for driving any arbitrary ESL Tag display type. See the Doxygen comments in the header file on usage.\nThis is a Custom-Code component.\n","instantiable":false,"label":"ESL Tag User Defined Display Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Custom-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-esl_tag_user_display_driver","isEditable":false,"isEnabled":true,"name":"esl_tag_user_display_driver","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-esl_tag_user_display_driver"},{"keyWords":"esl_tag_wstk_lcd_driver","componentId":"esl_tag_wstk_lcd_driver","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/esl-tag-wstk-lcd-driver","description":"This component is an example of a low level driver implementation for the LCD memory display mounted on the WSTK Developer Board, to be used with an ESL Tag Display component. PLEASE NOTE that this driver automatically registers the WSTK LCD screen as the first display on the ESL Tag!\n","instantiable":false,"label":"ESL Tag WSTK LCD driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-esl_tag_wstk_lcd_driver","isEditable":false,"isEnabled":true,"name":"esl_tag_wstk_lcd_driver","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-esl_tag_wstk_lcd_driver"},{"keyWords":"esl_tag_pd_epd_driver","componentId":"esl_tag_pd_epd_driver","isConfigurable":true,"documentation":"","description":"This component is an example of a low-level driver implementation for the e-paper displays offered by Pervasive Display company. It is intended to be used in conjunction with the ESL Tag Display component. Supports the small-sized monochrome and tricolor EPDs in the vendor's product portfolio.\nAfter adding this component to a project, it is recommended to replace the ESL Tag RAM Image component with ESL Tag NVM Image due to the possible increased image storage requirements, especially for larger displays with multiple colours. Also consider increasing the number of ESL Tag Display instances and Image objects if necessary.\n","instantiable":false,"label":"ESL Tag e-paper display driver for Pervasive Display","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-esl_tag_pd_epd_driver","isEditable":false,"isEnabled":true,"name":"esl_tag_pd_epd_driver","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-esl_tag_pd_epd_driver"},{"keyWords":"ead_core","componentId":"ead_core","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ead-core","description":"Provides simple to use API for Advertising, Periodic Advertising and Scan Response data encryption and decryption that is compatible with the Bluetooth Core Encrypted Advertisement Data (EAD) enhancement.\nFor the usage of the APIs defined in sl_bt_ead_core.h please see\nesl_core_encrypt_message(void *msg, uint8_t *len) and\nesl_core_decrypt_message(void *msg, uint8_t *len)\nfunctions in esl_tag_crypto.c within ESL Tag core component.\n","instantiable":false,"label":"Encrypted Advertising Data core API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Custom-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-ead_core","isEditable":false,"isEnabled":true,"name":"ead_core","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-ead_core"},{"keyWords":"iostream_bgapi_trace","componentId":"iostream_bgapi_trace","isConfigurable":false,"documentation":"","description":"This component enables the redirection of app log messages into custom BGAPI Trace messages.\n","instantiable":false,"label":"IO Stream interface over BGAPI Trace","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-iostream_bgapi_trace","isEditable":false,"isEnabled":true,"name":"iostream_bgapi_trace","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-iostream_bgapi_trace"},{"keyWords":"l2cap_transfer","componentId":"l2cap_transfer","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/l2cap-transfer","description":"The L2CAP data channel component is used to transfer data through the link layer. The component serves as an API to access the L2CAP data transfer functionalites.\n","instantiable":false,"label":"L2CAP transfer","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-l2cap_transfer","isEditable":false,"isEnabled":true,"name":"l2cap_transfer","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-l2cap_transfer"},{"keyWords":"otf_decompressor","componentId":"otf_decompressor","isConfigurable":false,"documentation":"","description":"An algorithm that can take an LZJB-compressed data stream transmitted in arbitrarily sized chunks (e.g. over a BLE connection with limited MTU size) and decompress it on-the-fly into a single, coherent memory output.\nThe input stream must have no metadata or headers included, just the raw compressed data.\n","instantiable":false,"label":"On-the-fly LZJB Stream Decompressor","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-otf_decompressor","isEditable":false,"isEnabled":true,"name":"otf_decompressor","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-otf_decompressor"},{"keyWords":"power_supply","componentId":"power_supply","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/power-supply","description":"Power supply measurement HW abstraction designed for development boards with coin cell battery support, i.e. Thunderboard and Dev Kit. Not suitable for other applications.","instantiable":false,"label":"Power supply measurement","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-power_supply","isEditable":false,"isEnabled":true,"name":"power_supply","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-power_supply"},{"keyWords":"sensor_rht","componentId":"sensor_rht","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/sensor-rht","description":"Relative Humidity and Temperature sensor driver abstraction designed for Thunderboard. Not suitable for other applications.","instantiable":false,"label":"Relative Humidity and Temperature sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-sensor_rht","isEditable":false,"isEnabled":true,"name":"sensor_rht","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-sensor_rht"},{"keyWords":"sensor_rht_mock","componentId":"sensor_rht_mock","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/sensor-rht-mock","description":"Relative Humidity and Temperature sensor (Mock) driver abstraction.","instantiable":false,"label":"Relative Humidity and Temperature sensor (Mock)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-sensor_rht_mock","isEditable":false,"isEnabled":true,"name":"sensor_rht_mock","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-sensor_rht_mock"},{"keyWords":"wake_lock","componentId":"wake_lock","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/wake-lock","description":"Component that provides support for sleep and remote wake-up functionality. The UART driver is not able to receive data in EM2 (deep sleep) mode, therefore an external signal is needed to wake the controller up before UART communication. This component can be used with NCP host and NCP target applications. Waking up is automatic after signal arrival, but application has to decide about sleep. This functionality requires two dedicated pins to work.\nThis is a No-Code component if used together with NCP Interface or NCP Host Communication Interface components.\n","instantiable":false,"label":"Wake-Lock","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-wake_lock","isEditable":false,"isEnabled":true,"name":"wake_lock","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-wake_lock"},{"keyWords":"ibeacon","componentId":"ibeacon","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ibeacon","description":"iBeacon component for beacon advertising\nThis is a No-Code component.","instantiable":false,"label":"iBeacon","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Miscellaneous|studiocomproot-Bluetooth-Application-Miscellaneous-ibeacon","isEditable":false,"isEnabled":true,"name":"ibeacon","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Miscellaneous-ibeacon"}],"isEnabled":true,"name":"Miscellaneous","id":"studiocomproot-Bluetooth-Application-Miscellaneous","label":"Miscellaneous","type":"category"},{"children":[{"keyWords":"ncp_gatt","componentId":"ncp_gatt","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ncp-gatt","description":"Composes the GATT database on the NCP target using the Dynamic GATT API.\nThis is a No-Code component.\n","instantiable":false,"label":"NCP GATT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-NCP_Host_Demo|studiocomproot-Bluetooth-Application-NCP_Host_Demo-ncp_gatt","isEditable":false,"isEnabled":true,"name":"ncp_gatt","isSelected":false,"id":"studiocomproot-Bluetooth-Application-NCP_Host_Demo-ncp_gatt"},{"keyWords":"bluetooth_api_ncp_host","componentId":"bluetooth_api_ncp_host","isConfigurable":false,"documentation":"","description":"Bluetooth API for NCP host and the adaptation between host application and SL_BT_API protocol\nThis component does not require Bluetooth core or other Bluetooth features.\n","instantiable":false,"label":"NCP Host API and Adaptation","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-NCP_Host_Demo|studiocomproot-Bluetooth-Application-NCP_Host_Demo-bluetooth_api_ncp_host","isEditable":false,"isEnabled":true,"name":"bluetooth_api_ncp_host","isSelected":false,"id":"studiocomproot-Bluetooth-Application-NCP_Host_Demo-bluetooth_api_ncp_host"},{"keyWords":"ncp_host_com","componentId":"ncp_host_com","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ncp-host-com","description":"Component that provides the Bluetooth Network Co-Processor (NCP) host communication interface.\nThis is a No-Code component.\n","instantiable":false,"label":"NCP Host Communication Interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-NCP_Host_Demo|studiocomproot-Bluetooth-Application-NCP_Host_Demo-ncp_host_com","isEditable":false,"isEnabled":true,"name":"ncp_host_com","isSelected":false,"id":"studiocomproot-Bluetooth-Application-NCP_Host_Demo-ncp_host_com"}],"isEnabled":true,"name":"NCP Host Demo","id":"studiocomproot-Bluetooth-Application-NCP_Host_Demo","label":"NCP Host Demo","type":"category"},{"children":[{"keyWords":"esl_tag_cli_test_harness","componentId":"esl_tag_cli_test_harness","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/esl-tag-cli-test-harness","description":"CLI Test Harness is an optional component for the ESL Tag example application, providing a set of commands to control and observe the ESL Tag internal behavior directly via a serial terminal.\nThis is a No-Code component, however only meaningful in ESL context.\n","instantiable":false,"label":"CLI Test Harness for ESL Tag application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Test|studiocomproot-Bluetooth-Application-Test-esl_tag_cli_test_harness","isEditable":false,"isEnabled":true,"name":"esl_tag_cli_test_harness","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Test-esl_tag_cli_test_harness"},{"keyWords":"throughput_central","componentId":"throughput_central","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/throughput-central","description":"Throughput Test Receiver (Central) Role API opens connection to Throughput Test Transmitter (Peripheral) Role nodes, registers to notifications or indications. Throughput parameters can be managed using the API calls or via CLI. The API provides interface for configuring, starting and stopping transmission. Status and result callbacks can be also registered using the API.\n","instantiable":false,"label":"Throughput Test Receiver (Central) Role API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Test|studiocomproot-Bluetooth-Application-Test-throughput_central","isEditable":false,"isEnabled":true,"name":"throughput_central","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Test-throughput_central"},{"keyWords":"throughput_peripheral","componentId":"throughput_peripheral","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/throughput-peripheral","description":"Throughput Test Transmitter (Peripheral) Role API acts as a server and accepts connection from Throughput Test Receivers (Central) Role clients. It sends out data via notifications or indications to a registered Central node. Throughput parameters can be managed using the API calls or via CLI. The API provides interface for configuring, starting and stopping transmission. Status and result callbacks can be also registered using the API.\n","instantiable":false,"label":"Throughput Test Transmitter (Peripheral) Role API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Test|studiocomproot-Bluetooth-Application-Test-throughput_peripheral","isEditable":false,"isEnabled":true,"name":"throughput_peripheral","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Test-throughput_peripheral"},{"keyWords":"throughput","componentId":"throughput","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/throughput","description":"Helper for throughput tests","instantiable":false,"label":"Throughput Test helper","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Test|studiocomproot-Bluetooth-Application-Test-throughput","isEditable":false,"isEnabled":true,"name":"throughput","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Test-throughput"},{"keyWords":"throughput_ui","componentId":"throughput_ui","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/throughput-ui","description":"API for drawing throughput test state and results to LCD","instantiable":false,"label":"Throughput User Interface API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Test|studiocomproot-Bluetooth-Application-Test-throughput_ui","isEditable":false,"isEnabled":true,"name":"throughput_ui","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Test-throughput_ui"},{"keyWords":"throughput_ui_log","componentId":"throughput_ui_log","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/throughput-ui-log","description":"API for printing throughput test state and results to log","instantiable":false,"label":"Throughput User Interface API with logging","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Application|studiocomproot-Bluetooth-Application-Test|studiocomproot-Bluetooth-Application-Test-throughput_ui_log","isEditable":false,"isEnabled":true,"name":"throughput_ui_log","isSelected":false,"id":"studiocomproot-Bluetooth-Application-Test-throughput_ui_log"}],"isEnabled":true,"name":"Test","id":"studiocomproot-Bluetooth-Application-Test","label":"Test","type":"category"}],"isEnabled":true,"name":"Application","id":"studiocomproot-Bluetooth-Application","label":"Application","type":"category"},{"children":[{"keyWords":"apploader","componentId":"apploader","isConfigurable":false,"documentation":"","description":"Bluetooth AppLoader application for OTA DFU for series 2 devices.\nThis component moves the application start address to give space for an AppLoader OTA DFU Bootloader. It also requires a Gecko Bootloader with an AppLoader OTA DFU plugin to be present on the device.\nAppLoader is a minimal version of the Bluetooth stack designed to enable device firmware updates over BLE connections. It allows to update application using in-place update where the old application is directly overwritten with the new one.\n","instantiable":false,"label":"AppLoader Support for Applications","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Apploader|studiocomproot-Bluetooth-Apploader-apploader","isEditable":false,"isEnabled":true,"name":"apploader","isSelected":false,"id":"studiocomproot-Bluetooth-Apploader-apploader"},{"keyWords":"apploader_util","componentId":"apploader_util","isConfigurable":false,"documentation":"","description":"This component provides utility functions related to OTA DFU with Apploader for series 2 devices, such as a unified API for resetting the device to DFU mode.\n","instantiable":false,"label":"AppLoader Utility","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Apploader|studiocomproot-Bluetooth-Apploader-apploader_util","isEditable":false,"isEnabled":true,"name":"apploader_util","isSelected":false,"id":"studiocomproot-Bluetooth-Apploader-apploader_util"},{"keyWords":"apploader_lib_release","componentId":"apploader_lib_release","isConfigurable":false,"documentation":"","description":"Bluetooth AppLoader library for Gecko Bootloader with AppLoader OTA DFU plugin for series 2 devices.\nAppLoader is a minimal version of the Bluetooth stack designed to enable device firmware updates over BLE connections It allows to update application using in-place update where the old application is directly overwritten with the new one.\n","instantiable":false,"label":"AppLoader library for Gecko Bootloader","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Apploader|studiocomproot-Bluetooth-Apploader-apploader_lib_release","isEditable":false,"isEnabled":true,"name":"apploader_lib_release","isSelected":false,"id":"studiocomproot-Bluetooth-Apploader-apploader_lib_release"}],"isEnabled":true,"name":"Apploader","id":"studiocomproot-Bluetooth-Apploader","label":"Apploader","type":"category"},{"children":[{"children":[{"keyWords":"bluetooth_utility_bgapi_trace","componentId":"bluetooth_utility_bgapi_trace","isConfigurable":true,"documentation":"","description":"Bluetooth debugging utility for tracing BGAPI commands and events. Use this component to record a BGAPI trace if instructed by Silicon Labs.\n","instantiable":false,"label":"BGAPI Trace utility","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features-bluetooth_utility_bgapi_trace","isEditable":false,"isEnabled":true,"name":"bluetooth_utility_bgapi_trace","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features-bluetooth_utility_bgapi_trace"},{"keyWords":"bluetooth_on_demand_start","componentId":"bluetooth_on_demand_start","isConfigurable":false,"documentation":"","description":"Allows the application to start or stop the Bluetooth stack on demand. If this component is not included in the build, the Bluetooth stack is automatically started when it's initialized and is never stopped.\nSee the Bluetooth API reference manual section \"System\", commands sl_bt_system_start_bluetooth() and sl_bt_system_stop_bluetooth() for more details.\n","instantiable":false,"label":"Bluetooth on-demand start","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features-bluetooth_on_demand_start","isEditable":false,"isEnabled":true,"name":"bluetooth_on_demand_start","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features-bluetooth_on_demand_start"},{"keyWords":"bluetooth_feature_builtin_bonding_database","componentId":"bluetooth_feature_builtin_bonding_database","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-sm","description":"Configures the Bluetooth stack to include a built-in bonding database. In this configuration the Bluetooth stack stores the bonding data in the local non-volatile memory. APIs for accessing bondings stored in the database are provided by the \"sm\" class.\n","instantiable":false,"label":"Built-in Bluetooth bonding database","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features-bluetooth_feature_builtin_bonding_database","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_builtin_bonding_database","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features-bluetooth_feature_builtin_bonding_database"},{"keyWords":"bluetooth_feature_nvm","componentId":"bluetooth_feature_nvm","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-nvm","description":"NonVolatile Memory  (nvm) feature\nProvides convenient methods for applications in NCP mode to manage user data in NVM3. This feature can only access data stored in the NVM3 key range assigned to Bluetooth. It is not possible to access NVM3 keys out of the Bluetooth assigned range.\nFor applications in SoC mode, it is recommended to use NVM3 APIs directly.\n","instantiable":false,"label":"NVM Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features-bluetooth_feature_nvm","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_nvm","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features-bluetooth_feature_nvm"},{"keyWords":"bluetooth_feature_use_accurate_api_address_types","componentId":"bluetooth_feature_use_accurate_api_address_types","isConfigurable":false,"documentation":"","description":"In the default Bluetooth stack configuration most Bluetooth commands and events use coarse address typing that only differentiates between public (value 0) and any random (value 1) address types.\nThis component changes how the Bluetooth stack interprets and reports Bluetooth address types. When this component is included, Bluetooth commands and events that include an address type will systematically use the sl_bt_gap_address_type_t enumeration to indicate the accurate type.\n","instantiable":false,"label":"Select API semantics that use accurate Bluetooth address types","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features-bluetooth_feature_use_accurate_api_address_types","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_use_accurate_api_address_types","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features-bluetooth_feature_use_accurate_api_address_types"}],"isEnabled":true,"name":"Additional Features","id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Additional_Features","label":"Additional Features","type":"category"},{"children":[{"keyWords":"bluetooth_feature_accept_list","componentId":"bluetooth_feature_accept_list","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-accept-list","description":"The Filter Accept List provides the capability to filter tansmissions from other Bluetooth devices so that the local device only receives/accepts transmissions from the devices that it's interested in or wants to communicate with.\n","instantiable":false,"label":"Device filtering with Bluetooth controller's Filter Accept List","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_accept_list","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_accept_list","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_accept_list"},{"keyWords":"bluetooth_feature_test","componentId":"bluetooth_feature_test","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-test","description":"Bluetooth DTM test feature\n","instantiable":false,"label":"Direct Test Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_test","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_test","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_test"},{"keyWords":"bluetooth_feature_dynamic_gattdb","componentId":"bluetooth_feature_dynamic_gattdb","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-gattdb","description":"Bluetooth dynamic GATT database feature\nThis component enables dynamically creating a GATT database with Bluetooth APIs.\nDynamically-created GATT attributes could coexist with a static database that is generated from a GATT XML file. When a static database is configured to be included (by the SL_BT_GATTDB_INCLUDE_STATIC_DATABASE configuration), its attributes are added at the beginning of the attribute table when Bluetooth stack starts. New services and characteristics created dynamically are appended into the attribute table after the static ones.\nDynamically-created services and characteristics do not support the capability feature (Polymorphic GATT) that was designed for the static database solution.\nSee the configuration of this component and the Bluetooth API reference manual section \"GATT Database\" for more details.\n","instantiable":false,"label":"Dynamic GATT Database","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_dynamic_gattdb","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_dynamic_gattdb","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_dynamic_gattdb"},{"keyWords":"bluetooth_feature_external_bonding_database","componentId":"bluetooth_feature_external_bonding_database","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-external-bondingdb","description":"Configures the Bluetooth stack to operate with an external bonding database. In this configuration the user application takes care of storing the persistent data required for Bluetooth bondings. The Bluetooth stack sends events to the application to store bonding data and to request the application to pass required bonding data to the Bluetooth stack when relevant.\n","instantiable":false,"label":"External Bluetooth bonding database","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_external_bonding_database","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_external_bonding_database","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_external_bonding_database"},{"keyWords":"bluetooth_feature_gap","componentId":"bluetooth_feature_gap","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-gap","description":"This component provides commands for users to set data channel classification, enable or disable the privacy mode and accept list filtering features. In the privacy mode, the address resolving functionality is provided by the Bluetooth host. As a result, the accept list filtering does not work with advertisers that use resolvable private addresses (RPA). RPA addresses may be rejected by the filtering since they are unknown to the controller.\n","instantiable":false,"label":"GAP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_gap","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_gap","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_gap"},{"keyWords":"bluetooth_feature_gatt","componentId":"bluetooth_feature_gatt","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-gatt","description":"GATT Client feature\nEnables the ability to browse and manage attributes in a remote GATT server.\n","instantiable":false,"label":"GATT Client","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_gatt","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_gatt","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_gatt"},{"keyWords":"bluetooth_feature_gatt_server","componentId":"bluetooth_feature_gatt_server","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-gatt-server","description":"GATT Server feature\nEnables the ability to browse and manage attributes in a local GATT database. \n","instantiable":false,"label":"GATT Server","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_gatt_server","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_gatt_server","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_gatt_server"},{"keyWords":"bluetooth_feature_l2cap","componentId":"bluetooth_feature_l2cap","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-l2cap","description":"This component provides the L2CAP Connection Oriented Channel feature.\n","instantiable":false,"label":"L2CAP","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_l2cap","isEditable":true,"isEnabled":true,"name":"bluetooth_feature_l2cap","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_l2cap"},{"keyWords":"bluetooth_feature_resource_report","componentId":"bluetooth_feature_resource_report","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-resource","description":"Reports the memory buffer usage in the Bluetooth stack.\n","instantiable":false,"label":"Resource usage report in Bluetooth stack","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_resource_report","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_resource_report","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_resource_report"},{"keyWords":"bluetooth_feature_sm","componentId":"bluetooth_feature_sm","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-sm","description":"Bluetooth security manager (SM) feature\n","instantiable":false,"label":"Security Manager","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_sm","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_sm","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_sm"},{"keyWords":"bluetooth_feature_system","componentId":"bluetooth_feature_system","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-system","description":"Local device configruation and software timers\n","instantiable":false,"label":"System","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_system","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_system","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events-bluetooth_feature_system"}],"isEnabled":true,"name":"Features with Commands and Events","id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-Features_with_Commands_and_Events","label":"Features with Commands and Events","type":"category"},{"keyWords":"bluetooth_stack","componentId":"bluetooth_stack","isConfigurable":true,"documentation":"","description":"Bluetooth Low Energy stack and configurations\nIn addition to this core component, select features needed by the application.\n","instantiable":false,"label":"Bluetooth Core","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)|studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-bluetooth_stack","isEditable":true,"isEnabled":true,"name":"bluetooth_stack","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)-bluetooth_stack"}],"isEnabled":true,"name":"Bluetooth Host (Stack)","id":"studiocomproot-Bluetooth-Bluetooth_Host_(Stack)","label":"Bluetooth Host (Stack)","type":"category"},{"children":[{"children":[{"keyWords":"bluetooth_feature_afh","componentId":"bluetooth_feature_afh","isConfigurable":false,"documentation":"","description":"Adaptive Frequency Hopping (AFH) is a feature in Bluetooth technology to ensure reliable data transmission, especially in noisy environments. If the central device detects high interference on a channel, it can initiate a channel map update. This means that the communicating devices are continuously monitoring their environment for interference and are continuously changing the channel map to address the interference. AFH is a requirement for using TX power over +10 dBm. It may also provide performance improvement by avoiding congested channels.\n","instantiable":false,"label":"AFH","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_afh","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_afh","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_afh"},{"keyWords":"bluetooth_feature_resolving_list","componentId":"bluetooth_feature_resolving_list","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-resolving-list","description":"Provides support for the Resolving List in controller-based privacy. Adding a peer device to the Resolving List allows the Bluetooth controller to resolve the address when the peer device is using privacy and is transmitting with a Resolvable Private Address (RPA). It also allows the application to use the peer device's identity address when connecting or scanning for periodic synchronization.\n","instantiable":false,"label":"Address resolving with Bluetooth controller's Resolving List","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_resolving_list","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_resolving_list","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_resolving_list"},{"keyWords":"bluetooth_feature_aoa_receiver","componentId":"bluetooth_feature_aoa_receiver","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-cte-receiver","description":"This component enables receiving the Constant Tone Extension (CTE) for Bluetooth Angle of Arrival (AoA). AoA is a method used in direction finding and positioning systems that allows a device to calculate the position of another device by measuring the angle at which a radio signal arrives. When multiple receiver antennas are placed next to each other, the radio waves emitted by a single transmitter will reach the different antennas in different phases. From this phase difference, the direction the radio waves came from can be calculated.\nCTE is a concept in Bluetooth that extends Bluetooth packets with a constant tone, which is a continuous phase, constant amplitude, and constant frequency signal, sent immediately after the CRC of a Bluetooth packet. This signal can be used on the receiver side to measure the phase of the incoming signal on multiple antennas.\n","instantiable":false,"label":"AoA Receiver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_aoa_receiver","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_aoa_receiver","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_aoa_receiver"},{"keyWords":"bluetooth_feature_aoa_transmitter","componentId":"bluetooth_feature_aoa_transmitter","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-cte-transmitter","description":"This component enables transmitting the Constant Tone Extension (CTE) for Bluetooth Angle of Arrival (AoA). AoA is a method used in direction finding and positioning systems that allows a device to calculate the position of another device by measuring the angle at which a radio signal arrives. When multiple receiver antennas are placed next to each other, the radio waves emitted by a single transmitter will reach the different antennas in different phases. From this phase difference, the direction the radio waves came from can be calculated.\nCTE is a concept in Bluetooth that extends Bluetooth packets with a constant tone, which is a continuous phase, constant amplitude, and constant frequency signal, sent immediately after the CRC of a Bluetooth packet. This signal can be used on the receiver side to measure the phase of the incoming signal on multiple antennas.\n","instantiable":false,"label":"AoA Transmitter","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_aoa_transmitter","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_aoa_transmitter","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_aoa_transmitter"},{"keyWords":"bluetooth_feature_aod_receiver","componentId":"bluetooth_feature_aod_receiver","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-cte-receiver","description":"This component enables receiving the Constant Tone Extension (CTE) for Bluetooth Angle of Departure (AoD). AoA is a method used in direction finding and positioning systems that the transmitter sends signals from multiple antennas and the receiver calculates its own direction relative to the transmitting antenna array.\nCTE is a concept in Bluetooth that extends Bluetooth packets with a constant tone, which is a continuous phase, constant amplitude, and constant frequency signal, sent immediately after the CRC of a Bluetooth packet. This signal can be used on the receiver side to measure the phase of the incoming signal on multiple antennas.\n","instantiable":false,"label":"AoD Receiver","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_aod_receiver","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_aod_receiver","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_aod_receiver"},{"keyWords":"bluetooth_feature_aod_transmitter","componentId":"bluetooth_feature_aod_transmitter","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-cte-transmitter","description":"This component enables transmitting the Constant Tone Extension (CTE) for Bluetooth Angle of Departure (AoD). AoA is a method used in direction finding and positioning systems that the transmitter sends signals from multiple antennas and the receiver calculates its own direction relative to the transmitting antenna array.\nCTE is a concept in Bluetooth that extends Bluetooth packets with a constant tone, which is a continuous phase, constant amplitude, and constant frequency signal, sent immediately after the CRC of a Bluetooth packet. This signal can be used on the receiver side to measure the phase of the incoming signal on multiple antennas.\n","instantiable":false,"label":"AoD Transmitter","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_aod_transmitter","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_aod_transmitter","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_aod_transmitter"},{"keyWords":"bluetooth_feature_user_power_control","componentId":"bluetooth_feature_user_power_control","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-connection","description":"This is a Silicon Labs proprietary feature that allows application to control the transmit power of the local device on a connection.\nAPI \"sl_bt_connection_set_tx_power\" can be use to set the local transmit power when this component is used in the application.\nThis component cannot coexist with component <bluetooth_feature_power_control> that provides the Bluetooth standard feature LE Power Control.\n","instantiable":false,"label":"Application-controlled TX Power","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_user_power_control","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_user_power_control","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_user_power_control"},{"keyWords":"bluetooth_feature_connection_phy_update","componentId":"bluetooth_feature_connection_phy_update","isConfigurable":false,"documentation":"","description":"This component is used to enable configuring the connection phy to a value other than the default 1M. For example, use this component to change the preferred phy to 2M or coded.\n","instantiable":false,"label":"Bluetooth Connection Phy Update","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_connection_phy_update","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_connection_phy_update","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_connection_phy_update"},{"keyWords":"bluetooth_feature_radio_watchdog","componentId":"bluetooth_feature_radio_watchdog","isConfigurable":false,"documentation":"","description":"Radio watchdog feature","instantiable":false,"label":"Bluetooth Radio Watchdog","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_radio_watchdog","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_radio_watchdog","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_radio_watchdog"},{"keyWords":"bluetooth_feature_connection_analyzer","componentId":"bluetooth_feature_connection_analyzer","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-connection-analyzer","description":"The component provides functionality to capture and analyze the packets on a Bluetooth connection.\n","instantiable":false,"label":"Bluetooth connection analyzer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_connection_analyzer","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_connection_analyzer","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_connection_analyzer"},{"keyWords":"bluetooth_feature_ll_even_scheduling","componentId":"bluetooth_feature_ll_even_scheduling","isConfigurable":false,"documentation":"","description":"The component provides Even Connection Distribution algorithm which has been designed to be used especially with applications involving several concurrent connections. The algorithm tries to distribute the connections such a way they are distributed over the time as evenly as possible without overlapping, and all connections should get equal, fair share of the air interface resource.\nFor optimal performance the algorithm user should * initiate the first connection with the longest connection interval if\n  all connections do not have the same interval.\n* set the connection intervals of the other connections such that they are, or\n  allow (via min-max range), integer fractions of the first interval.\n* make the first interval long enough such that all connections would fit within\n  the interval with reasonable transmission time.\n\nDespite of the above recommendations the algorithm, and the connections, can be expected to work with different parameterization but performance is not likely optimal.\n","instantiable":false,"label":"Even Connection Scheduling Algorithm","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_ll_even_scheduling","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_ll_even_scheduling","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_ll_even_scheduling"},{"keyWords":"bluetooth_feature_power_control","componentId":"bluetooth_feature_power_control","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-connection","description":"In Bluetooth LE Power Control feature, the controller adjusts a connected peer device\u2019s transmit power level based on the received signal level.\nWhen this feature is used by the application, the functionality is enabled and will be automatically effective if the peer device supports this feature.\nTX power changes on the local and peer device are reported to the application. The \"connection\" class provides APIs to read the latest TX power of the local or remote device. It also provides APIs to enable or disable TX power reporting.\n","instantiable":false,"label":"LE Power Control","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_power_control","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_power_control","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_power_control"},{"keyWords":"bluetooth_feature_high_power","componentId":"bluetooth_feature_high_power","isConfigurable":false,"documentation":"","description":"The Bluetooth high power component allows the device to use a high transmission power when the frequency adaptivity or the current channel mapping allows to do so.\nLow power mode is a mode where the frequency adaptivity is disabled or the current channel mapping with adaptivity enabled does not allow to use a high transmission power. In this mode, Bluetooth will use a transmission power that is not greater than the power limit setting. The power limit is set to 10dBm by default. Use BGAPI command sl_bt_system_linklayer_configure() in NCP/SoC mode, or the vendor HCI command 0xfc1b in RCP mode, to set the per-PHY power limits if the default value is not applicable. The limit must not exceed the maximum that the regulations in the region of use allow.\n","instantiable":false,"label":"Unrestricted High Power Feature","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_high_power","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_high_power","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features-bluetooth_feature_high_power"}],"isEnabled":true,"name":"Additional Features","id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Additional_Features","label":"Additional Features","type":"category"},{"children":[{"keyWords":"bluetooth_feature_advertiser","componentId":"bluetooth_feature_advertiser","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-advertiser","description":"This Bluetooth advertising component, corresponding to the \"advertiser\" class in Bluetooth APIs, is the base of legacy, extended and periodic advertisings. Functionalities in this component include advertising set creation, advertising parameter and address settings etc. The application must choose which advertising types are needed based on its use cases. The <bluetooth_feature_legacy_advertiser> component provides the legacy advertising feature. The <bluetooth_feature_extended_advertiser> component provides the extended advertising feature. And the <bluetooth_feature_periodic_advertiser> component provides the periodic advertising feature.\n","instantiable":false,"label":"Advertising Base Feature","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_advertiser","isEditable":true,"isEnabled":true,"name":"bluetooth_feature_advertiser","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_advertiser"},{"keyWords":"bluetooth_feature_cis","componentId":"bluetooth_feature_cis","isConfigurable":false,"documentation":"","description":"Provide CIS and CIG feature\n","instantiable":false,"label":"Bluetooth Feature CIS CIG","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_cis","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_cis","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_cis"},{"keyWords":"bluetooth_feature_connection_subrating","componentId":"bluetooth_feature_connection_subrating","isConfigurable":false,"documentation":"","description":"Provides the connection subrating feature\n","instantiable":false,"label":"Bluetooth Feature Connection Subrating","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_connection_subrating","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_connection_subrating","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_connection_subrating"},{"keyWords":"bluetooth_feature_connection","componentId":"bluetooth_feature_connection","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-connection","description":"Bluetooth connection feature\n","instantiable":false,"label":"Connection","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_connection","isEditable":true,"isEnabled":true,"name":"bluetooth_feature_connection","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_connection"},{"keyWords":"bluetooth_feature_connection_statistics","componentId":"bluetooth_feature_connection_statistics","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-connection","description":"The component provides functionality to collect connection specific statistics and report them to application upon request. The API for reading the statistics on a connection is \"sl_bt_connection_read_statistics\". The statistics are also reported upon connection closing.\n","instantiable":false,"label":"Connection specific statistics for Bluetooth","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_connection_statistics","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_connection_statistics","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_connection_statistics"},{"keyWords":"bluetooth_feature_extended_advertiser","componentId":"bluetooth_feature_extended_advertiser","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-extended-advertiser","description":"This component, corresponding to the \"extended_advertiser\" class in Bluetooth APIs, provides the extended advertising feature. Specifically, this component enables advertisements that use extended advertising PDUs. Common advertising functionalities, e.g., advertising set creation, and address settings etc., are provided by its base component <bluetooth_feature_advertiser>.\n","instantiable":false,"label":"Extended Advertising","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_extended_advertiser","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_extended_advertiser","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_extended_advertiser"},{"keyWords":"bluetooth_feature_legacy_advertiser","componentId":"bluetooth_feature_legacy_advertiser","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-legacy-advertiser","description":"This component, corresponding to the \"legacy_advertiser\" class in Bluetooth APIs, provides the legacy advertising feature. Specifically, this component enables advertisements that use legacy advertising PDUs. Common advertising functionalities, e.g., advertising set creation, and address settings etc., are provided by its base component <bluetooth_feature_advertiser>.\n","instantiable":false,"label":"Legacy Advertising","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_legacy_advertiser","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_legacy_advertiser","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_legacy_advertiser"},{"keyWords":"bluetooth_feature_connection_pawr_scheduling","componentId":"bluetooth_feature_connection_pawr_scheduling","isConfigurable":false,"documentation":"","description":"The component provides a connection scheduling algorithm which has been designed to be used especially with applications that use several concurrent connections while advertising using Periodic Advertising with Responses (PAwR). The algorithm tries to distribute the connections such a way they are distracted as little as possible by the PAwR train.\nFor optimal performance the algorithm user should * configure first the PAwR train * use connection intervals which are equal to subevent interval\nDespite of the above recommendations the algorithm, and the connections, can be expected to work with different parameterization but performance is not likely optimal.\n","instantiable":false,"label":"PAwR-aware Connection Scheduling Algorithm","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_connection_pawr_scheduling","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_connection_pawr_scheduling","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_connection_pawr_scheduling"},{"keyWords":"bluetooth_feature_periodic_advertiser","componentId":"bluetooth_feature_periodic_advertiser","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-periodic-advertiser","description":"This component, corresponding to the \"periodic_advertiser\" class in Bluetooth APIs, provides the periodic advertising feature. Common advertising functionalities, e.g., advertising set creation, and address settings etc., are provided by its base component <bluetooth_feature_advertiser>.\n","instantiable":false,"label":"Periodic Advertising","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_periodic_advertiser","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_periodic_advertiser","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_periodic_advertiser"},{"keyWords":"bluetooth_feature_sync","componentId":"bluetooth_feature_sync","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-sync","description":"Bluetooth periodic advertising synchronization feature\n","instantiable":false,"label":"Periodic Advertising Synchronization","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_sync","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_sync","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_sync"},{"keyWords":"bluetooth_feature_pawr_advertiser","componentId":"bluetooth_feature_pawr_advertiser","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-pawr-advertiser","description":"This component provides the commands and events for advertising using the Periodic Advertising with Responses (PAwR) feature.\n","instantiable":false,"label":"Periodic Advertising using PAwR trains","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_pawr_advertiser","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_pawr_advertiser","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_pawr_advertiser"},{"keyWords":"bluetooth_feature_extended_scanner","componentId":"bluetooth_feature_extended_scanner","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-scanner","description":"This component brings in necessary functionalities for scanning the advertisements that use legacy or extended advertising PDUs.\nInclude this component if the application needs to scan advertisements that use extended advertising PDUs. When this component is included by the application, advertisements received by the scanner are reported with the BGAPI sl_bt_evt_scanner_legacy_advertisement_report event for legacy advertising PDUs, and the sl_bt_evt_scanner_extended_advertisement_report event for extended advertising PDUs.\nIf the application only needs to scan for advertisements that use legacy advertising PDUs, the application should use the component <bluetooth_feature_legacy_scanner>.\n","instantiable":false,"label":"Scanner for extended advertisements","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_extended_scanner","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_extended_scanner","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_extended_scanner"},{"keyWords":"bluetooth_feature_legacy_scanner","componentId":"bluetooth_feature_legacy_scanner","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-scanner","description":"This component brings in necessary functionalities for scanning the advertisements that use legacy advertising PDUs.\nInclude this component if the application does not need to scan advertisements that use extended advertising PDUs. Advertisements received by the scanner are reported in the BGAPI sl_bt_evt_scanner_legacy_advertisement_report event.\nIf this component is included and the <bluetooth_feature_extended_scanner> is not, the number of received advertisement reports are reduced if advertising devices that use extended advertising PDUs are in the radio range. Another benefit of including this component only is reduced application size by eliminating the stack functionalities for scanning advertisements that use extended advertising PDUs.\n","instantiable":false,"label":"Scanner for legacy advertisements","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_legacy_scanner","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_legacy_scanner","isSelected":true,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_legacy_scanner"},{"keyWords":"bluetooth_feature_pawr_sync","componentId":"bluetooth_feature_pawr_sync","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-pawr-sync","description":"Provides events and control for synchronized Periodic Advertising with Responses (PAwR) trains. Synchronization is achieved by scanning (see <bluetooth_feature_sync_scanner>) or by receiving Periodic Advertising Synchronization Transfer (PAST) from a remote device (see <bluetooth_feature_past_receiver>).\nUse this component if the application syncs to periodic advertising using the components mentioned above and needs support for Periodic Advertising with Responses (PAwR) trains.\n","instantiable":false,"label":"Synchronization to Periodic Advertising with Responses trains","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_pawr_sync","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_pawr_sync","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_pawr_sync"},{"keyWords":"bluetooth_feature_periodic_sync","componentId":"bluetooth_feature_periodic_sync","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-periodic-sync","description":"Provides events and control for synchronized periodic advertising trains that do not have subevents or response slots. Synchronization is achieved by scanning (see <bluetooth_feature_sync_scanner>) or by receiving Periodic Advertising Synchronization Transfer (PAST) from a remote device (see <bluetooth_feature_past_receiver>).\n","instantiable":false,"label":"Synchronization to Periodic Advertising without responses trains","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_periodic_sync","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_periodic_sync","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_periodic_sync"},{"keyWords":"bluetooth_feature_past_receiver","componentId":"bluetooth_feature_past_receiver","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-past-receiver","description":"Synchronize to periodic advertising trains by receiving Periodic Advertising Synchronization Transfer (PAST) over a connection.\nUse this component on the device that needs to receive PAST from a remote device. To initiate PAST from the local device to a remote device, use <bluetooth_feature_advertiser_past> and/or <bluetooth_feature_sync_past>.\n","instantiable":false,"label":"Synchronization to Periodic advertising trains by receiving PAST","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_past_receiver","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_past_receiver","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_past_receiver"},{"keyWords":"bluetooth_feature_sync_scanner","componentId":"bluetooth_feature_sync_scanner","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-sync-scanner","description":"Synchronize to periodic advertising trains by scanning for extended advertisements that provide the synchronization information.\nThe <bluetooth_feature_periodic_sync> component is automatically included to provide support for periodic advertising trains that do not have subevents or response slots. The application must explicitly include the <bluetooth_feature_pawr_sync> component if it needs support for Periodic Advertising with Responses (PAwR) trains.\n","instantiable":false,"label":"Synchronization to periodic advertising trains by scanning","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_sync_scanner","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_sync_scanner","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_sync_scanner"},{"keyWords":"bluetooth_feature_advertiser_past","componentId":"bluetooth_feature_advertiser_past","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-advertiser-past","description":"Transfer the synchronization information of a local active periodic advertising set to a remote device using Periodic Advertising Synchronization Transfer (PAST) over a connection.\nUse this component on the device that needs to initiate PAST to a remote device. To receive PAST from a remote device, use <bluetooth_feature_past_receiver>.\n","instantiable":false,"label":"Transfer periodic synchronization information for a local advertising set","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_advertiser_past","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_advertiser_past","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_advertiser_past"},{"keyWords":"bluetooth_feature_sync_past","componentId":"bluetooth_feature_sync_past","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-stack-api/sl-bt-sync-past","description":"Transfer the synchronization information of a synchronized periodic advertising train to a remote device using Periodic Advertising Synchronization Transfer (PAST) over a connection.\nUse this component on the device that needs to initiate PAST to a remote device. To receive PAST from a remote device, use <bluetooth_feature_past_receiver>.\n","instantiable":false,"label":"Transfer periodic synchronization information for an established sync","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_sync_past","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_sync_past","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events-bluetooth_feature_sync_past"}],"isEnabled":true,"name":"Features with Commands and Events","id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-Features_with_Commands_and_Events","label":"Features with Commands and Events","type":"category"},{"keyWords":"bluetooth_controller","componentId":"bluetooth_controller","isConfigurable":true,"documentation":"","description":"BLE controller to be used by a Bluetooth stack","instantiable":false,"label":"Bluetooth Low Energy Controller Only","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)|studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-bluetooth_controller","isEditable":false,"isEnabled":true,"name":"bluetooth_controller","isSelected":false,"id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)-bluetooth_controller"}],"isEnabled":true,"name":"Bluetooth LE Controller (Link Layer)","id":"studiocomproot-Bluetooth-Bluetooth_LE_Controller_(Link_Layer)","label":"Bluetooth LE Controller (Link Layer)","type":"category"},{"children":[{"keyWords":"rtllib","componentId":"rtllib","isConfigurable":false,"documentation":"http://docs.silabs.com/rtl-lib/9.0.0/modules","description":"Real time locationing library component for SoC","instantiable":false,"label":"Real-Time Locationing Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Direction_Finding|studiocomproot-Bluetooth-Direction_Finding-rtllib","isEditable":false,"isEnabled":true,"name":"rtllib","isSelected":false,"id":"studiocomproot-Bluetooth-Direction_Finding-rtllib"}],"isEnabled":true,"name":"Direction Finding","id":"studiocomproot-Bluetooth-Direction_Finding","label":"Direction Finding","type":"category"},{"children":[{"keyWords":"bluetooth_hci","componentId":"bluetooth_hci","isConfigurable":false,"documentation":"","description":"Provides HCI for Bluetooth Controller","instantiable":false,"label":"Bluetooth Controller HCI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci","isEditable":false,"isEnabled":true,"name":"bluetooth_hci","isSelected":false,"id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci"},{"keyWords":"bluetooth_hci_cpc","componentId":"bluetooth_hci_cpc","isConfigurable":false,"documentation":"","description":"CPC component for HCI","instantiable":false,"label":"HCI CPC component","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_cpc","isEditable":false,"isEnabled":true,"name":"bluetooth_hci_cpc","isSelected":false,"id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_cpc"},{"keyWords":"bt_hci_coex","componentId":"bt_hci_coex","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/bt-hci-coex","description":"Provides vendor specific commands to HCI to control coexistence RAIL plugin\n","instantiable":false,"label":"HCI Coex Vendor Specific Commands","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bt_hci_coex","isEditable":false,"isEnabled":true,"name":"bt_hci_coex","isSelected":false,"id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bt_hci_coex"},{"keyWords":"bluetooth_hci_filter","componentId":"bluetooth_hci_filter","isConfigurable":false,"documentation":"","description":"Provides API to create HCI event handler hooks to filter out events that are passed to host stack\n","instantiable":false,"label":"HCI Extended Advertisment Filtering","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_filter","isEditable":false,"isEnabled":true,"name":"bluetooth_hci_filter","isSelected":false,"id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_filter"},{"keyWords":"bt_hci_ext_adv_filter_rssi_uuid","componentId":"bt_hci_ext_adv_filter_rssi_uuid","isConfigurable":true,"documentation":"","description":"Provides API to filter HCI extended advertising reports using RSSI and UUID values\n","instantiable":false,"label":"HCI Extended Advertisment Filtering","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bt_hci_ext_adv_filter_rssi_uuid","isEditable":false,"isEnabled":true,"name":"bt_hci_ext_adv_filter_rssi_uuid","isSelected":false,"id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bt_hci_ext_adv_filter_rssi_uuid"},{"keyWords":"bt_hci_version","componentId":"bt_hci_version","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/bt-hci-version","description":"Provides vendor specific commands to HCI to read version information. Version information by default is the Bluetooth software version, this can be customized in sl_bt_hci_version_config.h file.\n","instantiable":false,"label":"HCI Get Version Vendor Specific Command","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bt_hci_version","isEditable":false,"isEnabled":true,"name":"bt_hci_version","isSelected":false,"id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bt_hci_version"},{"keyWords":"bluetooth_hci_sleep","componentId":"bluetooth_hci_sleep","isConfigurable":false,"documentation":"","description":"Vendor-specific sleep command puts device into EM2, otherwise device will enter EM1 when possible","instantiable":false,"label":"HCI Sleep Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_sleep","isEditable":false,"isEnabled":true,"name":"bluetooth_hci_sleep","isSelected":false,"id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_sleep"},{"keyWords":"bluetooth_hci_3wire","componentId":"bluetooth_hci_3wire","isConfigurable":true,"documentation":"","description":"Three-Wire UART Transport Layer for HCI","instantiable":false,"label":"HCI Three-Wire UART","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_3wire","isEditable":false,"isEnabled":true,"name":"bluetooth_hci_3wire","isSelected":false,"id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_3wire"},{"keyWords":"bluetooth_hci_iostream_uart","componentId":"bluetooth_hci_iostream_uart","isConfigurable":false,"documentation":"","description":"IOStream UART/EUSART Handler for HCI","instantiable":false,"label":"HCI UART Handler","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_iostream_uart","isEditable":false,"isEnabled":true,"name":"bluetooth_hci_iostream_uart","isSelected":false,"id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_iostream_uart"},{"keyWords":"bluetooth_hci_uart","componentId":"bluetooth_hci_uart","isConfigurable":false,"documentation":"","description":"UART Handler for HCI","instantiable":false,"label":"HCI UART Handler","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_uart","isEditable":false,"isEnabled":true,"name":"bluetooth_hci_uart","isSelected":false,"id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_hci_uart"},{"keyWords":"bluetooth_feature_phy_support_config","componentId":"bluetooth_feature_phy_support_config","isConfigurable":true,"documentation":"","description":"Select which PHYs the chip software supports. Selecting fewer PHYs than the radio supports implies a smaller flash footprint. Note that this component won't allow using PHYs which the device radio does not support.\n","instantiable":false,"label":"Restrict PHYs supported by the chip","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)|studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_feature_phy_support_config","isEditable":false,"isEnabled":true,"name":"bluetooth_feature_phy_support_config","isSelected":false,"id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)-bluetooth_feature_phy_support_config"}],"isEnabled":true,"name":"Host Controller Interface (HCI)","id":"studiocomproot-Bluetooth-Host_Controller_Interface_(HCI)","label":"Host Controller Interface (HCI)","type":"category"},{"children":[{"keyWords":"ncp_user_cmd","componentId":"ncp_user_cmd","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ncp-user-cmd","description":"Demonstrates the communication between an NCP host and NCP target using BGAPI user messages, responses and events. Can be used as a starting point for creating custom commands or for testing purposes.\n","instantiable":false,"label":"General BGAPI User Commands","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-NCP_Interface|studiocomproot-Bluetooth-NCP_Interface-ncp_user_cmd","isEditable":false,"isEnabled":true,"name":"ncp_user_cmd","isSelected":false,"id":"studiocomproot-Bluetooth-NCP_Interface-ncp_user_cmd"},{"keyWords":"ncp_evt_filter","componentId":"ncp_evt_filter","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ncp-evt-filter","description":"Component that provides the Bluetooth Network Co-Processor (NCP) Event Filter interface.\nThis is a No-Code component if used together with NCP Interface component.","instantiable":false,"label":"NCP Event Filter Interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-NCP_Interface|studiocomproot-Bluetooth-NCP_Interface-ncp_evt_filter","isEditable":false,"isEnabled":true,"name":"ncp_evt_filter","isSelected":false,"id":"studiocomproot-Bluetooth-NCP_Interface-ncp_evt_filter"},{"keyWords":"ncp","componentId":"ncp","isConfigurable":true,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ncp","description":"Component that provides the Bluetooth Network Co-Processor (NCP) communication interface.\nThis is a No-Code component.\n","instantiable":false,"label":"NCP Interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-NCP_Interface|studiocomproot-Bluetooth-NCP_Interface-ncp","isEditable":false,"isEnabled":true,"name":"ncp","isSelected":false,"id":"studiocomproot-Bluetooth-NCP_Interface-ncp"},{"keyWords":"ncp_sec","componentId":"ncp_sec","isConfigurable":false,"documentation":"http://docs.silabs.com/bluetooth/9.0.0/bluetooth-service-api/ncp-sec","description":"Component that provides secure Bluetooth Network Co-Processor (NCP) communication interface.\nThis is a No-Code component if used together with NCP Interface component.\n","instantiable":false,"label":"NCP Security Interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-NCP_Interface|studiocomproot-Bluetooth-NCP_Interface-ncp_sec","isEditable":false,"isEnabled":true,"name":"ncp_sec","isSelected":false,"id":"studiocomproot-Bluetooth-NCP_Interface-ncp_sec"}],"isEnabled":true,"name":"NCP Interface","id":"studiocomproot-Bluetooth-NCP_Interface","label":"NCP Interface","type":"category"},{"children":[{"keyWords":"bluetooth_event_system_ipc","componentId":"bluetooth_event_system_ipc","isConfigurable":false,"documentation":"","description":"Use Event System IPC to deliver Bluetooth events in an application that uses an RTOS. When this component is included, the Bluetooth stack will not deliver events via callback functions but uses the IPC mechanism provided by <event_system> to publish events to the application.\n","instantiable":false,"label":"Bluetooth Event System IPC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-RTOS_Adaptation|studiocomproot-Bluetooth-RTOS_Adaptation-bluetooth_event_system_ipc","isEditable":false,"isEnabled":true,"name":"bluetooth_event_system_ipc","isSelected":false,"id":"studiocomproot-Bluetooth-RTOS_Adaptation-bluetooth_event_system_ipc"},{"keyWords":"bluetooth_rtos_adaptation","componentId":"bluetooth_rtos_adaptation","isConfigurable":true,"documentation":"","description":"Bluetooth RTOS adaptation for running Bluetooth stack in a kernel. This component is automatically included when required and should not be included directly by the application.\n","instantiable":false,"label":"Bluetooth RTOS Adaptation","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth|studiocomproot-Bluetooth-RTOS_Adaptation|studiocomproot-Bluetooth-RTOS_Adaptation-bluetooth_rtos_adaptation","isEditable":false,"isEnabled":true,"name":"bluetooth_rtos_adaptation","isSelected":false,"id":"studiocomproot-Bluetooth-RTOS_Adaptation-bluetooth_rtos_adaptation"}],"isEnabled":true,"name":"RTOS Adaptation","id":"studiocomproot-Bluetooth-RTOS_Adaptation","label":"RTOS Adaptation","type":"category"}],"isEnabled":true,"name":"Bluetooth","id":"studiocomproot-Bluetooth","label":"Bluetooth","type":"category"},{"children":[{"children":[{"keyWords":"btmesh_stack_advertiser_extended","componentId":"btmesh_stack_advertiser_extended","isConfigurable":false,"documentation":"","description":"This component provides an implementation of advertising capabilities that use extended advertising PDUs. It uses Bluetooth extended advertiser API. It is recommended to use this component, if extended advertising capabilities are needed. Please be aware that BT Mesh 1.1 specification does not allow extended advertising, so the selection of this component can result in a non compliant code to the BT Mesh spec.\n","instantiable":false,"label":"Proprietary Extended Advertiser","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Advertiser_Types|studiocomproot-Bluetooth_Mesh-Advertiser_Types-btmesh_stack_advertiser_extended","isEditable":false,"isEnabled":true,"name":"btmesh_stack_advertiser_extended","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Advertiser_Types-btmesh_stack_advertiser_extended"},{"keyWords":"btmesh_stack_advertiser_legacy","componentId":"btmesh_stack_advertiser_legacy","isConfigurable":false,"documentation":"","description":"This component provides an implementation of advertising capabilities that use standard advertising PDUs. It uses Bluetooth legacy advertiser API. It is recommended to use this component, if extended advertising (proprietary) capabilities are not needed.\n","instantiable":false,"label":"Standard Legacy Advertiser","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Advertiser_Types|studiocomproot-Bluetooth_Mesh-Advertiser_Types-btmesh_stack_advertiser_legacy","isEditable":false,"isEnabled":true,"name":"btmesh_stack_advertiser_legacy","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Advertiser_Types-btmesh_stack_advertiser_legacy"}],"isEnabled":true,"name":"Advertiser Types","id":"studiocomproot-Bluetooth_Mesh-Advertiser_Types","label":"Advertiser Types","type":"category"},{"children":[{"keyWords":"btmesh_custom_role","componentId":"btmesh_custom_role","isConfigurable":false,"documentation":"","description":"This component makes it possible to initialize a mesh device as a provisionee or provisioner based on application logic. For example an application could be implemented in a way that the device becomes a provisioner permanently when button is pressed at power up, otherwise it is just a provisionee. The sl_btmesh_custom_role_init weak callback function is called on boot event and the application is able to override this function to call one of the following initializer BT Mesh stack APIs: - sl_btmesh_node_init - sl_btmesh_node_init_oob - sl_btmesh_prov_init\nThis component is prepared for integration into SOC applications.\n","instantiable":false,"label":"Btmesh Custom Role","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Btmesh_Roles|studiocomproot-Bluetooth_Mesh-Btmesh_Roles-btmesh_custom_role","isEditable":false,"isEnabled":true,"name":"btmesh_custom_role","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Btmesh_Roles-btmesh_custom_role"},{"keyWords":"btmesh_provisionee","componentId":"btmesh_provisionee","isConfigurable":true,"documentation":"","description":"Btmesh Provisionee This component is prepared for integration into SOC applications. This component provides the following features:\n  - Automatic node initialization on boot event\n  - Automatic unprovisioned device beaconing on the selected bearers (PB-ADV, PB-GATT)\n  - Out-of-band authentication settings\n  - Helper functions for OOB authentication\n\nThis is a No-Code component.\n","instantiable":false,"label":"Btmesh Provisionee","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Btmesh_Roles|studiocomproot-Bluetooth_Mesh-Btmesh_Roles-btmesh_provisionee","isEditable":false,"isEnabled":true,"name":"btmesh_provisionee","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Btmesh_Roles-btmesh_provisionee"},{"keyWords":"btmesh_provisioner","componentId":"btmesh_provisioner","isConfigurable":true,"documentation":"","description":"This component automatically initializes the device as a provisioner on boot event.\nThis component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Btmesh Provisioner","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Btmesh_Roles|studiocomproot-Bluetooth_Mesh-Btmesh_Roles-btmesh_provisioner","isEditable":false,"isEnabled":true,"name":"btmesh_provisioner","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Btmesh_Roles-btmesh_provisioner"}],"isEnabled":true,"name":"Btmesh Roles","id":"studiocomproot-Bluetooth_Mesh-Btmesh_Roles","label":"Btmesh Roles","type":"category"},{"children":[{"keyWords":"btmesh_distributor","componentId":"btmesh_distributor","isConfigurable":false,"documentation":"","description":"Wrapper software component for DFU distributor role in Bluetooth Mesh applications. This component is prepared for integration into SOC applications.\n","instantiable":false,"label":"DFU distributor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-DFU_Roles|studiocomproot-Bluetooth_Mesh-DFU_Roles-btmesh_distributor","isEditable":false,"isEnabled":true,"name":"btmesh_distributor","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-DFU_Roles-btmesh_distributor"},{"keyWords":"btmesh_target_node","componentId":"btmesh_target_node","isConfigurable":false,"documentation":"","description":"Wrapper software component for DFU target node role in Bluetooth Mesh applications. This component is prepared for integration into SOC applications.\n","instantiable":false,"label":"DFU target node","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-DFU_Roles|studiocomproot-Bluetooth_Mesh-DFU_Roles-btmesh_target_node","isEditable":false,"isEnabled":true,"name":"btmesh_target_node","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-DFU_Roles-btmesh_target_node"}],"isEnabled":true,"name":"DFU Roles","id":"studiocomproot-Bluetooth_Mesh-DFU_Roles","label":"DFU Roles","type":"category"},{"children":[{"keyWords":"btmesh_friend","componentId":"btmesh_friend","isConfigurable":true,"documentation":"","description":"Friend component enables Bluetooth Mesh Friend Feature for the node. Friend nodes are required when Low Power Nodes (LPN) are present in the mesh network. When a friendship is established between an LPN and Friend node, the friend node starts to store incoming messages targeted for the LPN. These mesages are forwarded to the LPN upon request. Logging for these messages can be enabled as a configuration option in Simplicity Studio. Callback functions are provided for friendship establishment and termination. Friend functionality can be enabled or disabled during runtime via node configuration. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Friend","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Features|studiocomproot-Bluetooth_Mesh-Features-btmesh_friend","isEditable":false,"isEnabled":true,"name":"btmesh_friend","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Features-btmesh_friend"},{"keyWords":"btmesh_lpn","componentId":"btmesh_lpn","isConfigurable":true,"documentation":"","description":"Low Power component enables Bluetooth Mesh Low Power Node (LPN) Feature for the node. LPNs consume less power by remaining in sleep for the majority of their operation cycle, waking up to poll incoming messages from a Friend Node. LPN operation can be achieved only by having an established friendship. Numerous timing and queue parameters can be configured in Simplicity Studio, more details can be found on the configuration panel or in sl_btmesh_lpn_config.h. Several callback functions, which can be implemented in the application, are available for initialization and friendship related events. More details about the functions can be found in sl_btmesh_lpn.h. LPN functionality can be enabled or disabled during runtime via node configuration. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Low Power Node","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Features|studiocomproot-Bluetooth_Mesh-Features-btmesh_lpn","isEditable":false,"isEnabled":true,"name":"btmesh_lpn","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Features-btmesh_lpn"},{"keyWords":"btmesh_proxy","componentId":"btmesh_proxy","isConfigurable":false,"documentation":"","description":"Proxy component enables Bluetooth Mesh Proxy Server Feature for the node. Proxy nodes send their messages over GATT and ADV bearers (GATT and Advertisement packages), which is mandatory if the provisioner is a mobile phone. Proxy functionality can be enabled or disabled during runtime via node configuration. This component is suitable for use in both NCP and SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Proxy","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Features|studiocomproot-Bluetooth_Mesh-Features-btmesh_proxy","isEditable":false,"isEnabled":true,"name":"btmesh_proxy","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Features-btmesh_proxy"},{"keyWords":"btmesh_stack_relay","componentId":"btmesh_stack_relay","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh relay functionality. Relay nodes retransmit messages that they receive from other devices. In doing this, they are able to communicate with devices that are not in radio range of the device which originated the message. Relay functionality can be enabled or disabled during runtime via node configuration. This is a No-Code component.","instantiable":false,"label":"Relay","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Features|studiocomproot-Bluetooth_Mesh-Features-btmesh_stack_relay","isEditable":false,"isEnabled":true,"name":"btmesh_stack_relay","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Features-btmesh_stack_relay"}],"isEnabled":true,"name":"Features","id":"studiocomproot-Bluetooth_Mesh-Features","label":"Features","type":"category"},{"children":[{"children":[{"keyWords":"btmesh_fw_distribution_server","componentId":"btmesh_fw_distribution_server","isConfigurable":true,"documentation":"","description":"Provides BT Mesh Firmware Distribution Server functionality, defined in mesh specification.\nThis model is used by the Distributor to receive from the Initiator the firmware update parameters, the set of Target nodes to update, and the firmware image to transfer. This model uses the Firmware Update Client model and the BLOB Transfer Client model to manage the firmware update. The Firmware Distribution Server can transfer one firmware image at a time. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Firmware Distribution Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Firmware_Update|studiocomproot-Bluetooth_Mesh-Models-Firmware_Update-btmesh_fw_distribution_server","isEditable":false,"isEnabled":true,"name":"btmesh_fw_distribution_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Firmware_Update-btmesh_fw_distribution_server"},{"keyWords":"btmesh_firmware_update_client","componentId":"btmesh_firmware_update_client","isConfigurable":true,"documentation":"","description":"Provides BT Mesh Firmware Update Client functionality, defined in mesh specification.\nThe Firmware Update Client model is used by the Distributor and Initiator. This component is prepared for integration into SOC applications.\nThe Initiator uses this model to retrieve the information about the firmware subsystems installed on the Target node, and to get the location of the new firmware images. The Initiator receives the list of Target nodes from the higher-layer application.\nThe Distributor uses this model to start a firmware image transfer to the Target nodes. The Distributor receives the list of Target nodes from the Initiator. The Distributor uses the procedures on the Firmware Update Client model with the inputs to these procedures being chosen by the Firmware Distribution Server.\nThis is a No-Code component.\n","instantiable":false,"label":"Firmware Update Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Firmware_Update|studiocomproot-Bluetooth_Mesh-Models-Firmware_Update-btmesh_firmware_update_client","isEditable":false,"isEnabled":true,"name":"btmesh_firmware_update_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Firmware_Update-btmesh_firmware_update_client"},{"keyWords":"btmesh_firmware_update_server","componentId":"btmesh_firmware_update_server","isConfigurable":true,"documentation":"","description":"Provides BT Mesh Firmware Update Server functionality, defined in mesh specification.\nThis model is used by the Target node to report the firmware images installed on the node and the location of new firmware images, and to initiate a firmware update in order to receive a new firmware. The firmware image will be transferred using the BLOB Transfer Server model. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Firmware Update Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Firmware_Update|studiocomproot-Bluetooth_Mesh-Models-Firmware_Update-btmesh_firmware_update_server","isEditable":false,"isEnabled":true,"name":"btmesh_firmware_update_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Firmware_Update-btmesh_firmware_update_server"}],"isEnabled":true,"name":"Firmware Update","id":"studiocomproot-Bluetooth_Mesh-Models-Firmware_Update","label":"Firmware Update","type":"category"},{"children":[{"keyWords":"btmesh_generic_base","componentId":"btmesh_generic_base","isConfigurable":true,"documentation":"","description":"This Component initializes the Generic Server and Client Models which are added to the project as components and provides an interface to register handlers for their events. Note that the Generic Base Component alone does not add support for Generic Models (e.g. Generic OnOff Server/Client, Generic Level Server/Client, etc), that has to be done from another component or application software. This component is prepared for integration into SOC applications.\n","instantiable":false,"label":"Generic Base","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Generic|studiocomproot-Bluetooth_Mesh-Models-Generic-btmesh_generic_base","isEditable":false,"isEnabled":true,"name":"btmesh_generic_base","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Generic-btmesh_generic_base"},{"keyWords":"btmesh_generic_level_client_ext","componentId":"btmesh_generic_level_client_ext","isConfigurable":true,"documentation":"","description":"Generic Level extension that supports Generic Move and Generic Delta messages.\nThis component extends the Generic Base component with the additional support of sending Generic Move Unacknowledged and Generic Delta Unacknownledged messages. This allows the user to create an example that provides the Dimming Control NLC Profile functionality.\nThis is a no-code component.\n","instantiable":false,"label":"Generic Level Client Extension","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Generic|studiocomproot-Bluetooth_Mesh-Models-Generic-btmesh_generic_level_client_ext","isEditable":false,"isEnabled":true,"name":"btmesh_generic_level_client_ext","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Generic-btmesh_generic_level_client_ext"}],"isEnabled":true,"name":"Generic","id":"studiocomproot-Bluetooth_Mesh-Models-Generic","label":"Generic","type":"category"},{"children":[{"keyWords":"btmesh_lcd_server","componentId":"btmesh_lcd_server","isConfigurable":true,"documentation":"","description":"A thin wrapper of the Bluetooth Mesh Stack Large Composition Data component. This component enables automatic Models Metadata Page 0 generation for Silicon Labs components providing SIG models.\n","instantiable":false,"label":"Large Composition Data Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Large_Composition_Data|studiocomproot-Bluetooth_Mesh-Models-Large_Composition_Data-btmesh_lcd_server","isEditable":false,"isEnabled":true,"name":"btmesh_lcd_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Large_Composition_Data-btmesh_lcd_server"}],"isEnabled":true,"name":"Large Composition Data","id":"studiocomproot-Bluetooth_Mesh-Models-Large_Composition_Data","label":"Large Composition Data","type":"category"},{"children":[{"keyWords":"btmesh_ctl_client","componentId":"btmesh_ctl_client","isConfigurable":true,"documentation":"","description":"Color Tunable Lighting (CTL) Client model. Used to set the dim level or the color temperature of a light source (CTL Server) on another node.\nThis component extends the lighting client with functions to change the temperature by, or to change the temperature to a certain percentage.\nFor more details about lighting please see Lighting Client. This component is prepared for integration into SOC applications.\nThis is a Low-Code component. For example, changing all CTL Server nodes' color temperature by 1 percent can be achieved by adding an event handler for mesh events and calling the following code:\n#include \"sl_btmesh_ctl_client.h\"\nvoid event_handler(sl_btmesh_msg_t *evt) {\n  case sl_btmesh_evt_node_initialized_id:\n    if (evt->data.evt_node_initialized.provisioned) {\n      sl_btmesh_change_temperature(1);\n    }\n  break;\n}\n","instantiable":false,"label":"CTL Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Lighting|studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_ctl_client","isEditable":false,"isEnabled":true,"name":"btmesh_ctl_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_ctl_client"},{"keyWords":"btmesh_ctl_server","componentId":"btmesh_ctl_server","isConfigurable":true,"documentation":"","description":"Color Tunable Lighting (CTL) Server model. Used to support the control and reporting functionality of a node with a light source that is dimmable and whose color temperature can be selected.\nThis component implements this control and reporting functionality, extending on lighting server, and also provides callbacks on lighting related events.\nFor more details about lighting, please see Lighting Server. This component is prepared for integration into SOC applications.\nThis is a Low-Code component. The following weak callbacks are available to implement the relevant light source handling:\nvoid sl_btmesh_lighting_level_pwm_cb(uint16_t level); void sl_btmesh_lighting_color_pwm_cb(uint16_t color);\n","instantiable":false,"label":"CTL Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Lighting|studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_ctl_server","isEditable":false,"isEnabled":true,"name":"btmesh_ctl_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_ctl_server"},{"keyWords":"btmesh_hsl_server","componentId":"btmesh_hsl_server","isConfigurable":true,"documentation":"","description":"Hue, Saturation and Lightness (HSL) Server model. Used to support the control and reporting functionality of a node with a light source that is dimmable and whose color can be selected. It extends Lightness Server and corresponds with HSL Hue Server and HSL Saturation Server models. It also has a corresponding HSL Setup Server model.\nThis component implements callbacks, control, and report functionality. This component is prepared for integration into SOC applications.\nThis is a Low-Code component. The following weak callbacks are available to implement the relevant light source handling:\nvoid sl_btmesh_hsl_hue_cb(uint16_t hue); void sl_btmesh_hsl_saturation_cb(uint16_t saturation);\n","instantiable":false,"label":"HSL Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Lighting|studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_hsl_server","isEditable":false,"isEnabled":true,"name":"btmesh_hsl_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_hsl_server"},{"keyWords":"btmesh_lc_server","componentId":"btmesh_lc_server","isConfigurable":true,"documentation":"","description":"Lightness Control (LC) Server model. Used to support the control and reporting functionality of a node with a light lightness controller that can monitor occupancy and ambient light level sensors and adjust the dim level of a light. LC Server extends Lightness Server model and Generic OnOff Server. It also has a corresponding LC Setup Server model which is present in the same element. This component is prepared for integration into SOC applications.\nThis is a No-Code component when added to an existing project using Light Lightness Server.\n","instantiable":false,"label":"LC Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Lighting|studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_lc_server","isEditable":false,"isEnabled":true,"name":"btmesh_lc_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_lc_server"},{"keyWords":"btmesh_lighting_client","componentId":"btmesh_lighting_client","isConfigurable":true,"documentation":"","description":"Used to support the functionality of a node that can set the dim level of a light source (Lightness Server) on another node.\nThis component integrates the Generic OnOff Client functionality, for ease of use. It provides functions to change the dim value by, or set the dim value to a certain percentage, and a function for getting the current lightness level. This component is prepared for integration into SOC applications.\nThis is a Low-Code component. For example, toggling all Light Lightness Servers in the network can be achieved by adding an event handler for mesh events and calling the following code:\n#include \"sl_btmesh_lighting_client.h\"\nvoid event_handler(sl_btmesh_msg_t *evt) {\n  case sl_btmesh_evt_node_initialized_id:\n    if (evt->data.evt_node_initialized.provisioned) {\n      sl_btmesh_change_switch_position(SL_BTMESH_LIGHTING_CLIENT_TOGGLE);\n    }\n  break;\n}\n","instantiable":false,"label":"Lightness Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Lighting|studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_lighting_client","isEditable":false,"isEnabled":true,"name":"btmesh_lighting_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_lighting_client"},{"keyWords":"btmesh_lighting_server","componentId":"btmesh_lighting_server","isConfigurable":true,"documentation":"","description":"Used to support the control and reporting functionality of a node with a light source that is dimmable. Lightness Server extends Generic Power OnOff Server model and Generic Level Server model. It also has a corresponding Lightness Setup Server model which is present in the same element.\nThe component provides the reporting functions, and the possibility to set current, default, and last values of the lightness value. This component is prepared for integration into SOC applications.\nThis is a Low-Code component. The following weak callback is available to implement the relevant light source handling:\nvoid sl_btmesh_lighting_level_pwm_cb(uint16_t level);\n","instantiable":false,"label":"Lightness Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Lighting|studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_lighting_server","isEditable":false,"isEnabled":true,"name":"btmesh_lighting_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Lighting-btmesh_lighting_server"}],"isEnabled":true,"name":"Lighting","id":"studiocomproot-Bluetooth_Mesh-Models-Lighting","label":"Lighting","type":"category"},{"children":[{"keyWords":"btmesh_ae_client","componentId":"btmesh_ae_client","isConfigurable":true,"documentation":"","description":"Advertisement Extension Client component enables the Silabs Configuration Client vendor model for the node. Silabs Configuration Client can setup other nodes with Silabs Configuration Server Feature enabled (e.g. by the Advertisement Extension Server component). This is a proprietary feature which breaks compliance with AE in BT Mesh 1.1 specification. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Advertisement Extension Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Proprietary|studiocomproot-Bluetooth_Mesh-Models-Proprietary-btmesh_ae_client","isEditable":false,"isEnabled":true,"name":"btmesh_ae_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Proprietary-btmesh_ae_client"},{"keyWords":"btmesh_ae_server","componentId":"btmesh_ae_server","isConfigurable":true,"documentation":"","description":"Advertisement Extension Server component enables the Silabs Configuration Server vendor model for the node to allow data transfer over Advertisement Extension. This is a proprietary feature which breaks compliance with AE in BT Mesh 1.1 specification. Mesh data over Advertisement Extension can be used in message-heavy applications (e.g. Device Firmware Update) to speed up data transfer between nodes. All nodes must have the Silabs Configuration Server vendor model enabled, and a Silabs Configuration Client (enabled by e.g. the Advertisement Extension Client component) must configure the clients to use Advertisement Extension. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Advertisement Extension Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Proprietary|studiocomproot-Bluetooth_Mesh-Models-Proprietary-btmesh_ae_server","isEditable":false,"isEnabled":true,"name":"btmesh_ae_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Proprietary-btmesh_ae_server"},{"keyWords":"ncp_btmesh_ae_client","componentId":"ncp_btmesh_ae_client","isConfigurable":true,"documentation":"","description":"NCP Advertisement Extension Client component enables the Silabs Configuration Client vendor model for the node. Silabs Configuration Client can setup other nodes with Silabs Configuration Server Feature enabled (e.g. by the Advertisement Extension Server component). This is a proprietary feature which breaks compliance with AE in BT Mesh 1.1 specification. This component is prepared for integration into NCP applications.\nThis is a No-Code component.\n","instantiable":false,"label":"NCP Advertisement Extension Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Proprietary|studiocomproot-Bluetooth_Mesh-Models-Proprietary-ncp_btmesh_ae_client","isEditable":false,"isEnabled":true,"name":"ncp_btmesh_ae_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Proprietary-ncp_btmesh_ae_client"},{"keyWords":"ncp_btmesh_ae_server","componentId":"ncp_btmesh_ae_server","isConfigurable":true,"documentation":"","description":"NCP Advertisement Extension Server component enables the Silabs Configuration Server vendor model for the node to allow data transfer over Advertisement Extension. This is a proprietary feature which breaks compliance with AE in BT Mesh 1.1 specification. Mesh data over Advertisement Extension can be used in message-heavy applications (e.g. Device Firmware Update) to speed up data transfer between nodes. All nodes must have the Silabs Configuration Server vendor model enabled, and a Silabs Configuration Client (enabled by e.g. the Advertisement Extension Client component) must configure the clients to use Advertisement Extension. This component is prepared for integration into NCP applications.\nThis is a No-Code component.\n","instantiable":false,"label":"NCP Advertisement Extension Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Proprietary|studiocomproot-Bluetooth_Mesh-Models-Proprietary-ncp_btmesh_ae_server","isEditable":false,"isEnabled":true,"name":"ncp_btmesh_ae_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Proprietary-ncp_btmesh_ae_server"}],"isEnabled":true,"name":"Proprietary","id":"studiocomproot-Bluetooth_Mesh-Models-Proprietary","label":"Proprietary","type":"category"},{"children":[{"keyWords":"btmesh_solicitation_config_client","componentId":"btmesh_solicitation_config_client","isConfigurable":true,"documentation":"","description":"Provides a thin layer to automatically initialize the Solicitation PDU RPL Config Client model. The model then can be used to remove addresses from the solicitation replay protection list of a node that supports the Solicitation PDU RPL Configuration Server model.\nThis is a No-Code component.\n","instantiable":false,"label":"Bluetooth Mesh Solicitation PDU RPL Config Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Proxy_Solicitation|studiocomproot-Bluetooth_Mesh-Models-Proxy_Solicitation-btmesh_solicitation_config_client","isEditable":false,"isEnabled":true,"name":"btmesh_solicitation_config_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Proxy_Solicitation-btmesh_solicitation_config_client"}],"isEnabled":true,"name":"Proxy Solicitation","id":"studiocomproot-Bluetooth_Mesh-Models-Proxy_Solicitation","label":"Proxy Solicitation","type":"category"},{"children":[{"keyWords":"btmesh_remote_provisioning_client","componentId":"btmesh_remote_provisioning_client","isConfigurable":true,"documentation":"","description":"Used to support remote provisioning client functionality of provisioning devices into a mesh network by interacting with a mesh node that supports the Remote Provisioning Server model. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Remote Provisioning Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Remote_Provisioning|studiocomproot-Bluetooth_Mesh-Models-Remote_Provisioning-btmesh_remote_provisioning_client","isEditable":false,"isEnabled":true,"name":"btmesh_remote_provisioning_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Remote_Provisioning-btmesh_remote_provisioning_client"},{"keyWords":"btmesh_remote_provisioning_server","componentId":"btmesh_remote_provisioning_server","isConfigurable":true,"documentation":"","description":"Used to support remote provisioning server functionality of provisioning a remote device over the mesh network and to perform the Node Provisioning Protocol Interface procedures. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Remote Provisioning Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Remote_Provisioning|studiocomproot-Bluetooth_Mesh-Models-Remote_Provisioning-btmesh_remote_provisioning_server","isEditable":false,"isEnabled":true,"name":"btmesh_remote_provisioning_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Remote_Provisioning-btmesh_remote_provisioning_server"}],"isEnabled":true,"name":"Remote Provisioning","id":"studiocomproot-Bluetooth_Mesh-Models-Remote_Provisioning","label":"Remote Provisioning","type":"category"},{"children":[{"keyWords":"btmesh_sar_config_client","componentId":"btmesh_sar_config_client","isConfigurable":true,"documentation":"","description":"SAR Configuration Client component enables the configuration of the lower transport layer on nodes that support the SAR Configuration Server model. This component extends the DCD with SAR Configuration Client model ID and initializes the SAR Configuration Client model in the BT Mesh stack automatically. The node configuration shall be performed through the SAR Configuration Client BT Mesh API calls. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"SAR Configuration Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-SAR|studiocomproot-Bluetooth_Mesh-Models-SAR-btmesh_sar_config_client","isEditable":false,"isEnabled":true,"name":"btmesh_sar_config_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-SAR-btmesh_sar_config_client"},{"keyWords":"btmesh_sar_config_server","componentId":"btmesh_sar_config_server","isConfigurable":true,"documentation":"","description":"SAR Configuration Server component enables the local and remote configuration of the segmentation and reassembly behavior of a node. This component extends the DCD with SAR Configuration Server model ID and initializes the SAR Configuration Server model in the BT Mesh stack automatically. The local node configuration shall be performed through the SAR Configuration Server BT Mesh API calls. The BT Mesh stack reports in SAR Configuration Server events when the SAR Configuration Transmitter and Receiver states are set by SAR Configuration Client. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"SAR Configuration Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-SAR|studiocomproot-Bluetooth_Mesh-Models-SAR-btmesh_sar_config_server","isEditable":false,"isEnabled":true,"name":"btmesh_sar_config_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-SAR-btmesh_sar_config_server"}],"isEnabled":true,"name":"SAR","id":"studiocomproot-Bluetooth_Mesh-Models-SAR","label":"SAR","type":"category"},{"children":[{"keyWords":"btmesh_sensor_client","componentId":"btmesh_sensor_client","isConfigurable":true,"documentation":"","description":"Used to support the functionality of a node that can monitor sensor data and configure a set of sensors on another node.\nSensor Client can connect to multiple Sensor Servers. It may operate on states defined by Sensor Server model and Sensor Setup model via Sensor messages.\nThis component supports temperature, people count, and illuminance data. It provides callback functions for receiving these data, for events, such as when Sensor Server discovery has started, when a device is found. There is an interface to change the current property listened to and request data on said property. This component is prepared for integration into SOC applications.\nThis can be a Low-Code component. The bare minimum for e.g. listening to a broadcast sensor server data is calling sl_btmesh_sensor_client_update_registered_devices on initialization and implementing the relevant weak callbacks. The provided callbacks are the following:\nvoid sl_btmesh_sensor_client_on_discovery_started\nvoid sl_btmesh_sensor_client_on_new_device_found\nvoid sl_btmesh_sensor_client_on_new_temperature_data\nvoid sl_btmesh_sensor_client_on_new_people_count_data\nvoid sl_btmesh_sensor_client_on_new_illuminance_data\n","instantiable":false,"label":"Sensor Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Sensors|studiocomproot-Bluetooth_Mesh-Models-Sensors-btmesh_sensor_client","isEditable":false,"isEnabled":true,"name":"btmesh_sensor_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Sensors-btmesh_sensor_client"},{"keyWords":"btmesh_sensor_server","componentId":"btmesh_sensor_server","isConfigurable":true,"documentation":"","description":"Used to support the reporting functionality of a node with a set of sensors whose data is available on the network. It also has a corresponding Sensor Setup Server model which is present on the same element.\nThis component implements temperature, people count, and illuminance measurements. It provides callback functions for each property. This component is prepared for integration into SOC applications.\nThis is a No-Code component if using a Silicon Labs device and the relevant components for their respective hardware.\n","instantiable":false,"label":"Sensor Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Sensors|studiocomproot-Bluetooth_Mesh-Models-Sensors-btmesh_sensor_server","isEditable":false,"isEnabled":true,"name":"btmesh_sensor_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Sensors-btmesh_sensor_server"}],"isEnabled":true,"name":"Sensors","id":"studiocomproot-Bluetooth_Mesh-Models-Sensors","label":"Sensors","type":"category"},{"children":[{"keyWords":"btmesh_scene_client","componentId":"btmesh_scene_client","isConfigurable":true,"documentation":"","description":"Used to support the functionality of a node that can configure scenes on a network and trigger a state transition to a scene on another node.\nThis component provides a function to recall a scene identified by its number. This component is prepared for integration into SOC applications.\nThis is a No-Code component, if it is used with other compatible software components (eg.: CTL client).\n","instantiable":false,"label":"Scene Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes|studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes-btmesh_scene_client","isEditable":false,"isEnabled":true,"name":"btmesh_scene_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes-btmesh_scene_client"},{"keyWords":"btmesh_scene_server","componentId":"btmesh_scene_server","isConfigurable":true,"documentation":"","description":"Used to support the control and reporting functionality of a node that can participate in a scene. This component is prepared for integration into SOC applications.\nThis is a No-Code component, if it is used with other compatible software components (eg.: CTL server).\n","instantiable":false,"label":"Scene Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes|studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes-btmesh_scene_server","isEditable":false,"isEnabled":true,"name":"btmesh_scene_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes-btmesh_scene_server"},{"keyWords":"btmesh_scheduler_server","componentId":"btmesh_scheduler_server","isConfigurable":true,"documentation":"","description":"Used to support the control and reporting functionality of a node that can store a schedule. It has a corresponding Scheduler Setup Server model which is present in the same element. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Scheduler Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes|studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes-btmesh_scheduler_server","isEditable":false,"isEnabled":true,"name":"btmesh_scheduler_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes-btmesh_scheduler_server"},{"keyWords":"btmesh_time_server","componentId":"btmesh_time_server","isConfigurable":true,"documentation":"","description":"Used to support the control and reporting functionality of a node that tracks time. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Time Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes|studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes-btmesh_time_server","isEditable":false,"isEnabled":true,"name":"btmesh_time_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes-btmesh_time_server"}],"isEnabled":true,"name":"Time and Scenes","id":"studiocomproot-Bluetooth_Mesh-Models-Time_and_Scenes","label":"Time and Scenes","type":"category"},{"children":[{"keyWords":"btmesh_blob_transfer_client","componentId":"btmesh_blob_transfer_client","isConfigurable":true,"documentation":"","description":"Provides BT Mesh BLOB (binary large object) Transfer Client functionality, defined in mesh specification.\nThe BLOB Transfer Client model is used by a higher-layer application to transfer a BLOB to one or more BLOB Transfer Servers. The higher-layer application provides the inputs to the procedures executed by the client. This component is prepared for integration into SOC applications.\n","instantiable":false,"label":"BLOB Transfer Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Transport|studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_client","isEditable":false,"isEnabled":true,"name":"btmesh_blob_transfer_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_client"},{"keyWords":"btmesh_blob_transfer_server","componentId":"btmesh_blob_transfer_server","isConfigurable":true,"documentation":"","description":"Provides BT Mesh BLOB (Binary Large OBject) Transfer Server functionality, defined in mesh specification.\nThe BLOB Transfer Server model is used to receive a BLOB from a BLOB Transfer Client. The BLOB is delivered to a higher-layer application for further processing once the transfer is complete.\nThis component is instantiable, meaning that several named instances can be created. For each instance, a configuration header, an instance header and a source file is generated to encapsulate functionalities and initialize and manage the instance. Each BLOB Transfer Server instance shall be assigned to different elements by instance configuration in accordance with mesh specification.\nSelecting this component will also include the BLOB Transfer Server Core component, which is the implementation of the BLOB Transfer Server API.\nThis component is prepared for integration into SOC applications.\nThis is a Low-Code component. For example, the following weak callback function is called when a BLOB transfer is completed: void sl_btmesh_blob_transfer_server_transfer_done(sl_bt_uuid_64_t const *const blob_id)\n","instantiable":true,"label":"BLOB Transfer Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"Low-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Transport|studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_server","isEditable":false,"isEnabled":true,"name":"btmesh_blob_transfer_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_server"},{"keyWords":"btmesh_blob_transfer_server_core","componentId":"btmesh_blob_transfer_server_core","isConfigurable":true,"documentation":"","description":"Provides BT Mesh BLOB (Binary Large OBject) Transfer Server Core API for managing the BLOB Transfer Server instances.\nThis component includes only the core functionality. To configure and create instances of BLOB Transfer Server, the BLOB Transfer Server component shall be added to the project.\nThis component is prepared for integration into SOC applications.\n","instantiable":false,"label":"BLOB Transfer Server Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Transport|studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_server_core","isEditable":false,"isEnabled":true,"name":"btmesh_blob_transfer_server_core","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_server_core"},{"keyWords":"btmesh_blob_transfer_server_recommended_instance_dist","componentId":"btmesh_blob_transfer_server_recommended_instance_dist","isConfigurable":false,"documentation":"","description":"Provides recommended instance of BT Mesh BLOB (Binary Large OBject) Transfer Server component when BT Mesh DFU Distributor Node role is implemented by the node. BLOB Transfer Server instance of BT Mesh DFU Distributor Node role is present on the secondary element.\nThis is a utility component which is used to improve No-Code experience by providing default BLOB Transfer Server instances for upper layer components. The same component instances can be created manually to achieve same behavior. If BLOB Transfer Server instance is added to the project file directly then it overrides the recommended component instances, and consequently component instances shall be added to the project manually when this default SLC behavior is not desirable. If BLOB Transfer Server instance is added to the project in Project Configuration Tools Editor (Simplicity Studio) then the editor preserves the recommended instances by adding them to the project explicitly.\nThis is not a standalone component.\nThis component is prepared for integration into SOC applications.\n","instantiable":false,"label":"BLOB Transfer Server Recommended Instance for Distributor Role","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Transport|studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_server_recommended_instance_dist","isEditable":false,"isEnabled":true,"name":"btmesh_blob_transfer_server_recommended_instance_dist","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_server_recommended_instance_dist"},{"keyWords":"btmesh_blob_transfer_server_recommended_instance_target","componentId":"btmesh_blob_transfer_server_recommended_instance_target","isConfigurable":false,"documentation":"","description":"Provides recommended instance of BT Mesh BLOB (Binary Large OBject) Transfer Server component when BT Mesh DFU Target Node role is implemented by the node. BLOB Transfer Server instance of BT Mesh DFU Target Node role is present on the primary element.\nThis is a utility component which is used to improve No-Code experience by providing default BLOB Transfer Server instances for upper layer components. The same component instances can be created manually to achieve same behavior. If BLOB Transfer Server instance is added to the project file directly then it overrides the recommended component instances, and consequently component instances shall be added to the project manually when this default SLC behavior is not desirable. If BLOB Transfer Server instance is added to the project in Project Configuration Tools Editor (Simplicity Studio) then the editor preserves the recommended instances by adding them to the project explicitly.\nThis is not a standalone component.\nThis component is prepared for integration into SOC applications.\n","instantiable":false,"label":"BLOB Transfer Server Recommended Instance for Target Role","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Transport|studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_server_recommended_instance_target","isEditable":false,"isEnabled":true,"name":"btmesh_blob_transfer_server_recommended_instance_target","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_server_recommended_instance_target"},{"keyWords":"btmesh_blob_transfer_server_recommended_instance_all","componentId":"btmesh_blob_transfer_server_recommended_instance_all","isConfigurable":false,"documentation":"","description":"Provides recommended instances of BT Mesh BLOB (Binary Large OBject) Transfer Server component when both BT Mesh DFU Target Node and BT Mesh DFU Distributor Node roles are implemented by the node. BLOB Transfer Server instance of BT Mesh DFU Target Node role is present on the primary element. BLOB Transfer Server instance of BT Mesh DFU Distributor Node role is present on the secondary element.\nThis is a utility component which is used to improve No-Code experience by providing default BLOB Transfer Server instances for upper layer components. The same component instances can be created manually to achieve same behavior. If BLOB Transfer Server instance is added to the project file directly then it overrides the recommended component instances, and consequently component instances shall be added to the project manually when this default SLC behavior is not desirable. If BLOB Transfer Server instance is added to the project in Project Configuration Tools Editor (Simplicity Studio) then the editor preserves the recommended instances by adding them to the project explicitly.\nThis is not a standalone component.\nThis component is prepared for integration into SOC applications.\n","instantiable":false,"label":"BLOB Transfer Server Recommended Instances for Distributor and Target Roles","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Models|studiocomproot-Bluetooth_Mesh-Models-Transport|studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_server_recommended_instance_all","isEditable":false,"isEnabled":true,"name":"btmesh_blob_transfer_server_recommended_instance_all","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Models-Transport-btmesh_blob_transfer_server_recommended_instance_all"}],"isEnabled":true,"name":"Transport","id":"studiocomproot-Bluetooth_Mesh-Models-Transport","label":"Transport","type":"category"}],"isEnabled":true,"name":"Models","id":"studiocomproot-Bluetooth_Mesh-Models","label":"Models","type":"category"},{"children":[{"keyWords":"btmesh_nlc_ambient_light_sensor","componentId":"btmesh_nlc_ambient_light_sensor","isConfigurable":false,"documentation":"","description":"Ambient Light Sensor role in an NLC network. This component includes other components needed for an SoC application to act as an Ambient Light Sensor node in an NLC network, as well as components providing the relevant metadata for the role.\n","instantiable":false,"label":"Ambient Light Sensor Profile","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-NLC|studiocomproot-Bluetooth_Mesh-NLC-btmesh_nlc_ambient_light_sensor","isEditable":false,"isEnabled":true,"name":"btmesh_nlc_ambient_light_sensor","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-NLC-btmesh_nlc_ambient_light_sensor"},{"keyWords":"btmesh_nlc_basic_lightness_controller","componentId":"btmesh_nlc_basic_lightness_controller","isConfigurable":false,"documentation":"","description":"Basic Lightness Controller role in an NLC network. This component includes other components needed for an SoC application to act as a Basic Lightness Controller node in an NLC network, as well as components providing the relevant metadata for the role.\n","instantiable":false,"label":"Basic Lightness Controller Profile","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-NLC|studiocomproot-Bluetooth_Mesh-NLC-btmesh_nlc_basic_lightness_controller","isEditable":false,"isEnabled":true,"name":"btmesh_nlc_basic_lightness_controller","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-NLC-btmesh_nlc_basic_lightness_controller"},{"keyWords":"btmesh_nlc_basic_scene_selector","componentId":"btmesh_nlc_basic_scene_selector","isConfigurable":false,"documentation":"","description":"Basic Scene Selector role in an NLC network. This component includes other components needed for an SoC application to act as a Basic Scene Selector node in an NLC network, as well as components providing the relevant metadata for the role.\n","instantiable":false,"label":"Basic Scene Selector Profile","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-NLC|studiocomproot-Bluetooth_Mesh-NLC-btmesh_nlc_basic_scene_selector","isEditable":false,"isEnabled":true,"name":"btmesh_nlc_basic_scene_selector","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-NLC-btmesh_nlc_basic_scene_selector"},{"keyWords":"btmesh_nlc_dimming_control","componentId":"btmesh_nlc_dimming_control","isConfigurable":false,"documentation":"","description":"BaDimming Control role in an NLC network. This component includes other components needed for an SoC application to act as a Dimming Control node in an NLC network, as well as components providing the relevant metadata for the role.\n","instantiable":false,"label":"Dimming Control Profile","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-NLC|studiocomproot-Bluetooth_Mesh-NLC-btmesh_nlc_dimming_control","isEditable":false,"isEnabled":true,"name":"btmesh_nlc_dimming_control","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-NLC-btmesh_nlc_dimming_control"},{"keyWords":"btmesh_nlc_occupancy_sensor","componentId":"btmesh_nlc_occupancy_sensor","isConfigurable":false,"documentation":"","description":"Occupancy Sensor role in an NLC network. This component includes other components needed for an SoC application to act as an Occupancy Sensor node in an NLC network, as well as components providing the relevant metadata for the role.\n","instantiable":false,"label":"Occupancy Sensor Profile","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-NLC|studiocomproot-Bluetooth_Mesh-NLC-btmesh_nlc_occupancy_sensor","isEditable":false,"isEnabled":true,"name":"btmesh_nlc_occupancy_sensor","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-NLC-btmesh_nlc_occupancy_sensor"}],"isEnabled":true,"name":"NLC","id":"studiocomproot-Bluetooth_Mesh-NLC","label":"NLC","type":"category"},{"children":[{"keyWords":"btmesh_nlc_ambient_light_sensor_profile_metadata","componentId":"btmesh_nlc_ambient_light_sensor_profile_metadata","isConfigurable":true,"documentation":"","description":"This component provides the relevant metadata so the Ambient Light Sensor NLC profile is included in DCD Page 2.\n","instantiable":false,"label":"Ambient Light Sensor Profile Metadata","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Profile_Metadata|studiocomproot-Bluetooth_Mesh-Profile_Metadata-btmesh_nlc_ambient_light_sensor_profile_metadata","isEditable":false,"isEnabled":true,"name":"btmesh_nlc_ambient_light_sensor_profile_metadata","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Profile_Metadata-btmesh_nlc_ambient_light_sensor_profile_metadata"},{"keyWords":"btmesh_nlc_basic_lightness_controller_profile_metadata","componentId":"btmesh_nlc_basic_lightness_controller_profile_metadata","isConfigurable":true,"documentation":"","description":"This component provides the relevant metadata so the Basic Lightness Controller NLC profile is included in DCD Page 2.\n","instantiable":false,"label":"Basic Lightness Controller Profile Metadata","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Profile_Metadata|studiocomproot-Bluetooth_Mesh-Profile_Metadata-btmesh_nlc_basic_lightness_controller_profile_metadata","isEditable":false,"isEnabled":true,"name":"btmesh_nlc_basic_lightness_controller_profile_metadata","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Profile_Metadata-btmesh_nlc_basic_lightness_controller_profile_metadata"},{"keyWords":"btmesh_nlc_basic_scene_selector_profile_metadata","componentId":"btmesh_nlc_basic_scene_selector_profile_metadata","isConfigurable":true,"documentation":"","description":"This component provides the relevant metadata so the Basic Scene Selector NLC profile is included in DCD Page 2.\n","instantiable":false,"label":"Basic Scene Selector Profile Metadata","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Profile_Metadata|studiocomproot-Bluetooth_Mesh-Profile_Metadata-btmesh_nlc_basic_scene_selector_profile_metadata","isEditable":false,"isEnabled":true,"name":"btmesh_nlc_basic_scene_selector_profile_metadata","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Profile_Metadata-btmesh_nlc_basic_scene_selector_profile_metadata"},{"keyWords":"btmesh_nlc_dimming_control_profile_metadata","componentId":"btmesh_nlc_dimming_control_profile_metadata","isConfigurable":true,"documentation":"","description":"This component provides the relevant metadata so the Dimming Control NLC profile is included in DCD Page 2.\n","instantiable":false,"label":"Dimming Control Profile Metadata","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Profile_Metadata|studiocomproot-Bluetooth_Mesh-Profile_Metadata-btmesh_nlc_dimming_control_profile_metadata","isEditable":false,"isEnabled":true,"name":"btmesh_nlc_dimming_control_profile_metadata","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Profile_Metadata-btmesh_nlc_dimming_control_profile_metadata"},{"keyWords":"btmesh_nlc_occupancy_sensor_profile_metadata","componentId":"btmesh_nlc_occupancy_sensor_profile_metadata","isConfigurable":true,"documentation":"","description":"This component provides the relevant metadata so the Occupancy Sensor NLC profile is included in DCD Page 2.\n","instantiable":false,"label":"Occupancy Sensor Profile Metadata","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Profile_Metadata|studiocomproot-Bluetooth_Mesh-Profile_Metadata-btmesh_nlc_occupancy_sensor_profile_metadata","isEditable":false,"isEnabled":true,"name":"btmesh_nlc_occupancy_sensor_profile_metadata","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Profile_Metadata-btmesh_nlc_occupancy_sensor_profile_metadata"}],"isEnabled":true,"name":"Profile Metadata","id":"studiocomproot-Bluetooth_Mesh-Profile_Metadata","label":"Profile Metadata","type":"category"},{"children":[{"keyWords":"btmesh_stack_scanner_extended","componentId":"btmesh_stack_scanner_extended","isConfigurable":false,"documentation":"","description":"This component lets the Bluetooth Mesh stack make use of extended advertisements. It uses Bluetooth extended scanner API.\nInclude this component if your mesh application needs extended advertisements.  For standard-compliant mesh application you should use the legacy scanner component instead.\n","instantiable":false,"label":"Standard Extended Scanner","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Scanner_Types|studiocomproot-Bluetooth_Mesh-Scanner_Types-btmesh_stack_scanner_extended","isEditable":false,"isEnabled":true,"name":"btmesh_stack_scanner_extended","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Scanner_Types-btmesh_stack_scanner_extended"},{"keyWords":"btmesh_stack_scanner_legacy","componentId":"btmesh_stack_scanner_legacy","isConfigurable":false,"documentation":"","description":"This component lets the Bluetoot Mesh stack make use of legacy advertisements. It uses Bluetooth legacy scanner API.\nIt is recommended to use this component. Standard-compliant Mesh applications use legacy advertisements.\n","instantiable":false,"label":"Standard Legacy Scanner","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Scanner_Types|studiocomproot-Bluetooth_Mesh-Scanner_Types-btmesh_stack_scanner_legacy","isEditable":false,"isEnabled":true,"name":"btmesh_stack_scanner_legacy","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Scanner_Types-btmesh_stack_scanner_legacy"}],"isEnabled":true,"name":"Scanner Types","id":"studiocomproot-Bluetooth_Mesh-Scanner_Types","label":"Scanner Types","type":"category"},{"children":[{"children":[{"keyWords":"btmesh_stack_friend","componentId":"btmesh_stack_friend","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Friend functionality. A Friend node caches messages and network security updates for a Low Power Node.","instantiable":false,"label":"Friend","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Features|studiocomproot-Bluetooth_Mesh-Stack-Features-btmesh_stack_friend","isEditable":false,"isEnabled":true,"name":"btmesh_stack_friend","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Features-btmesh_stack_friend"},{"keyWords":"btmesh_stack_lpn","componentId":"btmesh_stack_lpn","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Low Power Node feature. When the LPN feature is initialized by the node, it will stop scanning for messages in the background. To receive messages from the network, the application will need to establish a Friendship, where a Friend node will cache mesh messages and beacons on the LPN's behalf. The application should then periodically poll its Friend to retrieve any messages the Friend may have cached for the LPN.","instantiable":false,"label":"LPN","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Features|studiocomproot-Bluetooth_Mesh-Stack-Features-btmesh_stack_lpn","isEditable":false,"isEnabled":true,"name":"btmesh_stack_lpn","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Features-btmesh_stack_lpn"},{"keyWords":"btmesh_stack_proxy","componentId":"btmesh_stack_proxy","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh GATT Proxy functionality. It is mainly used by devices such as mobile phones to communicate with the rest of the Bluetooth mesh network through a proxy device. The proxy protocol is designed to enable nodes to send and receive the Bluetooth Mesh network packets over a connection-oriented bearer.","instantiable":false,"label":"Proxy","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Features|studiocomproot-Bluetooth_Mesh-Stack-Features-btmesh_stack_proxy","isEditable":false,"isEnabled":true,"name":"btmesh_stack_proxy","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Features-btmesh_stack_proxy"}],"isEnabled":true,"name":"Features","id":"studiocomproot-Bluetooth_Mesh-Stack-Features","label":"Features","type":"category"},{"children":[{"children":[{"keyWords":"btmesh_stack_config_client","componentId":"btmesh_stack_config_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Configuration Client model. This model is used by a Configuration Manager node to configure the publication and subscription settings of nodes, set up relay nodes and manage other settings on the nodes of the network.","instantiable":false,"label":"Configuration Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_config_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_config_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_config_client"},{"keyWords":"btmesh_stack_health_client","componentId":"btmesh_stack_health_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Health Client model. The model is used to retrieve fault states from other nodes, and adjust how often they publish their fault states. The fault states can be used to indicate a low battery or other operational problem. The model is also used to enable or disable the Attention Timer on a node, which can be used to provide a visual or audio cue about the node's location to the user.","instantiable":false,"label":"Health Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_health_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_health_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_health_client"},{"keyWords":"btmesh_stack_health_server","componentId":"btmesh_stack_health_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Health Server model. The model is used to indicate fault states, such as a low battery or other operational problem. The model also provides an interface to its Attention Timer, which can be used to provide a visual or audio cue about the node's location to the user. It is mandatory to have a Health Server on each element of the node.","instantiable":false,"label":"Health Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_health_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_health_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_health_server"},{"keyWords":"btmesh_stack_lcd_client","componentId":"btmesh_stack_lcd_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Large Composition Data Client model. This model enables retrieving a remote node's Device Composition Data chunk by chunk, when the data is too large to retrieve in a single mesh message. It also enables querying a remote node's Metadata pages, which provide additional information about the models present on the remote node, such as the supported list of Sensor Property IDs for a Sensor Server or the supported temperature range for a Light CTL Temperature Server.","instantiable":false,"label":"Large Composition Data Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_lcd_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_lcd_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_lcd_client"},{"keyWords":"btmesh_stack_lcd_server","componentId":"btmesh_stack_lcd_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Large Composition Data Server model. This model provides the node an interface for a remote node to query Device Composition Data that is larger than what could fit in a single mesh message. It also provides the interface for a remote node to query the Metadata pages of the node, which provide additional information about the models present on the node, such as the supported list of Sensor Property IDs for a Sensor Server or the supported temperature range for a Light CTL Temperature Server.","instantiable":false,"label":"Large Composition Data Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_lcd_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_lcd_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_lcd_server"},{"keyWords":"btmesh_stack_on_demand_private_proxy_client","componentId":"btmesh_stack_on_demand_private_proxy_client","isConfigurable":false,"documentation":"","description":"Provides the Bluetooth mesh On-Demand Private Proxy Client model. It is used to support the functionality of a node that can configure the advertising with Private Network Identity type functionality of another node.","instantiable":false,"label":"On-Demand Private Proxy Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_on_demand_private_proxy_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_on_demand_private_proxy_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_on_demand_private_proxy_client"},{"keyWords":"btmesh_stack_on_demand_private_proxy_server","componentId":"btmesh_stack_on_demand_private_proxy_server","isConfigurable":false,"documentation":"","description":"Provides the Bluetooth mesh On-Demand Private Proxy Server model. It is used to support the configuration of the advertising with Private Network Identity type functionality of a node.","instantiable":false,"label":"On-Demand Private Proxy Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_on_demand_private_proxy_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_on_demand_private_proxy_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_on_demand_private_proxy_server"},{"keyWords":"btmesh_stack_private_beacon_client","componentId":"btmesh_stack_private_beacon_client","isConfigurable":false,"documentation":"","description":"Provides the Bluetooth mesh Private Beacon Client model. It is used to support the functionality of a node that can configure the Mesh Private beacons functionality of another node.","instantiable":false,"label":"Private Beacon Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_private_beacon_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_private_beacon_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_private_beacon_client"},{"keyWords":"btmesh_stack_private_beacon_server","componentId":"btmesh_stack_private_beacon_server","isConfigurable":false,"documentation":"","description":"Provides the Bluetooth mesh Private Beacon Server model. It is used to support the configuration of the Mesh Private beacons functionality of a node.","instantiable":false,"label":"Private Beacon Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_private_beacon_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_private_beacon_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_private_beacon_server"},{"keyWords":"btmesh_stack_remote_provisioning_client","componentId":"btmesh_stack_remote_provisioning_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Remote Provisioning Client model. Remote provisioning allows a provisioner to provision devices located outside of the provisioner's radio range. This model is used to manage provisioning devices into a mesh network by interacting with a mesh node that supports the Remote Provisioning Server model.","instantiable":false,"label":"Remote Provisioning Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_remote_provisioning_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_remote_provisioning_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_remote_provisioning_client"},{"keyWords":"btmesh_stack_remote_provisioning_server","componentId":"btmesh_stack_remote_provisioning_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Remote Provisioning Server model. Remote provisioning allows a provisioner to provision devices located outside of the provisioner's radio range. This model provides the functionality of provisioning a remote device over the mesh network and to perform the Node Provisioning Protocol Interface procedures.","instantiable":false,"label":"Remote Provisioning Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_remote_provisioning_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_remote_provisioning_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_remote_provisioning_server"},{"keyWords":"btmesh_stack_sar_config_client","componentId":"btmesh_stack_sar_config_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh SAR Configuration Client model. This model is used to support the functionality of configuring the behavior of the lower transport layer of a node that supports the SAR Configuration Server model","instantiable":false,"label":"SAR Configuration Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_sar_config_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_sar_config_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_sar_config_client"},{"keyWords":"btmesh_stack_sar_config_server","componentId":"btmesh_stack_sar_config_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh SAR Configuration Server Model. This model provides the functionality of configuration of the segmentation and reassembly behavior of a node.","instantiable":false,"label":"SAR Configuration Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_sar_config_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_sar_config_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_sar_config_server"},{"keyWords":"btmesh_stack_solicitation_config_client","componentId":"btmesh_stack_solicitation_config_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Solicitation PDU RPL Configuration Client model. It is used to support the functionality of removing addresses from the solicitation replay protection list of a node that supports the Solicitation PDU RPL Configuration Server model.","instantiable":false,"label":"Solicitation PDU RPL Configuration Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Core|studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_solicitation_config_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_solicitation_config_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core-btmesh_stack_solicitation_config_client"}],"isEnabled":true,"name":"Core","id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Core","label":"Core","type":"category"},{"children":[{"keyWords":"btmesh_stack_mbt_client","componentId":"btmesh_stack_mbt_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh BLOB Transfer Client model. It is used to transfer large binary objects to other nodes in the network, either in a unicast or multicast fashion.","instantiable":false,"label":"BLOB Transfer Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_mbt_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_mbt_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_mbt_client"},{"keyWords":"btmesh_stack_mbt_server","componentId":"btmesh_stack_mbt_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh BLOB Transfer Server model. It is used to receive large binary objects from other nodes in the network.","instantiable":false,"label":"BLOB Transfer Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_mbt_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_mbt_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_mbt_server"},{"keyWords":"btmesh_stack_fw_distribution_client","componentId":"btmesh_stack_fw_distribution_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Firmware Distribution Client model. It is required for the Initiator role. The model is used to manage firmware images and firmware distributions on a Distributor node. This model uses the BLOB Transfer Client model to upload firmware images to a Distributor node.","instantiable":false,"label":"Firmware Distribution Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_distribution_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_fw_distribution_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_distribution_client"},{"keyWords":"btmesh_stack_fw_distribution_server","componentId":"btmesh_stack_fw_distribution_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Firmware Distribution Server model. It is required for the Distributor role. The model receives and stores firmware images as instructed by a Firmware Distribution Client. When instructed by the Client, the Firmware Distribution Server will distribute a firmware image to a set of nodes chosen by the Client. This model uses the BLOB Transfer Server model to receive firmware images; the Firmware Update Client model to manage updating the nodes; and the BLOB Transfer Client model to send the firmware image data to the nodes.","instantiable":false,"label":"Firmware Distribution Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_distribution_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_fw_distribution_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_distribution_server"},{"keyWords":"btmesh_stack_fw_list_cache","componentId":"btmesh_stack_fw_list_cache","isConfigurable":false,"documentation":"","description":"This component provides a simplistic implementation of the Firmware Distribution Server's Firmware List -related platform APIs. The cache stores the Firmware ID's and metadata of received images, but does not actually store any image data, and is not persistent across resets. This component should be used for testing purposes only. The Distributor example provides a proper reference implementation of the Firmware List.","instantiable":false,"label":"Firmware List Cache for Distribution Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_list_cache","isEditable":false,"isEnabled":true,"name":"btmesh_stack_fw_list_cache","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_list_cache"},{"keyWords":"btmesh_stack_fw_standalone_updater","componentId":"btmesh_stack_fw_standalone_updater","isConfigurable":false,"documentation":"","description":"This component provides the Bluetooth mesh Device Firmware Upgrade Standalone Updater functionality. The Standalone Updater role combines the responsibilities of the Initiator and Distributor into one node. The Standalone Updater chooses which nodes to update, and which firmware images to use by itself. It uses the Firmware Update Client model to manage the updates and the BLOB Transfer Client to send the firmware image data to the nodes.","instantiable":false,"label":"Firmware Standalone Updater","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_standalone_updater","isEditable":false,"isEnabled":true,"name":"btmesh_stack_fw_standalone_updater","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_standalone_updater"},{"keyWords":"btmesh_stack_fw_update_client","componentId":"btmesh_stack_fw_update_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Firmware Update Client model. It is used by the Initiator, Distributor and Standalone Updater roles to check the current firmware and manage updates on a node. When used by a Distributor or Standalone Updater, the model uses the BLOB Transfer Client model to send firmware image data to a set of nodes.","instantiable":false,"label":"Firmware Update Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_update_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_fw_update_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_update_client"},{"keyWords":"btmesh_stack_fw_update_server","componentId":"btmesh_stack_fw_update_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Firmware Update Server model. It is used by the Updating Node role to provide information about the current firmware on the node and where to find firmware updates; it also provides an interface for a Distributor or Standalone Updater to manage updating the node. The BLOB Transfer Server model is used to receive firmware image data.","instantiable":false,"label":"Firmware Update Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU|studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_update_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_fw_update_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-DFU-btmesh_stack_fw_update_server"}],"isEnabled":true,"name":"DFU","id":"studiocomproot-Bluetooth_Mesh-Stack-Models-DFU","label":"DFU","type":"category"},{"children":[{"keyWords":"btmesh_stack_silabs_config_client","componentId":"btmesh_stack_silabs_config_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Silicon Labs Configuration Client vendor model. It is used to configure global and per-model specific settings of nodes such as Tx-PHY for long packets, usage of advertising extensions on per-model basis.","instantiable":false,"label":"Silicon Labs Configuration Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Proprietary|studiocomproot-Bluetooth_Mesh-Stack-Models-Proprietary-btmesh_stack_silabs_config_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_silabs_config_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Proprietary-btmesh_stack_silabs_config_client"},{"keyWords":"btmesh_stack_silabs_config_server","componentId":"btmesh_stack_silabs_config_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Silicon Labs Configuration Server model. It provides the functionality of configuration of global and per-model specific settings of a node.","instantiable":false,"label":"Silicon Labs Configuration Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Proprietary|studiocomproot-Bluetooth_Mesh-Stack-Models-Proprietary-btmesh_stack_silabs_config_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_silabs_config_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Proprietary-btmesh_stack_silabs_config_server"}],"isEnabled":true,"name":"Proprietary","id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Proprietary","label":"Proprietary","type":"category"},{"children":[{"keyWords":"btmesh_stack_sensor_client","componentId":"btmesh_stack_sensor_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Sensor Client model. It is used to support the functionality of a node that can monitor sensor data and configure a set of sensors on another node.","instantiable":false,"label":"Sensor Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Sensors|studiocomproot-Bluetooth_Mesh-Stack-Models-Sensors-btmesh_stack_sensor_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_sensor_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Sensors-btmesh_stack_sensor_client"},{"keyWords":"btmesh_stack_sensor_server","componentId":"btmesh_stack_sensor_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Sensor Server model. It is used to support the reporting functionality of a node with a set of sensors whose data is available on the network.","instantiable":false,"label":"Sensor Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Sensors|studiocomproot-Bluetooth_Mesh-Stack-Models-Sensors-btmesh_stack_sensor_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_sensor_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Sensors-btmesh_stack_sensor_server"},{"keyWords":"btmesh_stack_sensor_setup_server","componentId":"btmesh_stack_sensor_setup_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Sensor Setup Server model. It is used to support the configuration functionality of a node with a set of sensors whose data is available on the network.","instantiable":false,"label":"Sensor Setup Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Sensors|studiocomproot-Bluetooth_Mesh-Stack-Models-Sensors-btmesh_stack_sensor_setup_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_sensor_setup_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Sensors-btmesh_stack_sensor_setup_server"}],"isEnabled":true,"name":"Sensors","id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Sensors","label":"Sensors","type":"category"},{"children":[{"keyWords":"btmesh_stack_scene_client","componentId":"btmesh_stack_scene_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Scene Client model. This model is used to to send and receive messages to/from the Scene Server and Scene Setup Server models. It is used to support the functionality of a node that can configure scenes on a network and trigger a state transition to a scene on another node.","instantiable":false,"label":"Scene Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_scene_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_scene_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_scene_client"},{"keyWords":"btmesh_stack_scene_server","componentId":"btmesh_stack_scene_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Scene Server model. This model holds a list of scenes, and exposes the functionality for storing and recalling the state of these scenes. It is used to support the control and reporting functionality of a node that can participate in a scene.","instantiable":false,"label":"Scene Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_scene_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_scene_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_scene_server"},{"keyWords":"btmesh_stack_scene_setup_server","componentId":"btmesh_stack_scene_setup_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Scene Setup Server model. It is used to support the configuration functionality of a node that can participate in a scene. It extends and corresponds with the Scene Server model and extends the Generic Default Transition Time Server model.","instantiable":false,"label":"Scene Setup Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_scene_setup_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_scene_setup_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_scene_setup_server"},{"keyWords":"btmesh_stack_scheduler_client","componentId":"btmesh_stack_scheduler_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Scheduler Client model. It is used to support the functionality of a node that can configure the schedule on another node. Schedule being the occurrence of an event and the type of event to be triggered.","instantiable":false,"label":"Scheduler Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_scheduler_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_scheduler_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_scheduler_client"},{"keyWords":"btmesh_stack_scheduler_server","componentId":"btmesh_stack_scheduler_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Scheduler Server model. It is used to support the control and reporting functionality of a node that can store a schedule.","instantiable":false,"label":"Scheduler Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_scheduler_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_scheduler_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_scheduler_server"},{"keyWords":"btmesh_stack_time_client","componentId":"btmesh_stack_time_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Time Client model. It is used to support the functionality of a node that can configure the timekeeping of another node.","instantiable":false,"label":"Time Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_time_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_time_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_time_client"},{"keyWords":"btmesh_stack_time_server","componentId":"btmesh_stack_time_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Time Server model. It is is used to support the control and reporting functionality of a node that tracks time.","instantiable":false,"label":"Time Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes|studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_time_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_time_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes-btmesh_stack_time_server"}],"isEnabled":true,"name":"Time and Scenes","id":"studiocomproot-Bluetooth_Mesh-Stack-Models-Time_and_Scenes","label":"Time and Scenes","type":"category"},{"keyWords":"btmesh_stack_generic_client","componentId":"btmesh_stack_generic_client","isConfigurable":false,"documentation":"","description":"Provides the Bluetooth mesh Generic Client models. The libraries are structured so that only the specific categories of models that are enabled with their respective BGAPI init calls are included in the application binary. For example, an application that wishes to use Generic On/Off and Generic Level must call sl_btmesh_cmd_generic_client_init_on_off() and sl_btmesh_cmd_generic_client_init_level().","instantiable":false,"label":"Generic Client Models","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_generic_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_generic_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_generic_client"},{"keyWords":"btmesh_stack_generic_server","componentId":"btmesh_stack_generic_server","isConfigurable":false,"documentation":"","description":"Provides the Bluetooth mesh Generic Server models. The libraries are structured so that only the specific categories of models that are enabled with their respective BGAPI init calls are included in the application binary. For example, an application that wishes to use Generic On/Off and Generic Level must call sl_btmesh_cmd_generic_server_init_on_off() and sl_btmesh_cmd_generic_server_init_level().","instantiable":false,"label":"Generic Server Models","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_generic_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_generic_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_generic_server"},{"keyWords":"btmesh_stack_lc_client","componentId":"btmesh_stack_lc_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh LC Client model. This model is used to manage the settings of lighting controller nodes. It is used to configure whether a node should use an occupancy sensor to automatically adjust lighting, or only work via a manual switch. The feedback loop coefficients of the controller, timings between state transitions, and ambient light threshold levels can also be adjusted via this model.","instantiable":false,"label":"Light Control Client Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_lc_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_lc_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_lc_client"},{"keyWords":"btmesh_stack_lc_server","componentId":"btmesh_stack_lc_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh LC Server model. This model provides automatic lighting control, either via occupancy and ambient light sensors, or manual switches, or a combination of both. Turning the lights on and off, and whether to use automatic light control and occupancy sensor can be configured via this model. The control loop parameters and state transition times used by the LC Server are managed by an LC Client via the LC Setup Server's interface.","instantiable":false,"label":"Light Control Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_lc_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_lc_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_lc_server"},{"keyWords":"btmesh_stack_lc_setup_server","componentId":"btmesh_stack_lc_setup_server","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh LC Setup Server model. This model works as the configuration interface for an LC Server located in the same element. It allows an LC Client to adjust the feedback loop coefficients, state transition times, and ambient light threshold levels. The LC Setup Server is separate from the LC Server to provide the possibility for application key domain separation. For example, an LC Client could have the permission to turn the lights on and off by knowing the application key the LC Server uses, but it would not have the permission to change the light controller configuration if it doesn't have the key the LC Setup Server uses.","instantiable":false,"label":"Light Control Setup Server Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_lc_setup_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_lc_setup_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_lc_setup_server"},{"keyWords":"btmesh_stack_vendor_model","componentId":"btmesh_stack_vendor_model","isConfigurable":false,"documentation":"","description":"Provides functionality to send and receive vendor-specific messages.","instantiable":false,"label":"Vendor Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-Models|studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_vendor_model","isEditable":false,"isEnabled":true,"name":"btmesh_stack_vendor_model","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-Models-btmesh_stack_vendor_model"}],"isEnabled":true,"name":"Models","id":"studiocomproot-Bluetooth_Mesh-Stack-Models","label":"Models","type":"category"},{"keyWords":"btmesh_stack","componentId":"btmesh_stack","isConfigurable":true,"documentation":"","description":"Provides Bluetooth Mesh Stack library.","instantiable":false,"label":"Bluetooth Mesh Stack","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack","isEditable":false,"isEnabled":true,"name":"btmesh_stack","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack"},{"keyWords":"btmesh_stack_diagnostic","componentId":"btmesh_stack_diagnostic","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Diagnostic Utilities. It provides the functionality that assist with diagnosing problems.","instantiable":false,"label":"Diagnostic","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_diagnostic","isEditable":false,"isEnabled":true,"name":"btmesh_stack_diagnostic","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_diagnostic"},{"keyWords":"btmesh_stack_gatt_prov_bearer","componentId":"btmesh_stack_gatt_prov_bearer","isConfigurable":true,"documentation":"","description":"Enables the Bluetooth Mesh PB-GATT Provisioning Bearer for the Node.","instantiable":false,"label":"GATT Provisioning Bearer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_gatt_prov_bearer","isEditable":false,"isEnabled":true,"name":"btmesh_stack_gatt_prov_bearer","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_gatt_prov_bearer"},{"keyWords":"btmesh_stack_migration","componentId":"btmesh_stack_migration","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh stack persistent storage migration code for applications that were built with releases older than v3.2. The migration commands need to be executed once, before the node is initialized. This migration code does not need to be included in subsequent application versions, as long as the persistent storage has been migrated once.","instantiable":false,"label":"Migration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_migration","isEditable":false,"isEnabled":true,"name":"btmesh_stack_migration","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_migration"},{"keyWords":"btmesh_stack_node","componentId":"btmesh_stack_node","isConfigurable":false,"documentation":"","description":"Provides the Bluetooth Mesh stack API for unprovisioned devices and provisioned nodes. Provisioning is the process of adding a new, unprovisioned device to a Bluetooth mesh network. This API is the bedrock for building Bluetooth mesh applications.","instantiable":false,"label":"Node","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_node","isEditable":false,"isEnabled":true,"name":"btmesh_stack_node","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_node"},{"keyWords":"btmesh_stack_provisioner","componentId":"btmesh_stack_provisioner","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Provisioner functionality. Provisioning is the process of adding a new, unprovisioned device to a Bluetooth mesh network, such as a light bulb. The process is managed by a provisioner.","instantiable":false,"label":"Provisioner","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_provisioner","isEditable":false,"isEnabled":true,"name":"btmesh_stack_provisioner","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_provisioner"},{"keyWords":"btmesh_stack_proxy_client","componentId":"btmesh_stack_proxy_client","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh GATT Proxy client-side functionality. The Proxy Client supports a mesh bearer using the Proxy protocol. For example, the Proxy Client can use the GATT bearer to send mesh messages to a node that supports the advertising bearer.","instantiable":false,"label":"Proxy Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_proxy_client","isEditable":false,"isEnabled":true,"name":"btmesh_stack_proxy_client","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_proxy_client"},{"keyWords":"btmesh_stack_proxy_server","componentId":"btmesh_stack_proxy_server","isConfigurable":true,"documentation":"","description":"Provides Bluetooth mesh GATT Proxy server-side functionality. The Proxy Server is a node that supports a mesh bearer using the Proxy protocol and at least one other mesh bearer. For example, the Proxy Server can forward mesh messages between the advertising bearer and the GATT bearer.","instantiable":false,"label":"Proxy Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_proxy_server","isEditable":false,"isEnabled":true,"name":"btmesh_stack_proxy_server","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_proxy_server"},{"keyWords":"btmesh_stack_test","componentId":"btmesh_stack_test","isConfigurable":false,"documentation":"","description":"Provides Bluetooth mesh Test Utilities (Only for development, do not use them in production).","instantiable":false,"label":"Test","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Stack|studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_test","isEditable":false,"isEnabled":true,"name":"btmesh_stack_test","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Stack-btmesh_stack_test"}],"isEnabled":true,"name":"Stack","id":"studiocomproot-Bluetooth_Mesh-Stack","label":"Stack","type":"category"},{"children":[{"keyWords":"app_btmesh_util","componentId":"app_btmesh_util","isConfigurable":true,"documentation":"","description":"The App BT Mesh Utility provides collection of stateless utility functions and macros to solve recurring tasks in the BT Mesh components and examples. This component supports logging of missing application key binding and missing model publication data configuration errors. The logging level of these errors are configurable. This component is suitable for use in both NCP and SOC applications.\n","instantiable":false,"label":"App Utility","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Utility|studiocomproot-Bluetooth_Mesh-Utility-app_btmesh_util","isEditable":false,"isEnabled":true,"name":"app_btmesh_util","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Utility-app_btmesh_util"},{"keyWords":"btmesh_blob_storage","componentId":"btmesh_blob_storage","isConfigurable":true,"documentation":"","description":"Provides an API for storing binary large objects (BLOB) via the bootloader. The number and size of the bootloader slots determines the number and maximum size of BLOBs that can be stored on the device. Please check the bootloader configuration. This component is prepared for integration into SOC applications.\nThis is a No-Code component, if it is used with either BLOB transfer Client or Server components.\n","instantiable":false,"label":"BLOB Storage","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Utility|studiocomproot-Bluetooth_Mesh-Utility-btmesh_blob_storage","isEditable":false,"isEnabled":true,"name":"btmesh_blob_storage","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Utility-btmesh_blob_storage"},{"keyWords":"btmesh_event_log","componentId":"btmesh_event_log","isConfigurable":true,"documentation":"","description":"The Event Logging is an application-level software module that logs stack events. Its main purpose is to log application related stack events. Both Bluetooth LE and Bluetooth mesh events are handled by the Event Logging component. This component is suitable for use in both NCP and SOC applications.\nThis is a No-Code component (UART communication can be enabled/disabled  in the Platform/Board Control software component).\n","instantiable":false,"label":"Event Logging","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Utility|studiocomproot-Bluetooth_Mesh-Utility-btmesh_event_log","isEditable":false,"isEnabled":true,"name":"btmesh_event_log","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Utility-btmesh_event_log"},{"keyWords":"btmesh_factory_reset","componentId":"btmesh_factory_reset","isConfigurable":false,"documentation":"","description":"The Factory Reset is an application-level software module that manages two types of device resets. The Factory Reset provides possibility for node reset and full reset. Node reset removes all the keys and other settings that have been configured for this node previously. Full reset removes all NVM data as well. Callback is available for both reset types. After callback execution the node reboots itself. After reboot in both reset cases the node enters to unprovisioned state. These interface functions are available also for CLI calls. This component is prepared for integration into SOC applications.\nThis is a No-Code component, but it only handles incoming factory reset commands from other nodes by default.\n","instantiable":false,"label":"Factory Reset","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Utility|studiocomproot-Bluetooth_Mesh-Utility-btmesh_factory_reset","isEditable":false,"isEnabled":true,"name":"btmesh_factory_reset","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Utility-btmesh_factory_reset"},{"keyWords":"ncp_btmesh_dfu","componentId":"ncp_btmesh_dfu","isConfigurable":false,"documentation":"","description":"Implements the Firmware Update Information Status message assembly, with provided interfaces for setting FWIDs and URIs with indexing. This component is prepared for integration into NCP applications.\n","instantiable":false,"label":"NCP DFU Utility","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Utility|studiocomproot-Bluetooth_Mesh-Utility-ncp_btmesh_dfu","isEditable":false,"isEnabled":true,"name":"ncp_btmesh_dfu","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Utility-ncp_btmesh_dfu"},{"keyWords":"ncp_btmesh_user_cmd","componentId":"ncp_btmesh_user_cmd","isConfigurable":false,"documentation":"","description":"Demonstrates the communication between an NCP host and NCP target using BGAPI user messages, responses and events. Can be used as a starting point for creating custom commands or for testing purposes.\n","instantiable":false,"label":"NCP User Commands","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Utility|studiocomproot-Bluetooth_Mesh-Utility-ncp_btmesh_user_cmd","isEditable":false,"isEnabled":true,"name":"ncp_btmesh_user_cmd","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Utility-ncp_btmesh_user_cmd"},{"keyWords":"btmesh_sensor_people_count","componentId":"btmesh_sensor_people_count","isConfigurable":true,"documentation":"","description":"The People Count Sensor is an application-level software module that simulates a people count sensor behavior. Provides interface for  setting and getting and also for increasing and decreasing the simulated people count value. This component is prepared for integration into SOC applications.\nThis is a No-Code component, if it is used with Sensor Server to broadcast people count data to sensor clients.\n","instantiable":false,"label":"People Count Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Utility|studiocomproot-Bluetooth_Mesh-Utility-btmesh_sensor_people_count","isEditable":false,"isEnabled":true,"name":"btmesh_sensor_people_count","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Utility-btmesh_sensor_people_count"},{"keyWords":"btmesh_provisioning_decorator","componentId":"btmesh_provisioning_decorator","isConfigurable":true,"documentation":"","description":"The Provisioning Decorator is an application-level software module that ensures callbacks at main provisioning process steps. There are callbacks for initialization phase, for starting and successful finishing or for failed provisioning. A general callback for handling Provisioning Decorator events is also available. This component is prepared for integration into SOC applications.\nThis is a No-Code component, it automatically handles retries after failed provisioning attempts. Additionally, the following weak callbacks can be implemented in Low-Code fashion to handle  different stages of the provisioning process: - void sl_btmesh_on_provision_init_status(bool provisioned, uint16_t address, uint32_t iv_index) - void sl_btmesh_on_node_provisioning_started(uint16_t result) - void sl_btmesh_on_node_provisioned(uint16_t address, uint32_t iv_index) - void sl_btmesh_on_node_provisioning_failed(uint16_t result)\n","instantiable":false,"label":"Provisioning Decorator","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Utility|studiocomproot-Bluetooth_Mesh-Utility-btmesh_provisioning_decorator","isEditable":false,"isEnabled":true,"name":"btmesh_provisioning_decorator","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Utility-btmesh_provisioning_decorator"},{"keyWords":"btmesh_self_provisioning_cli","componentId":"btmesh_self_provisioning_cli","isConfigurable":true,"documentation":"","description":"The Self Provisioning CLI is an application-level software component that provides a self provisioning functionality trough CLI. The goal of this component is to  provide this function for the users who want to run their devices directly in a Bluetooth Mesh network without using a provisioner. This component is mainly used for development and testing purposes and is not recommended to run on final products.  This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Self Provisioning CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Utility|studiocomproot-Bluetooth_Mesh-Utility-btmesh_self_provisioning_cli","isEditable":false,"isEnabled":true,"name":"btmesh_self_provisioning_cli","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Utility-btmesh_self_provisioning_cli"},{"keyWords":"btmesh_wstk_lcd","componentId":"btmesh_wstk_lcd","isConfigurable":true,"documentation":"","description":"The WSTK LCD Driver is an application-level software module which implements an interface for WSTK board's LCD screen usage, ensuring the uniform display of BT Mesh specific values. The interface contains an initialization and a write function. The LCD initialization is executed automatically at startup. The write interface is used to write one specified line of text to the LCD. This component is prepared for integration into SOC applications.\nThis is a No-code component (The LCD can be enabled/disabled  in the Platform/Board Control software component).\n","instantiable":false,"label":"WSTK LCD Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-Utility|studiocomproot-Bluetooth_Mesh-Utility-btmesh_wstk_lcd","isEditable":false,"isEnabled":true,"name":"btmesh_wstk_lcd","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-Utility-btmesh_wstk_lcd"}],"isEnabled":true,"name":"Utility","id":"studiocomproot-Bluetooth_Mesh-Utility","label":"Utility","type":"category"},{"keyWords":"btmesh_iv_update","componentId":"btmesh_iv_update","isConfigurable":true,"documentation":"","description":"This component provides 3 optional functionalities:\n - periodic IV Update age backup. Restore on reset.\n - automatic IV Update request, if a sequence number exceeds a threshold.\n - automatic IV Update request, after a configured time in Normal operation.\nTurning on this component may increase power consumption. This component is prepared for integration into SOC applications.\nThis is a No-Code component.\n","instantiable":false,"label":"Btmesh Automatic IV update","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"No-Code","path":"studiocomproot-Bluetooth_Mesh|studiocomproot-Bluetooth_Mesh-btmesh_iv_update","isEditable":false,"isEnabled":true,"name":"btmesh_iv_update","isSelected":false,"id":"studiocomproot-Bluetooth_Mesh-btmesh_iv_update"}],"isEnabled":true,"name":"Bluetooth Mesh","id":"studiocomproot-Bluetooth_Mesh","label":"Bluetooth Mesh","type":"category"},{"children":[{"children":[{"keyWords":"cmsis_dsp","componentId":"cmsis_dsp","isConfigurable":false,"documentation":"","description":"CMSIS-DSP compute library for Cortex-M","instantiable":false,"label":"CMSIS-DSP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-CMSIS|studiocomproot-CMSIS-DSP|studiocomproot-CMSIS-DSP-cmsis_dsp","isEditable":false,"isEnabled":true,"name":"cmsis_dsp","isSelected":false,"id":"studiocomproot-CMSIS-DSP-cmsis_dsp"}],"isEnabled":true,"name":"DSP","id":"studiocomproot-CMSIS-DSP","label":"DSP","type":"category"},{"children":[{"keyWords":"cmsis_nn","componentId":"cmsis_nn","isConfigurable":false,"documentation":"","description":"CMSIS-NN neural network kernels for Cortex-M","instantiable":false,"label":"CMSIS-NN","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-CMSIS|studiocomproot-CMSIS-NN|studiocomproot-CMSIS-NN-cmsis_nn","isEditable":false,"isEnabled":true,"name":"cmsis_nn","isSelected":false,"id":"studiocomproot-CMSIS-NN-cmsis_nn"}],"isEnabled":true,"name":"NN","id":"studiocomproot-CMSIS-NN","label":"NN","type":"category"}],"isEnabled":true,"name":"CMSIS","id":"studiocomproot-CMSIS","label":"CMSIS","type":"category"},{"children":[{"children":[{"keyWords":"connect_mailbox_client","componentId":"connect_mailbox_client","isConfigurable":true,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-mailbox-client","description":"Implements the client side of the Connect mailbox protocol. It provides APIs for submitting and retrieving messages to/from a mailbox server.","instantiable":false,"label":"Mailbox Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-Mailbox|studiocomproot-Connect-Mailbox-connect_mailbox_client","isEditable":false,"isEnabled":true,"name":"connect_mailbox_client","isSelected":false,"id":"studiocomproot-Connect-Mailbox-connect_mailbox_client"},{"keyWords":"connect_mailbox_server","componentId":"connect_mailbox_server","isConfigurable":true,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-mailbox-server","description":"Implements the server side of the Connect mailbox protocol. It stores messages from mailbox client(s) and delivers them upon the destination node checks in. When a message expires it is removed from the queue. In both cases, delivery status is reported back to the mailbox client(s).","instantiable":false,"label":"Mailbox Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-Mailbox|studiocomproot-Connect-Mailbox-connect_mailbox_server","isEditable":false,"isEnabled":true,"name":"connect_mailbox_server","isSelected":false,"id":"studiocomproot-Connect-Mailbox-connect_mailbox_server"}],"isEnabled":true,"name":"Mailbox","id":"studiocomproot-Connect-Mailbox","label":"Mailbox","type":"category"},{"children":[{"keyWords":"connect_ota_broadcast_bootloader_client","componentId":"connect_ota_broadcast_bootloader_client","isConfigurable":true,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-ota-bootloader-client","description":"Implements the client side of the broadcast-based Connect OTA Bootloader protocol. The OTA Broadcast Bootloader Client component should be used to receive an image from an OTA Broadcast Bootloader server, to respond to status inquiries from a server and to be instructed by a server to perform a bootload at a certain time in the future.","instantiable":false,"label":"OTA Broadcast Bootloader Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-OTA|studiocomproot-Connect-OTA-connect_ota_broadcast_bootloader_client","isEditable":false,"isEnabled":true,"name":"connect_ota_broadcast_bootloader_client","isSelected":false,"id":"studiocomproot-Connect-OTA-connect_ota_broadcast_bootloader_client"},{"keyWords":"connect_ota_broadcast_bootloader_server","componentId":"connect_ota_broadcast_bootloader_server","isConfigurable":true,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-ota-bootloader-server","description":"Implements the server side of the Connect OTA Broadcast Bootloader protocol. The OTA Broadcast Bootloader Server component should be used to distribute an image from the server to a set of target devices (clients) in a reliable broadcast fashion, to retrieve the status of a set of target devices and to instruct a set of target devices to initiate a bootload.","instantiable":false,"label":"OTA Broadcast Bootloader Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-OTA|studiocomproot-Connect-OTA-connect_ota_broadcast_bootloader_server","isEditable":false,"isEnabled":true,"name":"connect_ota_broadcast_bootloader_server","isSelected":false,"id":"studiocomproot-Connect-OTA-connect_ota_broadcast_bootloader_server"},{"keyWords":"connect_ota_unicast_bootloader_client","componentId":"connect_ota_unicast_bootloader_client","isConfigurable":true,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-ota-unicast-bootloader-client","description":"Implements the client side of the Connect OTA Unicast Bootloader protocol. The OTA Unicast Bootloader Client component should be used to receive an image from an OTA Unicast Bootloader server, to be instructed by a server to perform a bootload at a certain time in the future.","instantiable":false,"label":"OTA Unicast Bootloader Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-OTA|studiocomproot-Connect-OTA-connect_ota_unicast_bootloader_client","isEditable":false,"isEnabled":true,"name":"connect_ota_unicast_bootloader_client","isSelected":false,"id":"studiocomproot-Connect-OTA-connect_ota_unicast_bootloader_client"},{"keyWords":"connect_ota_unicast_bootloader_server","componentId":"connect_ota_unicast_bootloader_server","isConfigurable":true,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-ota-unicast-bootloader-server","description":"Implements the server side of the Connect OTA Unicast Bootloader protocol. The OTA Unicast Bootloader Server component should be used to distribute an image from the server to a target device (client) in a reliable unicast fashion and to instruct a target device to initiate a bootload.","instantiable":false,"label":"OTA Unicast Bootloader Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-OTA|studiocomproot-Connect-OTA-connect_ota_unicast_bootloader_server","isEditable":false,"isEnabled":true,"name":"connect_ota_unicast_bootloader_server","isSelected":false,"id":"studiocomproot-Connect-OTA-connect_ota_unicast_bootloader_server"}],"isEnabled":true,"name":"OTA","id":"studiocomproot-Connect-OTA","label":"OTA","type":"category"},{"children":[{"keyWords":"sl_connect_ecdh_key_exchange","componentId":"sl_connect_ecdh_key_exchange","isConfigurable":true,"documentation":"","description":"This component encompasses the essential functionality for a network key exchange mechanism between two devices, implemented based on the Platform Security Architecture. It utilizes an Elliptic Curve Diffie-Hellman key exchange to securely share a common secret over an insecure communication channel.\n","instantiable":false,"label":"ECDH Key Exchange support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-Test|studiocomproot-Connect-Test-sl_connect_ecdh_key_exchange","isEditable":false,"isEnabled":true,"name":"sl_connect_ecdh_key_exchange","isSelected":false,"id":"studiocomproot-Connect-Test-sl_connect_ecdh_key_exchange"},{"keyWords":"sl_connect_sdk_ota_bootloader_test_common","componentId":"sl_connect_sdk_ota_bootloader_test_common","isConfigurable":true,"documentation":"","description":"This module encompasses essential OTA Bootloader functions required by both the OTA broadcast and unicast bootloader plugins. It offers CLI commands for interacting with the bootloader interface API, including instructions on erasing, writing, and validating images. Additionally, it provides seamless integration with other system components, ensuring efficient and reliable firmware updates.\n","instantiable":false,"label":"OTA Bootloader Test Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-Test|studiocomproot-Connect-Test-sl_connect_sdk_ota_bootloader_test_common","isEditable":false,"isEnabled":true,"name":"sl_connect_sdk_ota_bootloader_test_common","isSelected":false,"id":"studiocomproot-Connect-Test-sl_connect_sdk_ota_bootloader_test_common"},{"keyWords":"sl_connect_sdk_ota_broadcast_bootloader_test","componentId":"sl_connect_sdk_ota_broadcast_bootloader_test","isConfigurable":false,"documentation":"","description":"The component illustrates how to utilize the OTA Broadcast Bootloader components (both server and client). Additionally, it offers CLI commands for interacting with the external flash memory and managing the OTA bootloader process via the command line interface. These commands enable users to configure broadcast targets, initiate distribution, and request targets for bootloading.\n","instantiable":false,"label":"OTA Broadcast Bootloader Test","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-Test|studiocomproot-Connect-Test-sl_connect_sdk_ota_broadcast_bootloader_test","isEditable":false,"isEnabled":true,"name":"sl_connect_sdk_ota_broadcast_bootloader_test","isSelected":false,"id":"studiocomproot-Connect-Test-sl_connect_sdk_ota_broadcast_bootloader_test"},{"keyWords":"sl_connect_sdk_ota_unicast_bootloader_test","componentId":"sl_connect_sdk_ota_unicast_bootloader_test","isConfigurable":false,"documentation":"","description":"The component illustrates how to utilize the OTA Unicast Bootloader components (both server and client). Additionally, it offers CLI commands for interacting with the external flash memory and managing the OTA Unicast bootloader process via the command line interface. These commands allow you to configure the unicast target, initiate firmware distribution, or request the target device to perform a bootload operation.\n","instantiable":false,"label":"OTA Unicast Bootloader Test","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-Test|studiocomproot-Connect-Test-sl_connect_sdk_ota_unicast_bootloader_test","isEditable":false,"isEnabled":true,"name":"sl_connect_sdk_ota_unicast_bootloader_test","isSelected":false,"id":"studiocomproot-Connect-Test-sl_connect_sdk_ota_unicast_bootloader_test"}],"isEnabled":true,"name":"Test","id":"studiocomproot-Connect-Test","label":"Test","type":"category"},{"children":[{"keyWords":"sl_connect_config","componentId":"sl_connect_config","isConfigurable":true,"documentation":"","description":"This component enables apps to customize their Connect configuration values, including various types of buffers utilized by both apps and components.\n","instantiable":false,"label":"Connect configuration values","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-Utility|studiocomproot-Connect-Utility-sl_connect_config","isEditable":false,"isEnabled":true,"name":"sl_connect_config","isSelected":false,"id":"studiocomproot-Connect-Utility-sl_connect_config"}],"isEnabled":true,"name":"Utility","id":"studiocomproot-Connect-Utility","label":"Utility","type":"category"},{"keyWords":"connect_aes_security","componentId":"connect_aes_security","isConfigurable":false,"documentation":"","description":"Provides encryption and authentication functionality based on the AES encryption algorithm (hardware acceleration).","instantiable":false,"label":"AES Security","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_aes_security","isEditable":false,"isEnabled":true,"name":"connect_aes_security","isSelected":false,"id":"studiocomproot-Connect-connect_aes_security"},{"keyWords":"connect_psa_security_library","componentId":"connect_psa_security_library","isConfigurable":false,"documentation":"","description":"Provides the Connect AES Security library.","instantiable":false,"label":"AES Security (Library)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_psa_security_library","isEditable":false,"isEnabled":true,"name":"connect_psa_security_library","isSelected":false,"id":"studiocomproot-Connect-connect_psa_security_library"},{"keyWords":"connect_aes_security_library","componentId":"connect_aes_security_library","isConfigurable":false,"documentation":"","description":"Provides the Connect AES Security library. This library is deprecated and connect_psa_security_library should be used instead. The difference between the two libraries is the CCM* implementation used. This library uses Connect's custom implementation, while the other uses PSA's. The main difference in usage is the algorithm that you define the PSA crypto key with. This library uses the alg PSA_ALG_ECB_NO_PADDING while the other uses PSA_ALG_AEAD_WITH_SHORTENED_TAG(PSA_ALG_CCM, 4). You can link with both libraries at once, they are fully compatible. In this case, the implementation used will be resolved during runtime based on the PSA crypto key's algorithm.\n","instantiable":false,"label":"AES Security (Library) | Legacy","type":"component","quality":"DEPRECATED","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_aes_security_library","isEditable":false,"isEnabled":true,"name":"connect_aes_security_library","isSelected":false,"id":"studiocomproot-Connect-connect_aes_security_library"},{"keyWords":"connect_app_framework_common","componentId":"connect_app_framework_common","isConfigurable":false,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-app-framework-common","description":"Declares all the required application framework globals, initializes the Connect stack and dispatches stack callbacks calls as needed to the application components.","instantiable":false,"label":"Application Framework Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_app_framework_common","isEditable":false,"isEnabled":true,"name":"connect_app_framework_common","isSelected":false,"id":"studiocomproot-Connect-connect_app_framework_common"},{"keyWords":"connect_ble_cli","componentId":"connect_ble_cli","isConfigurable":false,"documentation":"","description":"Provides CLI commands to perform basic BLE operations.","instantiable":false,"label":"BLE CLI commands","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_ble_cli","isEditable":false,"isEnabled":true,"name":"connect_ble_cli","isSelected":false,"id":"studiocomproot-Connect-connect_ble_cli"},{"keyWords":"connect_debug_print","componentId":"connect_debug_print","isConfigurable":true,"documentation":"","description":"Provides APIs for adding serial debugging capability.","instantiable":false,"label":"Debug Print","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_debug_print","isEditable":false,"isEnabled":true,"name":"connect_debug_print","isSelected":false,"id":"studiocomproot-Connect-connect_debug_print"},{"keyWords":"connect_frequency_hopping","componentId":"connect_frequency_hopping","isConfigurable":true,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-frequency-hopping","description":"Implements frequency hopping based on FCC specifications. A companion component can be installed to add frequency hopping CLI commands.","instantiable":false,"label":"Frequency Hopping","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_frequency_hopping","isEditable":false,"isEnabled":true,"name":"connect_frequency_hopping","isSelected":false,"id":"studiocomproot-Connect-connect_frequency_hopping"},{"keyWords":"connect_frequency_hopping_cli","componentId":"connect_frequency_hopping_cli","isConfigurable":false,"documentation":"","description":"This component provides frequency hopping CLI commands.","instantiable":false,"label":"Frequency Hopping (Cli)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_frequency_hopping_cli","isEditable":false,"isEnabled":true,"name":"connect_frequency_hopping_cli","isSelected":false,"id":"studiocomproot-Connect-connect_frequency_hopping_cli"},{"keyWords":"connect_mac_queue","componentId":"connect_mac_queue","isConfigurable":true,"documentation":"","description":"Provides MAC queue functionality. If this plugin is enabled, the application is able to send multiple packets in bursts, whereas if this plugin is not included, only one packet at the time can be submitted to the Connect Stack.","instantiable":false,"label":"MAC Queue","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_mac_queue","isEditable":false,"isEnabled":true,"name":"connect_mac_queue","isSelected":false,"id":"studiocomproot-Connect-connect_mac_queue"},{"keyWords":"sl_connect_sdk_ota_bootloader_interface","componentId":"sl_connect_sdk_ota_bootloader_interface","isConfigurable":false,"documentation":"","description":"The component serves as an interface layer for the Application Bootloader. It is essential for any bootloader-related functions. Additionally, it introduces bootloader API functions that the application can utilize during runtime. These functions include reading or writing image slot space, as well as erasing or validating received images. Furthermore, OTA Bootloader components access images through this particular component.\n","instantiable":false,"label":"OTA Bootloader Interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-sl_connect_sdk_ota_bootloader_interface","isEditable":false,"isEnabled":true,"name":"sl_connect_sdk_ota_bootloader_interface","isSelected":false,"id":"studiocomproot-Connect-sl_connect_sdk_ota_bootloader_interface"},{"keyWords":"connect_parent_support","componentId":"connect_parent_support","isConfigurable":true,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-parent-support","description":"Provides parent functionalities such as indirect communication (communication with sleepy devices) and child table. It should be included for any coordinator or range extender node intended to support multiple end-device and/or sleepy end-device nodes.","instantiable":false,"label":"Parent Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_parent_support","isEditable":false,"isEnabled":true,"name":"connect_parent_support","isSelected":false,"id":"studiocomproot-Connect-connect_parent_support"},{"keyWords":"connect_poll","componentId":"connect_poll","isConfigurable":true,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-poll","description":"Implements polling for end devices.","instantiable":false,"label":"Poll","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_poll","isEditable":false,"isEnabled":true,"name":"connect_poll","isSelected":false,"id":"studiocomproot-Connect-connect_poll"},{"keyWords":"connect_radio_stream","componentId":"connect_radio_stream","isConfigurable":false,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-radio_stream","description":"Implements radio stream function for RF validation.","instantiable":false,"label":"Radio Stream","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_radio_stream","isEditable":false,"isEnabled":true,"name":"connect_radio_stream","isSelected":false,"id":"studiocomproot-Connect-connect_radio_stream"},{"keyWords":"connect_radio_stream_cli","componentId":"connect_radio_stream_cli","isConfigurable":false,"documentation":"","description":"This component provides Radio Stream CLI commands.","instantiable":false,"label":"Radio Stream (Cli)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_radio_stream_cli","isEditable":false,"isEnabled":true,"name":"connect_radio_stream_cli","isSelected":false,"id":"studiocomproot-Connect-connect_radio_stream_cli"},{"keyWords":"connect_stack_common","componentId":"connect_stack_common","isConfigurable":true,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-silabs-connect-stack","description":"Provides Connect Stack common functionalities such as 15.4-like MAC layer, events system, dynamic memory allocation, and other required infrastracture functions. It also provides the stack configuration file, which allocates all the sizable RAM data structures.","instantiable":false,"label":"Stack Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_stack_common","isEditable":false,"isEnabled":true,"name":"connect_stack_common","isSelected":false,"id":"studiocomproot-Connect-connect_stack_common"},{"keyWords":"connect_stack_counters","componentId":"connect_stack_counters","isConfigurable":false,"documentation":"http://docs.silabs.com/connect-stack/4.0.0/group-stack-counters","description":"This component provides stack packet counters functionality. If this component is enabled, the stack shall keep track of successful and failed transmissions as well as successful received packets and dropped incoming packets.","instantiable":false,"label":"Stack Counters","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Connect|studiocomproot-Connect-connect_stack_counters","isEditable":false,"isEnabled":true,"name":"connect_stack_counters","isSelected":false,"id":"studiocomproot-Connect-connect_stack_counters"}],"isEnabled":true,"name":"Connect","id":"studiocomproot-Connect","label":"Connect","type":"category"},{"children":[{"keyWords":"ot_ant_div","componentId":"ot_ant_div","isConfigurable":false,"documentation":"","description":"This component provides support for Antenna Diversity with OpenThread","instantiable":false,"label":"Antenna Diversity","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_ant_div","isEditable":false,"isEnabled":true,"name":"ot_ant_div","isSelected":false,"id":"studiocomproot-OpenThread-ot_ant_div"},{"keyWords":"ot_cli_source","componentId":"ot_cli_source","isConfigurable":false,"documentation":"","description":"This component provides the OpenThread CLI. It requires that an OpenThread stack component be included with the project. If no OpenThread stack component is chosen, it will default to using the OpenThread stack for a Full Thread Device (FTD).","instantiable":false,"label":"CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_cli_source","isEditable":false,"isEnabled":true,"name":"ot_cli_source","isSelected":false,"id":"studiocomproot-OpenThread-ot_cli_source"},{"keyWords":"ot_coex","componentId":"ot_coex","isConfigurable":true,"documentation":"","description":"This component provides support for Wi-Fi coexistence with OpenThread","instantiable":false,"label":"Coexistence","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_coex","isEditable":false,"isEnabled":true,"name":"ot_coex","isSelected":false,"id":"studiocomproot-OpenThread-ot_coex"},{"keyWords":"ot_crash_handler","componentId":"ot_crash_handler","isConfigurable":false,"documentation":"","description":"This component provides a set of APIs for printing crash info.\nIn the case of a crash, this component captures the details and prints them on the next reboot.","instantiable":false,"label":"Crash Handler","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_crash_handler","isEditable":false,"isEnabled":true,"name":"ot_crash_handler","isSelected":false,"id":"studiocomproot-OpenThread-ot_crash_handler"},{"keyWords":"ot_debug_channel","componentId":"ot_debug_channel","isConfigurable":false,"documentation":"","description":"This component provides a set of APIs for printing to the debug channel. Information printed to the debug channel can be viewed using the Network Analyzer feature of Simplicity Studio","instantiable":false,"label":"Debug Channel","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_debug_channel","isEditable":false,"isEnabled":true,"name":"ot_debug_channel","isSelected":false,"id":"studiocomproot-OpenThread-ot_debug_channel"},{"keyWords":"ot_diags","componentId":"ot_diags","isConfigurable":false,"documentation":"","description":"This component provides diagnostic functionalities for OpenThread.","instantiable":false,"label":"Diagnostics","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_diags","isEditable":false,"isEnabled":true,"name":"ot_diags","isSelected":false,"id":"studiocomproot-OpenThread-ot_diags"},{"keyWords":"ot_platform_ext","componentId":"ot_platform_ext","isConfigurable":false,"documentation":"","description":"This component provides extensions to the efr32 OpenThread platform.","instantiable":false,"label":"EFR32 Platform Extension","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_platform_ext","isEditable":false,"isEnabled":true,"name":"ot_platform_ext","isSelected":false,"id":"studiocomproot-OpenThread-ot_platform_ext"},{"keyWords":"ot_gp_interface","componentId":"ot_gp_interface","isConfigurable":true,"documentation":"","description":"This component provides an outgoing transmit queue for Zigbee Green Power on RCP.\nIt also provides an API that checks if a packet is a Green Power packet.","instantiable":false,"label":"Green Power Interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_gp_interface","isEditable":false,"isEnabled":true,"name":"ot_gp_interface","isSelected":false,"id":"studiocomproot-OpenThread-ot_gp_interface"},{"keyWords":"ot_ncp_source","componentId":"ot_ncp_source","isConfigurable":false,"documentation":"","description":"This component provides both the NCP and RCP support for the OpenThread stack. It requires that an OpenThread stack component be included with the project. If no OpenThread stack component is chosen, it will default to using the OpenThread stack for a Full Thread Device (FTD). Currently, the NCP suport is experimental and the RCP support is production quaility.","instantiable":false,"label":"NCP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_ncp_source","isEditable":false,"isEnabled":true,"name":"ot_ncp_source","isSelected":false,"id":"studiocomproot-OpenThread-ot_ncp_source"},{"keyWords":"ot_ncp_cpc","componentId":"ot_ncp_cpc","isConfigurable":false,"documentation":"","description":"This component provides Co-Processor Communication (CPC) support for the OpenThread stack. It requires that the OpenThread NCP component be included with the project. Currently only the OpenThread RCP stack is supported.","instantiable":false,"label":"NCP CPC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_ncp_cpc","isEditable":false,"isEnabled":true,"name":"ot_ncp_cpc","isSelected":false,"id":"studiocomproot-OpenThread-ot_ncp_cpc"},{"keyWords":"ot_ncp_spidrv","componentId":"ot_ncp_spidrv","isConfigurable":true,"documentation":"","description":"This component provides SPIDRV (SPI) support for the OpenThread stack. It requires that the OpenThread NCP component be included with the project. Currently only the OpenThread RCP stack is supported.","instantiable":false,"label":"NCP SPIDRV","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_ncp_spidrv","isEditable":false,"isEnabled":true,"name":"ot_ncp_spidrv","isSelected":false,"id":"studiocomproot-OpenThread-ot_ncp_spidrv"},{"keyWords":"ot_ncp_vendor_extension","componentId":"ot_ncp_vendor_extension","isConfigurable":false,"documentation":"","description":"This component extends the behavior of the OpenThread NCP controller to allow the processing and handling of vendor defined Spinel attributes.","instantiable":false,"label":"NCP Vendor Extensions","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_ncp_vendor_extension","isEditable":false,"isEnabled":true,"name":"ot_ncp_vendor_extension","isSelected":false,"id":"studiocomproot-OpenThread-ot_ncp_vendor_extension"},{"keyWords":"ot_cert_libs","componentId":"ot_cert_libs","isConfigurable":false,"documentation":"","description":"Includes OpenThread stack and PAL libraries that could be used for certification by inheritance. Uses default certification configurations. Note: Please refer to the release notes to verify if the SDK has been qualified for certification.\n","instantiable":false,"label":"OpenThread Certification Libraries","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_cert_libs","isEditable":false,"isEnabled":true,"name":"ot_cert_libs","isSelected":false,"id":"studiocomproot-OpenThread-ot_cert_libs"},{"keyWords":"ot_coap_cert_libs","componentId":"ot_coap_cert_libs","isConfigurable":false,"documentation":"","description":"Includes OpenThread stack and PAL libraries that could be used for certification by inheritance. Uses default certification configurations. Note: Please refer to the release notes to verify if the SDK has been qualified for certification.\n","instantiable":false,"label":"OpenThread CoAP Certification Libraries","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_coap_cert_libs","isEditable":false,"isEnabled":true,"name":"ot_coap_cert_libs","isSelected":false,"id":"studiocomproot-OpenThread-ot_coap_cert_libs"},{"keyWords":"ot_platform_abstraction","componentId":"ot_platform_abstraction","isConfigurable":false,"documentation":"","description":"This component provides the abstraction layer between the OpenThread stack and Silicon Labs platform. It also adds support for additional features such as Wi-Fi coex and RTOS support","instantiable":false,"label":"Platform Abstraction","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_platform_abstraction","isEditable":false,"isEnabled":true,"name":"ot_platform_abstraction","isSelected":false,"id":"studiocomproot-OpenThread-ot_platform_abstraction"},{"keyWords":"ot_rtt_log","componentId":"ot_rtt_log","isConfigurable":false,"documentation":"","description":"This component adds support for RTT logging which is the mechanism used for the platform defined logging interface.","instantiable":false,"label":"RTT Logger","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_rtt_log","isEditable":false,"isEnabled":true,"name":"ot_rtt_log","isSelected":false,"id":"studiocomproot-OpenThread-ot_rtt_log"},{"keyWords":"ot_reference_device","componentId":"ot_reference_device","isConfigurable":false,"documentation":"","description":"OpenThread configuration for applications that will be used as reference devices in the Thread test harness.","instantiable":false,"label":"Reference Device Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_reference_device","isEditable":false,"isEnabled":true,"name":"ot_reference_device","isSelected":false,"id":"studiocomproot-OpenThread-ot_reference_device"},{"keyWords":"ot_stack_ftd","componentId":"ot_stack_ftd","isConfigurable":true,"documentation":"","description":"This component provides the OpenThread stack for a Full Thread Device (FTD)","instantiable":false,"label":"Stack (FTD)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_stack_ftd","isEditable":false,"isEnabled":true,"name":"ot_stack_ftd","isSelected":false,"id":"studiocomproot-OpenThread-ot_stack_ftd"},{"keyWords":"ot_stack_mtd","componentId":"ot_stack_mtd","isConfigurable":true,"documentation":"","description":"This component provides the OpenThread stack for a Minimal Thread Device (MTD)","instantiable":false,"label":"Stack (MTD)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_stack_mtd","isEditable":false,"isEnabled":true,"name":"ot_stack_mtd","isSelected":false,"id":"studiocomproot-OpenThread-ot_stack_mtd"},{"keyWords":"ot_stack_rcp","componentId":"ot_stack_rcp","isConfigurable":true,"documentation":"","description":"This component provides OpenThread Radio Co-Processor support","instantiable":false,"label":"Stack (RCP)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_stack_rcp","isEditable":false,"isEnabled":true,"name":"ot_stack_rcp","isSelected":false,"id":"studiocomproot-OpenThread-ot_stack_rcp"},{"keyWords":"ot_stack_tcp_stubs","componentId":"ot_stack_tcp_stubs","isConfigurable":false,"documentation":"","description":"If this component is installed, TCPlp implementation will be stubbed out for an FTD/MTD application. Otherwise, the TCPlp implementation is included by default.","instantiable":false,"label":"TCPlp stubs for OpenThread TCP API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-OpenThread|studiocomproot-OpenThread-ot_stack_tcp_stubs","isEditable":false,"isEnabled":true,"name":"ot_stack_tcp_stubs","isSelected":false,"id":"studiocomproot-OpenThread-ot_stack_tcp_stubs"}],"isEnabled":true,"name":"OpenThread","id":"studiocomproot-OpenThread","label":"OpenThread","type":"category"},{"children":[{"children":[{"children":[{"keyWords":"brd3201a","componentId":"brd3201a","isConfigurable":false,"documentation":"","description":"Board support for BRD3201A.","instantiable":false,"label":"BRD3201A","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"board:pn:BRD3201,board:variant:A,board:revision:A03","path":"studiocomproot-Platform|studiocomproot-Platform-Board|studiocomproot-Platform-Board-DK_Main_Board|studiocomproot-Platform-Board-DK_Main_Board-brd3201a","isEditable":false,"isEnabled":true,"name":"brd3201a","isSelected":false,"id":"studiocomproot-Platform-Board-DK_Main_Board-brd3201a"}],"isEnabled":true,"name":"DK Main Board","id":"studiocomproot-Platform-Board-DK_Main_Board","label":"DK Main Board","type":"category"},{"children":[{"keyWords":"brd8022a","componentId":"brd8022a","isConfigurable":false,"documentation":"","description":"Board support for BRD8022A.","instantiable":false,"label":"BRD8022A","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"board:pn:BRD8022,board:variant:A,board:revision:A07","path":"studiocomproot-Platform|studiocomproot-Platform-Board|studiocomproot-Platform-Board-Expansion_Board|studiocomproot-Platform-Board-Expansion_Board-brd8022a","isEditable":false,"isEnabled":true,"name":"brd8022a","isSelected":false,"id":"studiocomproot-Platform-Board-Expansion_Board-brd8022a"},{"keyWords":"brd8023a","componentId":"brd8023a","isConfigurable":false,"documentation":"","description":"Board support for BRD8023A.","instantiable":false,"label":"BRD8023A","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"board:pn:BRD8023,board:variant:A,board:revision:B02","path":"studiocomproot-Platform|studiocomproot-Platform-Board|studiocomproot-Platform-Board-Expansion_Board|studiocomproot-Platform-Board-Expansion_Board-brd8023a","isEditable":false,"isEnabled":true,"name":"brd8023a","isSelected":false,"id":"studiocomproot-Platform-Board-Expansion_Board-brd8023a"},{"keyWords":"brd8029a","componentId":"brd8029a","isConfigurable":false,"documentation":"","description":"Board support for BRD8029A.","instantiable":false,"label":"BRD8029A","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"board:pn:BRD8029,board:variant:A,board:revision:B00,hardware:has:led:4,hardware:has:button:4","path":"studiocomproot-Platform|studiocomproot-Platform-Board|studiocomproot-Platform-Board-Expansion_Board|studiocomproot-Platform-Board-Expansion_Board-brd8029a","isEditable":false,"isEnabled":true,"name":"brd8029a","isSelected":false,"id":"studiocomproot-Platform-Board-Expansion_Board-brd8029a"}],"isEnabled":true,"name":"Expansion Board","id":"studiocomproot-Platform-Board-Expansion_Board","label":"Expansion Board","type":"category"},{"children":[{"keyWords":"brd4002a","componentId":"brd4002a","isConfigurable":false,"documentation":"","description":"Board support for BRD4002A.","instantiable":false,"label":"BRD4002A","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"board:pn:BRD4002,board:variant:A,board:revision:A07","path":"studiocomproot-Platform|studiocomproot-Platform-Board|studiocomproot-Platform-Board-Mainboard|studiocomproot-Platform-Board-Mainboard-brd4002a","isEditable":false,"isEnabled":true,"name":"brd4002a","isSelected":true,"id":"studiocomproot-Platform-Board-Mainboard-brd4002a"}],"isEnabled":true,"name":"Mainboard","id":"studiocomproot-Platform-Board-Mainboard","label":"Mainboard","type":"category"},{"keyWords":"board_control","componentId":"board_control","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-board/board-control","description":"Provides initialization of Silicon Labs boards and functionality for enabling board features, like VCOM, sensors and display.\n","instantiable":false,"label":"Board Control","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board|studiocomproot-Platform-Board-board_control","isEditable":false,"isEnabled":true,"name":"board_control","isSelected":false,"id":"studiocomproot-Platform-Board-board_control"}],"isEnabled":true,"name":"Board","id":"studiocomproot-Platform-Board","label":"Board","type":"category"},{"children":[{"children":[{"children":[{"keyWords":"lpm013m126a","componentId":"lpm013m126a","isConfigurable":false,"documentation":"","description":"Driver for japan Memory LCD LPM013M126A. This display is a 176x176 rgb display with 3 bit used for color. So there are 8 different colors supported for each pixel on the screen.\n","instantiable":false,"label":"Color Japan Memory LCD","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-Memory_LCD|studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver|studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver-lpm013m126a","isEditable":false,"isEnabled":true,"name":"lpm013m126a","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver-lpm013m126a"},{"keyWords":"ls013b7dh06","componentId":"ls013b7dh06","isConfigurable":false,"documentation":"","description":"Driver for Sharp Memory LCD LS013B7DH06. This display is a 128x128 rgb display with 3 bit used for color. So there are 8 different colors supported for each pixel on the screen.\n","instantiable":false,"label":"Color Sharp Memory LCD","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-Memory_LCD|studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver|studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver-ls013b7dh06","isEditable":false,"isEnabled":true,"name":"ls013b7dh06","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver-ls013b7dh06"},{"keyWords":"memlcd_display_custom","componentId":"memlcd_display_custom","isConfigurable":true,"documentation":"","description":"This component represents any custom memory LCD display that doesn't already have a component associated.\n","instantiable":false,"label":"Custom Memory LCD","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-Memory_LCD|studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver|studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver-memlcd_display_custom","isEditable":false,"isEnabled":true,"name":"memlcd_display_custom","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver-memlcd_display_custom"},{"keyWords":"ls013b7dh03","componentId":"ls013b7dh03","isConfigurable":false,"documentation":"","description":"Driver for Sharp Memory LCD LS013B7DH03. This display is a 128x128 monochrome display.\n","instantiable":false,"label":"Monochrome Sharp Memory LCD","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-Memory_LCD|studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver|studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver-ls013b7dh03","isEditable":false,"isEnabled":true,"name":"ls013b7dh03","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver-ls013b7dh03"}],"isEnabled":true,"name":"Display Driver","id":"studiocomproot-Platform-Board_Drivers-Memory_LCD-Display_Driver","label":"Display Driver","type":"category"},{"children":[{"keyWords":"memlcd_custom","componentId":"memlcd_custom","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/memlcd_custom","description":"This component contains functions that can be redefined to implement a custom memory LCD interface manually. The \"Custom Memory LCD Display\" component is required and automatically installed with this component. This component replaces the \"Memory LCD  with usart SPI driver\" and \"Memory LCD with eusart SPI driver\" components that are already fully implemented and functionnal.\n","instantiable":false,"label":"Custom Memory LCD Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-Memory_LCD|studiocomproot-Platform-Board_Drivers-Memory_LCD-Peripheral_Driver|studiocomproot-Platform-Board_Drivers-Memory_LCD-Peripheral_Driver-memlcd_custom","isEditable":false,"isEnabled":true,"name":"memlcd_custom","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-Memory_LCD-Peripheral_Driver-memlcd_custom"},{"keyWords":"memlcd_eusart","componentId":"memlcd_eusart","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/memlcd","description":"This component contains functions that can be used by a range of Memory LCDs. These Memory LCDs have an SPI interface and can draw one or more rows on the display at a time. This component is used by the Monochrome (LS013B7DH03) and Color (LS013B7DH06 or LPM013M126A) Memory LCD Drivers. This specific version uses the eusart to drive the SPI.\n","instantiable":false,"label":"Memory LCD with eusart SPI driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-Memory_LCD|studiocomproot-Platform-Board_Drivers-Memory_LCD-Peripheral_Driver|studiocomproot-Platform-Board_Drivers-Memory_LCD-Peripheral_Driver-memlcd_eusart","isEditable":false,"isEnabled":true,"name":"memlcd_eusart","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-Memory_LCD-Peripheral_Driver-memlcd_eusart"},{"keyWords":"memlcd_usart","componentId":"memlcd_usart","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/memlcd","description":"This component contains functions that can be used by a range of Memory LCDs. These Memory LCDs have an SPI interface and can draw one or more rows on the display at a time. This component is used by the Monochrome (LS013B7DH03) and Color (LS013B7DH06 or LPM013M126A) Memory LCD Drivers. This specific version uses the usart to drive the SPI.\n","instantiable":false,"label":"Memory LCD with usart SPI driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-Memory_LCD|studiocomproot-Platform-Board_Drivers-Memory_LCD-Peripheral_Driver|studiocomproot-Platform-Board_Drivers-Memory_LCD-Peripheral_Driver-memlcd_usart","isEditable":false,"isEnabled":true,"name":"memlcd_usart","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-Memory_LCD-Peripheral_Driver-memlcd_usart"}],"isEnabled":true,"name":"Peripheral Driver","id":"studiocomproot-Platform-Board_Drivers-Memory_LCD-Peripheral_Driver","label":"Peripheral Driver","type":"category"}],"isEnabled":true,"name":"Memory LCD","id":"studiocomproot-Platform-Board_Drivers-Memory_LCD","label":"Memory LCD","type":"category"},{"keyWords":"bmp280_driver","componentId":"bmp280_driver","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/bmp280","description":"Driver for the Bosch Sensortec BMP280 barometric pressure sensor\n","instantiable":false,"label":"BMP280 - Pressure Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-bmp280_driver","isEditable":false,"isEnabled":true,"name":"bmp280_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-bmp280_driver"},{"keyWords":"bmp3xx_driver","componentId":"bmp3xx_driver","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/bmp3xx","description":"Driver for the Bosch Sensortec BMP3xx barometric pressure sensors\n","instantiable":false,"label":"BMP3xx - Pressure Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-bmp3xx_driver","isEditable":false,"isEnabled":true,"name":"bmp3xx_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-bmp3xx_driver"},{"keyWords":"ccs811_driver","componentId":"ccs811_driver","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/ccs811","description":"Driver for the Cambridge CMOS Sensors CCS811 gas and indoor air quality sensor\n","instantiable":false,"label":"CCS811 - Gas/Air Quality Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-ccs811_driver","isEditable":false,"isEnabled":true,"name":"ccs811_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-ccs811_driver"},{"keyWords":"configuration_over_swo","componentId":"configuration_over_swo","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/cos","description":"Configuration over SWO (COS) Component. Note that installing of this component would consume ~0.3ms additional startup time.","instantiable":false,"label":"Configuration Over SWO","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-configuration_over_swo","isEditable":false,"isEnabled":true,"name":"configuration_over_swo","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-configuration_over_swo"},{"keyWords":"efp_driver","componentId":"efp_driver","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/sl-efp","description":"This component provides an API to configure and control EFP ICs in addition to a configurable instantiation structure for an EFP IC. The driver supports systems with multiple EFP ICs. The EFP is controlled by the host SoC using an I2C bus.\n","instantiable":true,"label":"EFP - Energy Friendly PMIC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-efp_driver","isEditable":false,"isEnabled":true,"name":"efp_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-efp_driver"},{"keyWords":"efp_driver_core","componentId":"efp_driver_core","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/sl-efp","description":"This component contains the core EFP Driver.\n","instantiable":false,"label":"EFP - Energy Friendly PMIC Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-efp_driver_core","isEditable":false,"isEnabled":true,"name":"efp_driver_core","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-efp_driver_core"},{"keyWords":"mic_i2s_driver","componentId":"mic_i2s_driver","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/mic","description":"Sound level I2S microphone driver\n","instantiable":false,"label":"I2S Microphone","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-mic_i2s_driver","isEditable":false,"isEnabled":true,"name":"mic_i2s_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-mic_i2s_driver"},{"keyWords":"icm20648_driver","componentId":"icm20648_driver","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/icm20648","description":"Driver for the Invensense ICM20648 6-axis motion sensor\n","instantiable":false,"label":"ICM20648 - Motion Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-icm20648_driver","isEditable":false,"isEnabled":true,"name":"icm20648_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-icm20648_driver"},{"keyWords":"icm20689_driver","componentId":"icm20689_driver","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/icm20689","description":"Driver for the Invensense ICM20689 6-axis motion sensor\n","instantiable":false,"label":"ICM20689 - Motion Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-icm20689_driver","isEditable":false,"isEnabled":true,"name":"icm20689_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-icm20689_driver"},{"keyWords":"icm40627_driver","componentId":"icm40627_driver","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/icm40627","description":"Driver for the Invensense ICM40627 6-axis motion sensor\n","instantiable":false,"label":"ICM40627 - Motion Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-icm40627_driver","isEditable":false,"isEnabled":true,"name":"icm40627_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-icm40627_driver"},{"keyWords":"imu_driver_icm20648","componentId":"imu_driver_icm20648","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/imu","description":"Intertial Measurement Unit driver for InvenSense ICM-20648\n","instantiable":false,"label":"IMU - Device driver for InvenSense ICM-20648","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-imu_driver_icm20648","isEditable":false,"isEnabled":true,"name":"imu_driver_icm20648","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-imu_driver_icm20648"},{"keyWords":"imu_driver_icm20689","componentId":"imu_driver_icm20689","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/imu","description":"Intertial Measurement Unit driver for InvenSense ICM-20689\n","instantiable":false,"label":"IMU - Device driver for InvenSense ICM-20689","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-imu_driver_icm20689","isEditable":false,"isEnabled":true,"name":"imu_driver_icm20689","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-imu_driver_icm20689"},{"keyWords":"imu_driver_icm40627","componentId":"imu_driver_icm40627","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/imu","description":"Intertial Measurement Unit driver for InvenSense ICM-40627\n","instantiable":false,"label":"IMU - Device driver for InvenSense ICM-40627","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-imu_driver_icm40627","isEditable":false,"isEnabled":true,"name":"imu_driver_icm40627","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-imu_driver_icm40627"},{"keyWords":"imu_driver","componentId":"imu_driver","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/imu","description":"Intertial Measurement Unit driver\n","instantiable":false,"label":"IMU - Inertial Measurement Unit","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-imu_driver","isEditable":false,"isEnabled":true,"name":"imu_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-imu_driver"},{"keyWords":"joystick","componentId":"joystick","isConfigurable":true,"documentation":"","description":"The Joystick Driver provides an implementation of the Analog Joystick API.\nThis driver supports the Joystick Hardware present on Wireless Pro Kit (BRD4002A)\n","instantiable":false,"label":"Joystick","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-joystick","isEditable":false,"isEnabled":true,"name":"joystick","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-joystick"},{"keyWords":"mx25_flash_shutdown_eusart","componentId":"mx25_flash_shutdown_eusart","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/mx25-flash-shutdown","description":"Provides a function to put the MX25 SPI flash into deep power down mode in order to reduce power consumption using the EUSART SPI. Note that in case of a custom board (not a Silicon Labs radio board), the sl_mx25_flash_shutdown() function call should be manually added in the application.\n","instantiable":false,"label":"MX25 Flash Shutdown with eusart","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-mx25_flash_shutdown_eusart","isEditable":false,"isEnabled":true,"name":"mx25_flash_shutdown_eusart","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-mx25_flash_shutdown_eusart"},{"keyWords":"mx25_flash_shutdown_usart","componentId":"mx25_flash_shutdown_usart","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/mx25-flash-shutdown","description":"Provides a function to put the MX25 SPI flash into deep power down mode in order to reduce power consumption using the USART SPI. Note that in case of a custom board (not a Silicon Labs radio board), the sl_mx25_flash_shutdown() function call should be manually added in the application.\n","instantiable":false,"label":"MX25 Flash Shutdown with usart","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-mx25_flash_shutdown_usart","isEditable":false,"isEnabled":true,"name":"mx25_flash_shutdown_usart","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-mx25_flash_shutdown_usart"},{"keyWords":"mic_driver","componentId":"mic_driver","isConfigurable":false,"documentation":"","description":"Generic abstraction of microphone drivers\n","instantiable":false,"label":"Microphone","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-mic_driver","isEditable":false,"isEnabled":true,"name":"mic_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-mic_driver"},{"keyWords":"pressure_driver_bmp280","componentId":"pressure_driver_bmp280","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/bmp280","description":"Pressure sensor driver for BMP280\n","instantiable":false,"label":"Pressure device driver for BMP280","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-pressure_driver_bmp280","isEditable":false,"isEnabled":true,"name":"pressure_driver_bmp280","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-pressure_driver_bmp280"},{"keyWords":"pressure_driver_bmp3xx","componentId":"pressure_driver_bmp3xx","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/bmp3xx","description":"Pressure sensor driver for BMP3XX\n","instantiable":false,"label":"Pressure device driver for BMP3XX","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-pressure_driver_bmp3xx","isEditable":false,"isEnabled":true,"name":"pressure_driver_bmp3xx","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-pressure_driver_bmp3xx"},{"keyWords":"pressure_driver","componentId":"pressure_driver","isConfigurable":false,"documentation":"","description":"Pressure sensor driver\n","instantiable":false,"label":"Pressure sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-pressure_driver","isEditable":false,"isEnabled":true,"name":"pressure_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-pressure_driver"},{"keyWords":"sht4x_driver","componentId":"sht4x_driver","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/sht4x","description":"Driver for the SHT40 and SHT41 Temperature / Humidity sensors","instantiable":false,"label":"SHT4x - Temperature/Humidity Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-sht4x_driver","isEditable":false,"isEnabled":true,"name":"sht4x_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-sht4x_driver"},{"keyWords":"si1133_driver","componentId":"si1133_driver","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/si1133","description":"Driver for the Silicon Labs Si1133 ambient light and UV sensor\n","instantiable":false,"label":"Si1133 - Light/UV Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-si1133_driver","isEditable":false,"isEnabled":true,"name":"si1133_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-si1133_driver"},{"keyWords":"si446x_radio_eusart","componentId":"si446x_radio_eusart","isConfigurable":true,"documentation":"","description":"Provides functions/globals to configure Si446x radio using EUSART SPI.\n","instantiable":false,"label":"Si446x Radio with eusart","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-si446x_radio_eusart","isEditable":false,"isEnabled":true,"name":"si446x_radio_eusart","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-si446x_radio_eusart"},{"keyWords":"si446x_radio_usart","componentId":"si446x_radio_usart","isConfigurable":true,"documentation":"","description":"Provides functions/globals to configure Si446x radio using USART SPI.\n","instantiable":false,"label":"Si446x Radio with usart","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-si446x_radio_usart","isEditable":false,"isEnabled":true,"name":"si446x_radio_usart","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-si446x_radio_usart"},{"keyWords":"si70xx_driver","componentId":"si70xx_driver","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/si70xx","description":"Driver for the Si7006, Si7013, Si7020 and Si7021 Temperature / Humidity sensors","instantiable":false,"label":"Si70xx - Temperature/Humidity Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-si70xx_driver","isEditable":false,"isEnabled":true,"name":"si70xx_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-si70xx_driver"},{"keyWords":"si7210_driver","componentId":"si7210_driver","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/si7210","description":"Driver for the Silicon Labs Si7210 Hall effect sensor\n","instantiable":false,"label":"Si7210 - Hall Effect Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-si7210_driver","isEditable":false,"isEnabled":true,"name":"si7210_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-si7210_driver"},{"keyWords":"si72xx_driver","componentId":"si72xx_driver","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/si72xx","description":"Driver for the Silicon Labs Si72xx Hall effect sensor\n","instantiable":false,"label":"Si72xx - Hall Effect Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-si72xx_driver","isEditable":false,"isEnabled":true,"name":"si72xx_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-si72xx_driver"},{"keyWords":"veml6035_driver","componentId":"veml6035_driver","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-hardware-driver/veml6035","description":"Driver for the Vishay VEML6035 ambient light sensor\n","instantiable":false,"label":"VEML6035 - Ambient Light Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Board_Drivers|studiocomproot-Platform-Board_Drivers-veml6035_driver","isEditable":false,"isEnabled":true,"name":"veml6035_driver","isSelected":false,"id":"studiocomproot-Platform-Board_Drivers-veml6035_driver"}],"isEnabled":true,"name":"Board Drivers","id":"studiocomproot-Platform-Board_Drivers","label":"Board Drivers","type":"category"},{"children":[{"children":[{"keyWords":"bootloader_bgapi_uartdfu","componentId":"bootloader_bgapi_uartdfu","isConfigurable":false,"documentation":"","description":"The BGAPI UART DFU component provides DFU (device firmware upgrade) for Bluetooth applications using the BGAPI protocol. A GBL image containing the new firmware is written to the target device using UART as the physical interface and BGAPI protocol. The BGAPI UART DFU bootloader is a standalone bootloader, so no storage area needs to be configured. During UART DFU upgrade the bootloader writes the new firmware image directly on top of the old firmware image and therefore no temporary download area is needed.\n","instantiable":false,"label":"BGAPI UART DFU","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Communication|studiocomproot-Platform-Bootloader-Communication-bootloader_bgapi_uartdfu","isEditable":false,"isEnabled":true,"name":"bootloader_bgapi_uartdfu","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Communication-bootloader_bgapi_uartdfu"},{"keyWords":"bootloader_apploader","componentId":"bootloader_apploader","isConfigurable":true,"documentation":"","description":"The Bluetooth AppLoader OTA DFU component provides the Bluetooth OTA (over-the-air) device firmware upgrade (DFU) protocol for applications. Before doing an update it checks for the current version of the bootloader. If the current version is not the latest, then only the bootloader is upgraded.\n","instantiable":false,"label":"Bluetooth AppLoader OTA DFU","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Communication|studiocomproot-Platform-Bootloader-Communication-bootloader_apploader","isEditable":false,"isEnabled":true,"name":"bootloader_apploader","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Communication-bootloader_apploader"},{"keyWords":"bootloader_ezsp_spi","componentId":"bootloader_ezsp_spi","isConfigurable":false,"documentation":"","description":"The Bootloader EZSP-SPI component provides a EZSP protocol over SPI. This component makes a bootloader that is compatible with the legacy 'ezsp-spi-bootloader' that was previously released with the EmberZnet and Silicon Labs Thread  wireless stacks, this component can be used for firmware upgrade over SPI using EZSP protocol, pinout should be configured in the SPI Peripheral component.\n","instantiable":false,"label":"EZSP-SPI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Communication|studiocomproot-Platform-Bootloader-Communication-bootloader_ezsp_spi","isEditable":false,"isEnabled":true,"name":"bootloader_ezsp_spi","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Communication-bootloader_ezsp_spi"},{"keyWords":"bootloader_uart_xmodem","componentId":"bootloader_uart_xmodem","isConfigurable":true,"documentation":"","description":"The Bootloader UART XMODEM component provides a firmware upgrade over UART using the XMODEM-CRC file transfer protocol. This configurable component makes the bootloader compatible with the legacy serial UART bootloader that was released with the wireless stacks.\n","instantiable":false,"label":"UART XMODEM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Communication|studiocomproot-Platform-Bootloader-Communication-bootloader_uart_xmodem","isEditable":false,"isEnabled":true,"name":"bootloader_uart_xmodem","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Communication-bootloader_uart_xmodem"},{"keyWords":"bootloader_xmodem_parser","componentId":"bootloader_xmodem_parser","isConfigurable":false,"documentation":"","description":"The Bootloader XMODEM Parser component provides XMODEM parser implementation.\n","instantiable":false,"label":"XMODEM Parser","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Communication|studiocomproot-Platform-Bootloader-Communication-bootloader_xmodem_parser","isEditable":false,"isEnabled":true,"name":"bootloader_xmodem_parser","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Communication-bootloader_xmodem_parser"}],"isEnabled":true,"name":"Communication","id":"studiocomproot-Platform-Bootloader-Communication","label":"Communication","type":"category"},{"children":[{"keyWords":"bootloader_aes_ctr_stream_block_cfg","componentId":"bootloader_aes_ctr_stream_block_cfg","isConfigurable":true,"documentation":"","description":"Provides the configuration for determining the size of stream block that are pre-computed.\n","instantiable":false,"label":"Bootloader AES CTR Stream Block Config","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Core|studiocomproot-Platform-Bootloader-Core-bootloader_aes_ctr_stream_block_cfg","isEditable":false,"isEnabled":true,"name":"bootloader_aes_ctr_stream_block_cfg","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Core-bootloader_aes_ctr_stream_block_cfg"},{"keyWords":"bootloader_core","componentId":"bootloader_core","isConfigurable":true,"documentation":"","description":"The Bootloader Core component provides a core library for the Gecko bootloader, It provides the core functions such as bootloader initialization and de-initialization, setting a reset reason, reset methods, initialization of the image parser, and others.\n","instantiable":false,"label":"Bootloader Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Core|studiocomproot-Platform-Bootloader-Core-bootloader_core","isEditable":false,"isEnabled":true,"name":"bootloader_core","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Core-bootloader_core"},{"keyWords":"bootloader_include_parser","componentId":"bootloader_include_parser","isConfigurable":false,"documentation":"","description":"The Bootloader Include Parser component provides image parser header files.\n","instantiable":false,"label":"Bootloader Include Parser","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Core|studiocomproot-Platform-Bootloader-Core-bootloader_include_parser","isEditable":false,"isEnabled":true,"name":"bootloader_include_parser","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Core-bootloader_include_parser"},{"keyWords":"bootloader_gbl_compression_lz4","componentId":"bootloader_gbl_compression_lz4","isConfigurable":false,"documentation":"","description":"The Bootloader GBL Compression (LZ4) component can decompress LZ4 compressed GBL upgrade files. LZ4 is a lossless data compression algorithm that is focused on compression and decompression speed. It belongs to the LZ77 family of byte-oriented compression schemes, LZ4 algorithms goal is to provide a good trade-off between speed and compression ratio.\n","instantiable":false,"label":"GBL Compression (LZ4)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Core|studiocomproot-Platform-Bootloader-Core-bootloader_gbl_compression_lz4","isEditable":false,"isEnabled":true,"name":"bootloader_gbl_compression_lz4","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Core-bootloader_gbl_compression_lz4"},{"keyWords":"bootloader_compression_lzma","componentId":"bootloader_compression_lzma","isConfigurable":false,"documentation":"","description":"The Bootloader GBL Compression (LZMA) component can decompress the Lempel\u2013Ziv\u2013Markov chain algorithm (LZMA)-compressed files. LZMA is an algorithm used to perform lossless data compression. This algorithm uses a dictionary compression scheme somewhat similar to the LZ77 algorithms.\n","instantiable":false,"label":"GBL Compression (LZMA)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Core|studiocomproot-Platform-Bootloader-Core-bootloader_compression_lzma","isEditable":false,"isEnabled":true,"name":"bootloader_compression_lzma","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Core-bootloader_compression_lzma"},{"keyWords":"bootloader_gbl_delta_dfu","componentId":"bootloader_gbl_delta_dfu","isConfigurable":false,"documentation":"","description":"The Bootloader GBL Delta DFU component is used to parse the GBL Files with delta patch. The incoming GBL contains a diff patch for firmware upgrade. This component enables the bootloader to parse these GBL files.\n","instantiable":false,"label":"GBL Delta DFU","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Core|studiocomproot-Platform-Bootloader-Core-bootloader_gbl_delta_dfu","isEditable":false,"isEnabled":true,"name":"bootloader_gbl_delta_dfu","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Core-bootloader_gbl_delta_dfu"},{"keyWords":"bootloader_gbl_version_dependency_tag","componentId":"bootloader_gbl_version_dependency_tag","isConfigurable":false,"documentation":"","description":"The Bootloader GBL Version Dependency Tag component supports version-dependency tags in the GBL parser. To avoid mishaps and foot-shooting, the GBL format needs to be updated with a new tag describing version dependencies  for the image it contains. This tag would encode: Applying GBL requires presence of previous application version > / >= / < / <= application x.y.z Applying GBL requires presence of bootloader version > / >= / < / <= bootloader x.y.z Applying GBL requires presence of SE version > / >= / < / <= SE x.y.z\nNote: This support is available to series 2 devices only.\n","instantiable":false,"label":"GBL Version Dependency Tag","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Core|studiocomproot-Platform-Bootloader-Core-bootloader_gbl_version_dependency_tag","isEditable":false,"isEnabled":true,"name":"bootloader_gbl_version_dependency_tag","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Core-bootloader_gbl_version_dependency_tag"},{"keyWords":"bootloader_image_parser","componentId":"bootloader_image_parser","isConfigurable":false,"documentation":"","description":"The Bootloader Image Parser component supports parsing GBL files based on the GBL file format specification.\n","instantiable":false,"label":"Image Parser","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Core|studiocomproot-Platform-Bootloader-Core-bootloader_image_parser","isEditable":false,"isEnabled":true,"name":"bootloader_image_parser","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Core-bootloader_image_parser"},{"keyWords":"bootloader_image_parser_nonenc","componentId":"bootloader_image_parser_nonenc","isConfigurable":false,"documentation":"","description":"The Image parser without encryption component provides an image parser that doesn't parse encrypted GBL files.\n","instantiable":false,"label":"Image Parser without encryption support.\n","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Core|studiocomproot-Platform-Bootloader-Core-bootloader_image_parser_nonenc","isEditable":false,"isEnabled":true,"name":"bootloader_image_parser_nonenc","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Core-bootloader_image_parser_nonenc"}],"isEnabled":true,"name":"Core","id":"studiocomproot-Platform-Bootloader-Core","label":"Core","type":"category"},{"children":[{"keyWords":"bootloader_delay_driver","componentId":"bootloader_delay_driver","isConfigurable":false,"documentation":"","description":"The Bootloader Delay Driver component provides micro- and millisecond delays.\n","instantiable":false,"label":"Bootloader Delay Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Drivers|studiocomproot-Platform-Bootloader-Drivers-bootloader_delay_driver","isEditable":false,"isEnabled":true,"name":"bootloader_delay_driver","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Drivers-bootloader_delay_driver"},{"keyWords":"bootloader_euart_driver","componentId":"bootloader_euart_driver","isConfigurable":true,"documentation":"","description":"The Bootloader EUART Driver component provides a DMA-driven EUART driver. It can be used as a serial UART Interface Driver and also for communication with external devices. Configurable EUART settings include baud rate, flow control, Tx and Rx, buffer size and can enabling/disabling the virtual communication port.\n","instantiable":false,"label":"Bootloader EUART Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Drivers|studiocomproot-Platform-Bootloader-Drivers-bootloader_euart_driver","isEditable":false,"isEnabled":true,"name":"bootloader_euart_driver","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Drivers-bootloader_euart_driver"},{"keyWords":"bootloader_spi_controller_eusart_driver","componentId":"bootloader_spi_controller_eusart_driver","isConfigurable":true,"documentation":"","description":"The Bootloader SPI Controller EUSART Driver component provides a simple blocking SPI Extended Universal Synchronous/Asynchronous Receiver/Transmitter(EUSART) controller implementation for communication with external devices. The driver's options are configurable.\n","instantiable":false,"label":"Bootloader SPI Controller Eusart Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Drivers|studiocomproot-Platform-Bootloader-Drivers-bootloader_spi_controller_eusart_driver","isEditable":false,"isEnabled":true,"name":"bootloader_spi_controller_eusart_driver","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Drivers-bootloader_spi_controller_eusart_driver"},{"keyWords":"bootloader_spi_controller_usart_driver","componentId":"bootloader_spi_controller_usart_driver","isConfigurable":true,"documentation":"","description":"The Bootloader SPI Controller USART Driver component provides simple blocking SPI Universal Synchronous/Asynchronous Receiver/Transmitter(USART) controller implementation for communication with external devices. The driver's options are configurable.\n","instantiable":false,"label":"Bootloader SPI Controller Usart Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Drivers|studiocomproot-Platform-Bootloader-Drivers-bootloader_spi_controller_usart_driver","isEditable":false,"isEnabled":true,"name":"bootloader_spi_controller_usart_driver","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Drivers-bootloader_spi_controller_usart_driver"},{"keyWords":"bootloader_spi_peripheral_eusart_driver","componentId":"bootloader_spi_peripheral_eusart_driver","isConfigurable":true,"documentation":"","description":"The Bootloader SPI Peripheral EUSART Driver component provides a DMA-driven SPI Peripheral EUSART driver. The driver's options are configurable.\n","instantiable":false,"label":"Bootloader SPI Peripheral Eusart Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Drivers|studiocomproot-Platform-Bootloader-Drivers-bootloader_spi_peripheral_eusart_driver","isEditable":false,"isEnabled":true,"name":"bootloader_spi_peripheral_eusart_driver","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Drivers-bootloader_spi_peripheral_eusart_driver"},{"keyWords":"bootloader_spi_peripheral_usart_driver","componentId":"bootloader_spi_peripheral_usart_driver","isConfigurable":true,"documentation":"","description":"The Bootloader SPI Peripheral USART Driver component provides a DMA-driven SPI Peripheral USART driver. The driver's options are configurable.\n","instantiable":false,"label":"Bootloader SPI Peripheral Usart Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Drivers|studiocomproot-Platform-Bootloader-Drivers-bootloader_spi_peripheral_usart_driver","isEditable":false,"isEnabled":true,"name":"bootloader_spi_peripheral_usart_driver","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Drivers-bootloader_spi_peripheral_usart_driver"},{"keyWords":"bootloader_serial_driver","componentId":"bootloader_serial_driver","isConfigurable":false,"documentation":"","description":"The Bootloader Serial Driver component is a DMA-driven serial UART driver implementation for use in communication components implementing UART protocols. Both blocking and non-blocking operations are supported. DMA backing the background transfers to support non-blocking operations.\n","instantiable":false,"label":"Bootloader Serial Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Drivers|studiocomproot-Platform-Bootloader-Drivers-bootloader_serial_driver","isEditable":false,"isEnabled":true,"name":"bootloader_serial_driver","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Drivers-bootloader_serial_driver"},{"keyWords":"bootloader_uart_driver","componentId":"bootloader_uart_driver","isConfigurable":true,"documentation":"","description":"The Bootloader UART Driver component provides a configurable DMA-driven UART driver. This component implements the serial UART interface driver and it can be used as flexible UART driver for communicating with external devices.\n","instantiable":false,"label":"Bootloader UART Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Drivers|studiocomproot-Platform-Bootloader-Drivers-bootloader_uart_driver","isEditable":false,"isEnabled":true,"name":"bootloader_uart_driver","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Drivers-bootloader_uart_driver"}],"isEnabled":true,"name":"Drivers","id":"studiocomproot-Platform-Bootloader-Drivers","label":"Drivers","type":"category"},{"children":[{"keyWords":"bootloader_storage_slots","componentId":"bootloader_storage_slots","isConfigurable":true,"documentation":"","description":"The Bootloader Storage Slot component allows the user to configure the various bootloader storage slots. It verifies slot overlaps and ensure that storage slots are page-alligned for that particular device.\n","instantiable":false,"label":"Bootloader Storage Slot Setup","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Storage|studiocomproot-Platform-Bootloader-Storage-bootloader_storage_slots","isEditable":false,"isEnabled":true,"name":"bootloader_storage_slots","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Storage-bootloader_storage_slots"},{"keyWords":"bootloader_common_storage_single","componentId":"bootloader_common_storage_single","isConfigurable":true,"documentation":"","description":"The Common Storage (single storage slot only) component provides common functionality for storage components. This size-optimized version only supports a single storage slot.\n","instantiable":false,"label":"Common Storage (single storage slot only)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Storage|studiocomproot-Platform-Bootloader-Storage-bootloader_common_storage_single","isEditable":false,"isEnabled":true,"name":"bootloader_common_storage_single","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Storage-bootloader_common_storage_single"},{"keyWords":"bootloader_common_storage","componentId":"bootloader_common_storage","isConfigurable":true,"documentation":"","description":"The Common Storage component provides common functionality for storage. This component provides the bootloader with multiple storage options. All implementations provide a slot-based API to access image files to be bootloaded. Some storage implementations also support a raw storage API to access the underlying storage medium. This component used to identify the slot, verify the slot, and install the image from the storage slot.\n","instantiable":false,"label":"Common storage","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Storage|studiocomproot-Platform-Bootloader-Storage-bootloader_common_storage","isEditable":false,"isEnabled":true,"name":"bootloader_common_storage","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Storage-bootloader_common_storage"},{"keyWords":"bootloader_internal_storage","componentId":"bootloader_internal_storage","isConfigurable":true,"documentation":"","description":"The Bootloader Internal Storage is a storage component using internal flash. With this component included, during upgrade image is stored in the internal flash during the upgrade process. DMA channel can be configured for DMA-based MSC write.\n","instantiable":false,"label":"Internal Storage","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Storage|studiocomproot-Platform-Bootloader-Storage-bootloader_internal_storage","isEditable":false,"isEnabled":true,"name":"bootloader_internal_storage","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Storage-bootloader_internal_storage"},{"keyWords":"bootloader_spiflash_storage","componentId":"bootloader_spiflash_storage","isConfigurable":true,"documentation":"","description":"The Bootloader SPI Flash Storage component provides storage using SPI flash. The SPI Flash storage implementation  supports a variety of SPI Flash parts like Spansion S25FL208K (8Mbit), Winbond W25X20BV (2Mbit), W25Q80BV (8Mbit), Macronix MX25L2006E (2Mbit), MX25L4006E (4Mbit), MX25L8006E (8Mbit), MX25R8035F (8Mbit low power), MX25L1606E (16Mbit) and many other. The supported devices can be configured using the component editor.\n","instantiable":false,"label":"SPI Flash Storage","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Storage|studiocomproot-Platform-Bootloader-Storage-bootloader_spiflash_storage","isEditable":false,"isEnabled":true,"name":"bootloader_spiflash_storage","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Storage-bootloader_spiflash_storage"},{"keyWords":"bootloader_spiflash_storage_sfdp","componentId":"bootloader_spiflash_storage_sfdp","isConfigurable":false,"documentation":"","description":"The Bootloader SPI Flash Storage SFDP component provides storage using SPI flash with JEDEC SFDP standard. The SPI Flash storage implementation using JEDEC supports all SPI Flash parts that are JEDEC-supported, like Atmel/Adesto AT25DF041A (4Mbit), AT25DF081A (8Mbit) and many other. The supported devices will be detected and configured at runtime using the SFDP standard.\n","instantiable":false,"label":"SPI Flash Storage SFDP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Storage|studiocomproot-Platform-Bootloader-Storage-bootloader_spiflash_storage_sfdp","isEditable":false,"isEnabled":true,"name":"bootloader_spiflash_storage_sfdp","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Storage-bootloader_spiflash_storage_sfdp"}],"isEnabled":true,"name":"Storage","id":"studiocomproot-Platform-Bootloader-Storage","label":"Storage","type":"category"},{"children":[{"children":[{"keyWords":"bootloader_bgapi_uartdfu_nonsecure","componentId":"bootloader_bgapi_uartdfu_nonsecure","isConfigurable":false,"documentation":"","description":"The BGAPI UART DFU (Non-Secure) component provides DFU (device firmware upgrade) for Bluetooth applications using the BGAPI protocol. A GBL image containing the new firmware is written to the target device using UART as the physical interface and BGAPI protocol. The BGAPI UART DFU bootloader is a standalone bootloader, so no storage area needs to be configured. During UART DFU upgrade the bootloader writes the new firmware image directly on top of the old firmware image and therefore no temporary download area is needed.\n","instantiable":false,"label":"BGAPI UART DFU (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication-bootloader_bgapi_uartdfu_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_bgapi_uartdfu_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication-bootloader_bgapi_uartdfu_nonsecure"},{"keyWords":"bootloader_apploader_nonsecure","componentId":"bootloader_apploader_nonsecure","isConfigurable":true,"documentation":"","description":"The Bluetooth AppLoader OTA DFU (Non-Secure) component provides the Bluetooth OTA (over-the-air) device firmware upgrade (DFU) protocol for applications. Before doing an update it checks for the current version  of the bootloader. If the current version is not the latest, then only the bootloader is upgraded.\n","instantiable":false,"label":"Bluetooth AppLoader OTA DFU (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication-bootloader_apploader_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_apploader_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication-bootloader_apploader_nonsecure"},{"keyWords":"bootloader_ezsp_spi_nonsecure","componentId":"bootloader_ezsp_spi_nonsecure","isConfigurable":false,"documentation":"","description":"The Bootloader EZSP-SPI (Non-Secure) component provides a EZSP protocol over SPI. This component makes a bootloader that is compatible with the legacy 'ezsp-spi-bootloader' that was previously released with the EmberZNet and Silicon Labs Thread wireless stacks. This component can be used for firmware upgrade over SPI using the EZSP protocol. pinout should be configured in the SPI Peripheral component.\n","instantiable":false,"label":"EZSP-SPI (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication-bootloader_ezsp_spi_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_ezsp_spi_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication-bootloader_ezsp_spi_nonsecure"},{"keyWords":"bootloader_uart_xmodem_nonsecure","componentId":"bootloader_uart_xmodem_nonsecure","isConfigurable":true,"documentation":"","description":"The Bootloader UART XMODEM (Non-Secure) component provides a firmware upgrade over UART using the XMODEM-CRC file transfer protocol. This configurable component makes the bootloader compatible with the legacy serial UART bootloader that was released with the wireless stacks.\n","instantiable":false,"label":"UART XMODEM (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication-bootloader_uart_xmodem_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_uart_xmodem_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication-bootloader_uart_xmodem_nonsecure"},{"keyWords":"bootloader_xmodem_parser_nonsecure","componentId":"bootloader_xmodem_parser_nonsecure","isConfigurable":false,"documentation":"","description":"The Bootloader XMODEM Parser (Non-Secure) component provides XMODEM parser implementation.\n","instantiable":false,"label":"XMODEM Parser (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication-bootloader_xmodem_parser_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_xmodem_parser_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication-bootloader_xmodem_parser_nonsecure"}],"isEnabled":true,"name":"Communication","id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Communication","label":"Communication","type":"category"},{"children":[{"keyWords":"bootloader_core_nonsecure","componentId":"bootloader_core_nonsecure","isConfigurable":false,"documentation":"","description":"The Bootloader Core (Non-Secure) component provides a non-secure core library for the Gecko bootloader. It provides core functions such as bootloader initializing and de-initialization, setting a reset reason, reset methods, initialization of the image parser, and others.\n","instantiable":false,"label":"Bootloader Core (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Core|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Core-bootloader_core_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_core_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Core-bootloader_core_nonsecure"},{"keyWords":"bootloader_include_parser_nonsecure","componentId":"bootloader_include_parser_nonsecure","isConfigurable":false,"documentation":"","description":"The Bootloader Include Parser (Non-Secure) component provides image parser header files.\n","instantiable":false,"label":"Bootloader Include Parser (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Core|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Core-bootloader_include_parser_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_include_parser_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Core-bootloader_include_parser_nonsecure"},{"keyWords":"bootloader_image_parser_nonsecure","componentId":"bootloader_image_parser_nonsecure","isConfigurable":false,"documentation":"","description":"The Bootloader Image Parser (Non-Secure) component supports parsing GBL files based on the GBL file format specification.\n","instantiable":false,"label":"Image Parser (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Core|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Core-bootloader_image_parser_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_image_parser_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Core-bootloader_image_parser_nonsecure"}],"isEnabled":true,"name":"Core","id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Core","label":"Core","type":"category"},{"children":[{"keyWords":"bootloader_delay_driver_nonsecure","componentId":"bootloader_delay_driver_nonsecure","isConfigurable":false,"documentation":"","description":"The Bootloader Delay Driver (Non-Secure) component provides micro- and millisecond delays.\n","instantiable":false,"label":"Bootloader Delay Driver (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Drivers|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Drivers-bootloader_delay_driver_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_delay_driver_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Drivers-bootloader_delay_driver_nonsecure"},{"keyWords":"bootloader_spi_peripheral_driver_nonsecure","componentId":"bootloader_spi_peripheral_driver_nonsecure","isConfigurable":false,"documentation":"","description":"The Bootloader SPI Peripheral Driver (Non-Secure) component provides a DMA-driven SPI Peripheral driver. This driver will support both blocking and non-blocking operations.\n","instantiable":false,"label":"Bootloader SPI Peripheral Driver (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Drivers|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Drivers-bootloader_spi_peripheral_driver_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_spi_peripheral_driver_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Drivers-bootloader_spi_peripheral_driver_nonsecure"},{"keyWords":"bootloader_serial_driver_nonsecure","componentId":"bootloader_serial_driver_nonsecure","isConfigurable":false,"documentation":"","description":"The Bootloader Serial Driver (Non-Secure) component is a DMA-driven serial UART driver implementation for use in communication components implementing UART protocols. Both blocking and non-blocking operations are supported. DMA backing the background transfers to support non-blocking operations.\n","instantiable":false,"label":"Bootloader Serial Driver (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Drivers|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Drivers-bootloader_serial_driver_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_serial_driver_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Drivers-bootloader_serial_driver_nonsecure"}],"isEnabled":true,"name":"Drivers","id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Drivers","label":"Drivers","type":"category"},{"children":[{"keyWords":"bootloader_crc_nonsecure","componentId":"bootloader_crc_nonsecure","isConfigurable":false,"documentation":"","description":"The Cyclic Redundancy Check component provides software implementations of 16-bit and 32-bit cyclic redundancy check (CRC). It is compatible with trustzone non-secure bootloaders. A cyclic redundancy check (CRC) is an error-detecting code commonly used to detect accidental changes to digital data. Blocks of data entering these systems get a short check value attached, based on the remainder of a polynomial division of their contents. On retrieval, the calculation is repeated and, in the event the check values do not match, corrective action can be taken against data corruption.\n","instantiable":false,"label":"Cyclic Redundancy Check (TrustZone Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Utils|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Utils-bootloader_crc_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_crc_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Utils-bootloader_crc_nonsecure"},{"keyWords":"bootloader_debug_nonsecure","componentId":"bootloader_debug_nonsecure","isConfigurable":true,"documentation":"","description":"The Bootloader Debug (Non-Secure) component provides build debug instrumentation into the bootloader. This component implements two types of debugging functionalities: 1) Defining SL_DEBUG_ASSERT enables assertions on compile-time configurable parameters 2) Defining SL_DEBUG_PRINT enables debug prints at strategic points in the code\n","instantiable":false,"label":"Debug (Non-Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Utils|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Utils-bootloader_debug_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_debug_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Utils-bootloader_debug_nonsecure"}],"isEnabled":true,"name":"Utils","id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-Utils","label":"Utils","type":"category"},{"keyWords":"bootloader_tz_nonsecure","componentId":"bootloader_tz_nonsecure","isConfigurable":false,"documentation":"","description":"The Bootloader TrustZone Non-Secure component sets up the bootloader configuration to create TrustZone Non-Secure bootloader.\n","instantiable":false,"label":"Bootloader TrustZone Non-Secure","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_NonSecure|studiocomproot-Platform-Bootloader-TrustZone_NonSecure-bootloader_tz_nonsecure","isEditable":false,"isEnabled":true,"name":"bootloader_tz_nonsecure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure-bootloader_tz_nonsecure"}],"isEnabled":true,"name":"TrustZone NonSecure","id":"studiocomproot-Platform-Bootloader-TrustZone_NonSecure","label":"TrustZone NonSecure","type":"category"},{"children":[{"children":[{"keyWords":"bootloader_apploader_secure","componentId":"bootloader_apploader_secure","isConfigurable":false,"documentation":"","description":"The Bluetooth AppLoader OTA DFU (Secure) component provides the Bluetooth OTA (over-the-air) device firmware upgrade (DFU) protocol for applications. Before doing an update it checks for the current version of the bootloader. If the current version is not the latest, then only the bootloader is upgraded.\n","instantiable":false,"label":"Bluetooth AppLoader OTA DFU (Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_Secure|studiocomproot-Platform-Bootloader-TrustZone_Secure-Communication|studiocomproot-Platform-Bootloader-TrustZone_Secure-Communication-bootloader_apploader_secure","isEditable":false,"isEnabled":true,"name":"bootloader_apploader_secure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_Secure-Communication-bootloader_apploader_secure"}],"isEnabled":true,"name":"Communication","id":"studiocomproot-Platform-Bootloader-TrustZone_Secure-Communication","label":"Communication","type":"category"},{"children":[{"keyWords":"bootloader_core_secure","componentId":"bootloader_core_secure","isConfigurable":true,"documentation":"","description":"The Bootloader Core (Secure) component provides secure core library for the Gecko bootloader. It provides core functions such as bootloader initialization and de-initialization, setting a reset reason, reset methods, initialization of the image parser, and others.\n","instantiable":false,"label":"Bootloader Core (Secure)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_Secure|studiocomproot-Platform-Bootloader-TrustZone_Secure-Core|studiocomproot-Platform-Bootloader-TrustZone_Secure-Core-bootloader_core_secure","isEditable":false,"isEnabled":true,"name":"bootloader_core_secure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_Secure-Core-bootloader_core_secure"}],"isEnabled":true,"name":"Core","id":"studiocomproot-Platform-Bootloader-TrustZone_Secure-Core","label":"Core","type":"category"},{"children":[{"keyWords":"bootloader_tz_utils","componentId":"bootloader_tz_utils","isConfigurable":false,"documentation":"","description":"The Bootloader TZ utilities component provides the trustzone utilities. This component provides TrustZone utilities, such as handling fatal errors with TrustZone, and validating that the address of the memory is actually non-secure as expected.\n","instantiable":false,"label":"Bootloader TZ utilities","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_Secure|studiocomproot-Platform-Bootloader-TrustZone_Secure-Utils|studiocomproot-Platform-Bootloader-TrustZone_Secure-Utils-bootloader_tz_utils","isEditable":false,"isEnabled":true,"name":"bootloader_tz_utils","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_Secure-Utils-bootloader_tz_utils"}],"isEnabled":true,"name":"Utils","id":"studiocomproot-Platform-Bootloader-TrustZone_Secure-Utils","label":"Utils","type":"category"},{"keyWords":"bootloader_tz_secure","componentId":"bootloader_tz_secure","isConfigurable":false,"documentation":"","description":"The Bootloader TrustZone Secure component sets up the bootloader configuration to create TrustZone Secure bootloader.\n","instantiable":false,"label":"Bootloader TrustZone Secure","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-TrustZone_Secure|studiocomproot-Platform-Bootloader-TrustZone_Secure-bootloader_tz_secure","isEditable":false,"isEnabled":true,"name":"bootloader_tz_secure","isSelected":false,"id":"studiocomproot-Platform-Bootloader-TrustZone_Secure-bootloader_tz_secure"}],"isEnabled":true,"name":"TrustZone Secure","id":"studiocomproot-Platform-Bootloader-TrustZone_Secure","label":"TrustZone Secure","type":"category"},{"children":[{"keyWords":"bootloader_aes_sha_ecdsa","componentId":"bootloader_aes_sha_ecdsa","isConfigurable":false,"documentation":"","description":"The Crypto component provides crypto operations for bootloader, including: 1) Advanced Encryption Standard (AES) 2) Elliptic Curve Digital Signature Algorithm(ECDSA) 3) Secure Hash Algorithms(SHA).\n","instantiable":false,"label":"Crypto","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Utils|studiocomproot-Platform-Bootloader-Utils-bootloader_aes_sha_ecdsa","isEditable":false,"isEnabled":true,"name":"bootloader_aes_sha_ecdsa","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Utils-bootloader_aes_sha_ecdsa"},{"keyWords":"bootloader_crc","componentId":"bootloader_crc","isConfigurable":false,"documentation":"","description":"The Cyclic Redundancy Check component provides a software implementations of 16-bit and 32-bit cyclic redundancy check (CRC). It is compatible with trustzone secure bootloaders and bootloaders without trustzone. A cyclic redundancy check (CRC) is an error-detecting code commonly used to detect accidental changes to digital data. Blocks of data entering these systems get a short check value attached, based on the remainder of a polynomial division of their contents. On retrieval, the calculation is repeated and, in the event the check values do not match, corrective action can be taken against data corruption\n","instantiable":false,"label":"Cyclic Redundancy Check","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Utils|studiocomproot-Platform-Bootloader-Utils-bootloader_crc","isEditable":false,"isEnabled":true,"name":"bootloader_crc","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Utils-bootloader_crc"},{"keyWords":"bootloader_debug","componentId":"bootloader_debug","isConfigurable":true,"documentation":"","description":"The Bootloader Debug component provides the build debug instrumentation into the bootloader. This component implements two types of debugging functionalities: 1) Defining SL_DEBUG_ASSERT enables assertions on compile-time configurable parameters 2) Defining SL_DEBUG_PRINT enables debug prints at strategic points in the code\n","instantiable":false,"label":"Debug","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Utils|studiocomproot-Platform-Bootloader-Utils-bootloader_debug","isEditable":false,"isEnabled":true,"name":"bootloader_debug","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Utils-bootloader_debug"},{"keyWords":"bootloader_ezsp_gpio_activation","componentId":"bootloader_ezsp_gpio_activation","isConfigurable":true,"documentation":"","description":"The Bootloader EZSP GPIO activation component provides entry to bootloader firmware upgrade  using EZSP protocol over SPI mode if GPIO pin has a given state at reset. GPIO pin state  and GPIO states can be configured by SL_EZSPSPI_HOST_INT and SL_EZSPSPI_WAKE_INT. \n","instantiable":false,"label":"EZSP GPIO activation","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Utils|studiocomproot-Platform-Bootloader-Utils-bootloader_ezsp_gpio_activation","isEditable":false,"isEnabled":true,"name":"bootloader_ezsp_gpio_activation","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Utils-bootloader_ezsp_gpio_activation"},{"keyWords":"bootloader_gpio_activation","componentId":"bootloader_gpio_activation","isConfigurable":true,"documentation":"","description":"The Bootloader GPIO activation component provides entry to bootloader firmware upgrade mode if GPIO has a given state at reset. The GPIO state is configurable.\n","instantiable":false,"label":"GPIO activation","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Utils|studiocomproot-Platform-Bootloader-Utils-bootloader_gpio_activation","isEditable":false,"isEnabled":true,"name":"bootloader_gpio_activation","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Utils-bootloader_gpio_activation"},{"keyWords":"bootloader_token_management","componentId":"bootloader_token_management","isConfigurable":false,"documentation":"","description":"The Bootloader Token Management component provides manufacturing token management for cryptographic keys.\n","instantiable":false,"label":"Token Management","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-Utils|studiocomproot-Platform-Bootloader-Utils-bootloader_token_management","isEditable":false,"isEnabled":true,"name":"bootloader_token_management","isSelected":false,"id":"studiocomproot-Platform-Bootloader-Utils-bootloader_token_management"}],"isEnabled":true,"name":"Utils","id":"studiocomproot-Platform-Bootloader-Utils","label":"Utils","type":"category"},{"keyWords":"bootloader_app_properties","componentId":"bootloader_app_properties","isConfigurable":true,"documentation":"","description":"The App properties component is needed for an application that wishes to generate into a GBL file using the commander utility and the --app option. The struct in the application is used to declare the application properties such as version, application type, signature type, product id, capabilities and so on.\nNote: This component is added as a dependency when the Bootloader Application Interface component is added to the project. It is not recommended to install this component independently, without installing the Bootloader Application Interface component.\n","instantiable":false,"label":"App Properties","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-bootloader_app_properties","isEditable":false,"isEnabled":true,"name":"bootloader_app_properties","isSelected":false,"id":"studiocomproot-Platform-Bootloader-bootloader_app_properties"},{"keyWords":"bootloader_app_upgrade_version","componentId":"bootloader_app_upgrade_version","isConfigurable":false,"documentation":"","description":"The Application upgrade version check component is used to check the version number and product ID of the application before applying upgrade. If the version number of the running application cannot be determined, this implementation assumes that it is ok to apply the new image. If secure downgrade protection is required, an alternative implementation that stores the information about the running image in a dedicated location must be implemented. For secure downgrade protection, consider enabling rollback-protection from the Bootloader Core Component.\n","instantiable":false,"label":"Application upgrade version check","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-bootloader_app_upgrade_version","isEditable":false,"isEnabled":true,"name":"bootloader_app_upgrade_version","isSelected":false,"id":"studiocomproot-Platform-Bootloader-bootloader_app_upgrade_version"},{"keyWords":"bootloader_interface","componentId":"bootloader_interface","isConfigurable":true,"documentation":"http://docs.silabs.com/mcu-bootloader/2.6.0/group-Interface","description":"The Bootloader Application Interface component must be added to a project in order to use the Gecko Bootloader. When this component is included in a secure application project, a part of flash memory is reserved for Bootloader usage in the application linker file. This component also provides a bootloader interface for interacting with the Gecko Bootloader.\nNote: This component is not required for Gecko Bootloader projects. This component is only required for application projects that need Gecko Bootloader support.\n","instantiable":false,"label":"Bootloader Application Interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Bootloader|studiocomproot-Platform-Bootloader-bootloader_interface","isEditable":false,"isEnabled":true,"name":"bootloader_interface","isSelected":false,"id":"studiocomproot-Platform-Bootloader-bootloader_interface"}],"isEnabled":true,"name":"Bootloader","id":"studiocomproot-Platform-Bootloader","label":"Bootloader","type":"category"},{"children":[{"keyWords":"cmsis_core","componentId":"cmsis_core","isConfigurable":false,"documentation":"","description":"CMSIS core include path.","instantiable":false,"label":"CMSIS-Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-CMSIS|studiocomproot-Platform-CMSIS-cmsis_core","isEditable":false,"isEnabled":true,"name":"cmsis_core","isSelected":true,"id":"studiocomproot-Platform-CMSIS-cmsis_core"},{"keyWords":"cmsis_rtos2_headers","componentId":"cmsis_rtos2_headers","isConfigurable":false,"documentation":"","description":"CMSIS RTOS2 include path, with OS Tick API (headers only).","instantiable":false,"label":"CMSIS-RTOS2 Headers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-CMSIS|studiocomproot-Platform-CMSIS-cmsis_rtos2_headers","isEditable":false,"isEnabled":true,"name":"cmsis_rtos2_headers","isSelected":false,"id":"studiocomproot-Platform-CMSIS-cmsis_rtos2_headers"},{"keyWords":"cmsis_rtos2_init","componentId":"cmsis_rtos2_init","isConfigurable":false,"documentation":"","description":"CMSIS RTOS2 Initialization Hooks.","instantiable":false,"label":"CMSIS-RTOS2 Initialization","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-CMSIS|studiocomproot-Platform-CMSIS-cmsis_rtos2_init","isEditable":false,"isEnabled":true,"name":"cmsis_rtos2_init","isSelected":false,"id":"studiocomproot-Platform-CMSIS-cmsis_rtos2_init"},{"keyWords":"cmsis_rtos2_tick","componentId":"cmsis_rtos2_tick","isConfigurable":false,"documentation":"","description":"CMSIS RTOS2 Tick Hooks.","instantiable":false,"label":"CMSIS-RTOS2 OS Tick","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-CMSIS|studiocomproot-Platform-CMSIS-cmsis_rtos2_tick","isEditable":false,"isEnabled":true,"name":"cmsis_rtos2_tick","isSelected":false,"id":"studiocomproot-Platform-CMSIS-cmsis_rtos2_tick"}],"isEnabled":true,"name":"CMSIS","id":"studiocomproot-Platform-CMSIS","label":"CMSIS","type":"category"},{"children":[{"keyWords":"cmsis_common","componentId":"cmsis_common","isConfigurable":false,"documentation":"","description":"This component provides \"sl_cmsis_os2_common.h\" header file, which in turn provides typedefs like osSemaphore_t and osThread_t.\nThose types are defined by CMSIS RTOS2 standard, yet their implementation is specific to the operating system. Traditionally, the user would need to include OS-specific header file (like \"os.h\" for MicriumOS) to have access to those types. This implies that the application needs to be aware of the kernel being used (MicriumOS, FreeRTOS, etc.)\nFor applications that need to be OS-agnostic, this component provides an abstract header file \"sl_cmsis_os2_common.h\" that provides the same functionality without the requirement of knowing which OS is used per se.\n","instantiable":false,"label":"Common APIs for CMSIS-Compliant Kernels","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Common|studiocomproot-Platform-Common-cmsis_common","isEditable":false,"isEnabled":true,"name":"cmsis_common","isSelected":false,"id":"studiocomproot-Platform-Common-cmsis_common"},{"keyWords":"example_keypair","componentId":"example_keypair","isConfigurable":false,"documentation":"","description":"Provides example keypair for signing and encryption postbuild actions. This component copies the signing keypair and encryption key in the autogen folder.\n","instantiable":false,"label":"Example keypair","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Common|studiocomproot-Platform-Common-example_keypair","isEditable":false,"isEnabled":true,"name":"example_keypair","isSelected":false,"id":"studiocomproot-Platform-Common-example_keypair"}],"isEnabled":true,"name":"Common","id":"studiocomproot-Platform-Common","label":"Common","type":"category"},{"children":[{"keyWords":"compute_util","componentId":"compute_util","isConfigurable":false,"documentation":"","description":"This component provides compute utilities.\n","instantiable":false,"label":"Compute utilities","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Compute|studiocomproot-Platform-Compute-compute_util","isEditable":false,"isEnabled":true,"name":"compute_util","isSelected":false,"id":"studiocomproot-Platform-Compute-compute_util"},{"keyWords":"driver_mvp","componentId":"driver_mvp","isConfigurable":true,"documentation":"","description":"This component provides a driver for using the MVP hardware capable of accelerating mathematical operations. This component can be used to accelerate machine learning kernel operations as well as other general math operations.\nThe API of this component is marked as internal.\n","instantiable":false,"label":"MVP Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Compute|studiocomproot-Platform-Compute-driver_mvp","isEditable":false,"isEnabled":true,"name":"driver_mvp","isSelected":false,"id":"studiocomproot-Platform-Compute-driver_mvp"},{"keyWords":"driver_mvp_hal_efr32","componentId":"driver_mvp_hal_efr32","isConfigurable":false,"documentation":"","description":"This component provides the HAL part of the MVP driver. It is customized for EFR32 parts with MVP.\nThe API of this component is marked as internal.\n","instantiable":false,"label":"MVP HAL Driver for EFR32 parts","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Compute|studiocomproot-Platform-Compute-driver_mvp_hal_efr32","isEditable":false,"isEnabled":true,"name":"driver_mvp_hal_efr32","isSelected":false,"id":"studiocomproot-Platform-Compute-driver_mvp_hal_efr32"},{"keyWords":"math_mvp","componentId":"math_mvp","isConfigurable":false,"documentation":"","description":"This component provides a MVP accelerated math library for float16 datatypes.\n","instantiable":false,"label":"MVP Math","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Compute|studiocomproot-Platform-Compute-math_mvp","isEditable":false,"isEnabled":true,"name":"math_mvp","isSelected":false,"id":"studiocomproot-Platform-Compute-math_mvp"},{"keyWords":"nn_mvp","componentId":"nn_mvp","isConfigurable":true,"documentation":"","description":"This component provides MVP accelerated NN (neural network) kernels. The API of this component is marked as internal, and is used to implement acceleration for TensorFlow Lite Micro. See the TensorFlow Lite Micro component for Machine Learning APIs.\n","instantiable":false,"label":"MVP NN","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Compute|studiocomproot-Platform-Compute-nn_mvp","isEditable":false,"isEnabled":true,"name":"nn_mvp","isSelected":false,"id":"studiocomproot-Platform-Compute-nn_mvp"},{"keyWords":"math","componentId":"math","isConfigurable":false,"documentation":"","description":"This component provides some math features.\n","instantiable":false,"label":"Math","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Compute|studiocomproot-Platform-Compute-math","isEditable":false,"isEnabled":true,"name":"math","isSelected":false,"id":"studiocomproot-Platform-Compute-math"},{"keyWords":"math_types","componentId":"math_types","isConfigurable":false,"documentation":"","description":"This component provides some math type features.\n","instantiable":false,"label":"Math Types","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Compute|studiocomproot-Platform-Compute-math_types","isEditable":false,"isEnabled":true,"name":"math_types","isSelected":false,"id":"studiocomproot-Platform-Compute-math_types"},{"keyWords":"nn_util","componentId":"nn_util","isConfigurable":false,"documentation":"","description":"This component provides some NN (neural network) utilities.\n","instantiable":false,"label":"NN Utilities","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Compute|studiocomproot-Platform-Compute-nn_util","isEditable":false,"isEnabled":true,"name":"nn_util","isSelected":false,"id":"studiocomproot-Platform-Compute-nn_util"}],"isEnabled":true,"name":"Compute","id":"studiocomproot-Platform-Compute","label":"Compute","type":"category"},{"children":[{"children":[{"keyWords":"EFR32MG26B420F3200IM68","componentId":"EFR32MG26B420F3200IM68","isConfigurable":false,"documentation":"","description":"Silicon Labs CMSIS-Device part headers for EFR32MG26B420F3200IM68.","instantiable":false,"label":"EFR32MG26B420F3200IM68","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"device:opn:efr32mg26b420f3200im68","path":"studiocomproot-Platform|studiocomproot-Platform-Device|studiocomproot-Platform-Device-EFR32MG26|studiocomproot-Platform-Device-EFR32MG26-EFR32MG26B420F3200IM68","isEditable":false,"isEnabled":true,"name":"EFR32MG26B420F3200IM68","isSelected":true,"id":"studiocomproot-Platform-Device-EFR32MG26-EFR32MG26B420F3200IM68"}],"isEnabled":true,"name":"EFR32MG26","id":"studiocomproot-Platform-Device-EFR32MG26","label":"EFR32MG26","type":"category"},{"children":[{"keyWords":"linux","componentId":"linux","isConfigurable":false,"documentation":"","description":"OS component for Linux.","instantiable":false,"label":"Linux OS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Device|studiocomproot-Platform-Device-Native|studiocomproot-Platform-Device-Native-linux","isEditable":false,"isEnabled":true,"name":"linux","isSelected":false,"id":"studiocomproot-Platform-Device-Native-linux"},{"keyWords":"linux_arch_32","componentId":"linux_arch_32","isConfigurable":false,"documentation":"","description":"OS component for 32 bit Linux build targets.","instantiable":false,"label":"Linux OS (32 bit)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"device:opn:linux_32","path":"studiocomproot-Platform|studiocomproot-Platform-Device|studiocomproot-Platform-Device-Native|studiocomproot-Platform-Device-Native-linux_arch_32","isEditable":false,"isEnabled":true,"name":"linux_arch_32","isSelected":false,"id":"studiocomproot-Platform-Device-Native-linux_arch_32"},{"keyWords":"linux_arch_64","componentId":"linux_arch_64","isConfigurable":false,"documentation":"","description":"OS component for 64 bit Linux build targets.","instantiable":false,"label":"Linux OS (64 bit)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"device:opn:linux_64","path":"studiocomproot-Platform|studiocomproot-Platform-Device|studiocomproot-Platform-Device-Native|studiocomproot-Platform-Device-Native-linux_arch_64","isEditable":false,"isEnabled":true,"name":"linux_arch_64","isSelected":false,"id":"studiocomproot-Platform-Device-Native-linux_arch_64"},{"keyWords":"macos","componentId":"macos","isConfigurable":false,"documentation":"","description":"OS component for MacOS.","instantiable":false,"label":"MacOS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"device:opn:macos","path":"studiocomproot-Platform|studiocomproot-Platform-Device|studiocomproot-Platform-Device-Native|studiocomproot-Platform-Device-Native-macos","isEditable":false,"isEnabled":true,"name":"macos","isSelected":false,"id":"studiocomproot-Platform-Device-Native-macos"},{"keyWords":"win32","componentId":"win32","isConfigurable":false,"documentation":"","description":"OS component for Win32.","instantiable":false,"label":"Win32","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"device:opn:win32","path":"studiocomproot-Platform|studiocomproot-Platform-Device|studiocomproot-Platform-Device-Native|studiocomproot-Platform-Device-Native-win32","isEditable":false,"isEnabled":true,"name":"win32","isSelected":false,"id":"studiocomproot-Platform-Device-Native-win32"}],"isEnabled":true,"name":"Native","id":"studiocomproot-Platform-Device-Native","label":"Native","type":"category"}],"isEnabled":true,"name":"Device","id":"studiocomproot-Platform-Device","label":"Device","type":"category"},{"children":[{"children":[{"keyWords":"simple_button","componentId":"simple_button","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/simple-button","description":"The Simple Button Driver provides an implementation of the Generic Button API. This driver supports both active high and low buttons and configurable debouncing.\n\nThis component is instantiable, meaning that several named instances can be created. For each instance a configuration is generated along with an initialization struct set according to this configuration. These instance defines and variables are available in a generated header file, sl_simple_button_instances.h.\n\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver instances will be initialized automatically, using the instance configurations, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the Simple Button Core component, which is the implementation of the Simple Button driver itself.\n","instantiable":true,"label":"Simple Button","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-Button|studiocomproot-Platform-Driver-Button-simple_button","isEditable":true,"children":[{"keyWords":"simple_button,simple_button,Simple Button","img":"icons/chip.png","componentId":"simple_button","isConfigurable":true,"instanceName":"instance0","documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/simple-button","description":"The Simple Button Driver provides an implementation of the Generic Button API. This driver supports both active high and low buttons and configurable debouncing.\n\nThis component is instantiable, meaning that several named instances can be created. For each instance a configuration is generated along with an initialization struct set according to this configuration. These instance defines and variables are available in a generated header file, sl_simple_button_instances.h.\n\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver instances will be initialized automatically, using the instance configurations, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the Simple Button Core component, which is the implementation of the Simple Button driver itself.\n","instantiable":true,"label":"instance0","type":"instance","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-Button|studiocomproot-Platform-Driver-Button-simple_button|simple_button-simple_button-instance0","isInstance":true,"isEditable":true,"isEnabled":true,"name":"simple_button-instance0","isSelected":true,"id":"simple_button-simple_button-instance0"}],"isEnabled":true,"name":"simple_button","isSelected":true,"id":"studiocomproot-Platform-Driver-Button-simple_button"},{"keyWords":"button","componentId":"button","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/button","description":"The button driver is a platform level software module that manages the initialization and reading of various types of buttons. In addition, a button driver implementation component such as the Simple Button component should be included in the project to implement full button handling.\n","instantiable":false,"label":"Generic Button API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-Button|studiocomproot-Platform-Driver-Button-button","isEditable":false,"isEnabled":true,"name":"button","isSelected":true,"id":"studiocomproot-Platform-Driver-Button-button"},{"keyWords":"simple_button_core","componentId":"simple_button_core","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/simple-button","description":"The Simple Button Driver provides an implementation of the Generic Button API. This driver supports both active high and low buttons and configurable debouncing.\n\nThis component includes only the Simple Button driver. To configure and create instances of this driver, the Simple Button component should be included in the project.\n","instantiable":false,"label":"Simple Button Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-Button|studiocomproot-Platform-Driver-Button-simple_button_core","isEditable":true,"isEnabled":true,"name":"simple_button_core","isSelected":true,"id":"studiocomproot-Platform-Driver-Button-simple_button_core"}],"isEnabled":true,"name":"Button","id":"studiocomproot-Platform-Driver-Button","label":"Button","type":"category"},{"children":[{"keyWords":"coulomb_counter","componentId":"coulomb_counter","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/coulomb-counter","description":"DCDC converters use pulse-frequency modulation (PFM) to drive outputs. The Coulomb counter counts the number of PFM pulses delivered to each output. In order to get the total charge from an output, the charge-per-pulse (CPP) must be determined, then the total charge is computed like so: total_charge = CPP * Num_pulses.\nCurrently, EFP's DCDC and internal DCDC Coulomb counter (supported parts only) are supported by this driver. The Coulomb counter driver provides an abstraction on top of the Coulomb counter registers to make the calibration and reading the counters easier.\n","instantiable":false,"label":"Coulomb Counter","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-Coulomb_Counter|studiocomproot-Platform-Driver-Coulomb_Counter-coulomb_counter","isEditable":false,"isEnabled":true,"name":"coulomb_counter","isSelected":false,"id":"studiocomproot-Platform-Driver-Coulomb_Counter-coulomb_counter"}],"isEnabled":true,"name":"Coulomb Counter","id":"studiocomproot-Platform-Driver-Coulomb_Counter","label":"Coulomb Counter","type":"category"},{"children":[{"keyWords":"debug_swo","componentId":"debug_swo","isConfigurable":true,"documentation":"","description":"Driver for debugging using Serial Wire Output. The driver can be configured to output hardware interrupt events and Program Counter samples using the DWT and ITM, as well as arbitrary data produced by software using any of the 32 stimulus ports of the ITM.\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver will be initialized automatically during the sl_system_init() call in main.c.\nNote: This software component can be used to enable code correlation profiling. For proper operation, enable interrupt event trace and Program Counter samples in the component configuration.\n","instantiable":false,"label":"SWO Debug","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-Debug_SWO|studiocomproot-Platform-Driver-Debug_SWO-debug_swo","isEditable":false,"isEnabled":true,"name":"debug_swo","isSelected":false,"id":"studiocomproot-Platform-Driver-Debug_SWO-debug_swo"}],"isEnabled":true,"name":"Debug SWO","id":"studiocomproot-Platform-Driver-Debug_SWO","label":"Debug SWO","type":"category"},{"children":[{"keyWords":"gpio","componentId":"gpio","isConfigurable":false,"documentation":"","description":"General Purpose Input Output (GPIO) Driver API\n","instantiable":false,"label":"GPIO Driver","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-GPIO|studiocomproot-Platform-Driver-GPIO-gpio","isEditable":false,"isEnabled":true,"name":"gpio","isSelected":true,"id":"studiocomproot-Platform-Driver-GPIO-gpio"}],"isEnabled":true,"name":"GPIO","id":"studiocomproot-Platform-Driver-GPIO","label":"GPIO","type":"category"},{"children":[{"keyWords":"i2cspm","componentId":"i2cspm","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/i2cspm","description":"This is an I2C Simple Polled Master driver that supports master mode with a single bus-master only. It blocks while waiting for the transfer to complete, polling for completion in EM0.\n\nThis component is instantiable, meaning that several named instances can be created. For each instance a configuration is generated along with an initialization struct set according to this configuration. These instance defines and variables are available in a generated header file, sl_i2cspm_instances.h.\n\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver instances will be initialized automatically, using the instance configurations, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the I2CSPM Core component, which is the implementation of the I2CSPM driver itself.\n","instantiable":true,"label":"I2CSPM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-I2C|studiocomproot-Platform-Driver-I2C-i2cspm","isEditable":false,"isEnabled":true,"name":"i2cspm","isSelected":false,"id":"studiocomproot-Platform-Driver-I2C-i2cspm"}],"isEnabled":true,"name":"I2C","id":"studiocomproot-Platform-Driver-I2C","label":"I2C","type":"category"},{"children":[{"keyWords":"keyscan_driver","componentId":"keyscan_driver","isConfigurable":true,"documentation":"","description":"Keyscan driver.","instantiable":false,"label":"Keyscan","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-KeyScan|studiocomproot-Platform-Driver-KeyScan-keyscan_driver","isEditable":false,"isEnabled":true,"name":"keyscan_driver","isSelected":false,"id":"studiocomproot-Platform-Driver-KeyScan-keyscan_driver"}],"isEnabled":true,"name":"KeyScan","id":"studiocomproot-Platform-Driver-KeyScan","label":"KeyScan","type":"category"},{"children":[{"keyWords":"led","componentId":"led","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/led","description":"This component provides a base LED functionality such as initialize, get and set state. In addition, an LED driver implementation component such as the Simple LED component can be included in the project to implement full LED handling.\n","instantiable":false,"label":"Generic LED API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-LED|studiocomproot-Platform-Driver-LED-led","isEditable":false,"isEnabled":true,"name":"led","isSelected":false,"id":"studiocomproot-Platform-Driver-LED-led"},{"keyWords":"simple_led","componentId":"simple_led","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/simple-led","description":"The Simple LED Driver provides an implementation of the Generic LED API. This driver supports controlling GPIO based on/off type LEDs.\n\nThis component is instantiable, meaning that several named instances can be created. For each instance a configuration is generated along with an initialization struct set according to this configuration. These instance defines and variables are available in a generated header file, sl_simple_led_instances.h.\n\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver instances will be initialized automatically, using the instance configurations, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the Simple LED Core component, which is the implementation of the Simple LED driver itself.\n","instantiable":true,"label":"Simple LED","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-LED|studiocomproot-Platform-Driver-LED-simple_led","isEditable":false,"isEnabled":true,"name":"simple_led","isSelected":false,"id":"studiocomproot-Platform-Driver-LED-simple_led"},{"keyWords":"simple_rgb_pwm_led","componentId":"simple_rgb_pwm_led","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/simple-rgb-pwm-led","description":"The Simple RGB PWM LED Driver provides an implementation of the Generic LED API. This driver supports controlling Red/Green/Blue LED sets and uses Pulse Width Modulation (PWM) to set the intensity of each LED.\n\nThis component is instantiable, meaning that several named instances can be created. For each instance a configuration is generated along with an initialization struct set according to this configuration. These instances, defines, and variables are available in a generated header file, sl_simple_rgb_pwm_led_instances.h.\n\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver instances will be initialized automatically, using the instance configurations, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the Simple LED Core component, which is the implementation of the Simple RGB PWM LED driver itself.\n","instantiable":true,"label":"Simple RGB PWM LED","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-LED|studiocomproot-Platform-Driver-LED-simple_rgb_pwm_led","isEditable":false,"isEnabled":true,"name":"simple_rgb_pwm_led","isSelected":false,"id":"studiocomproot-Platform-Driver-LED-simple_rgb_pwm_led"}],"isEnabled":true,"name":"LED","id":"studiocomproot-Platform-Driver-LED","label":"LED","type":"category"},{"children":[{"keyWords":"pwm","componentId":"pwm","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/pwm","description":"The PWM driver uses a high frequency hardware timer to generate Pulse Width Modulated (PWM) waveforms with configurable frequency, polarity and duty cycle. Each PWM output requires one TIMER Compare/Capture channel.\n\nThis component is instantiable, meaning that several named instances can be created. For each instance a configuration is generated along with an initialization struct set according to this configuration. These instance defines and variables are available in a generated header file, sl_pwm_instances.h.\n\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver instances will be initialized automatically, using the instance configurations, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the PWM Core component, which is the implementation of the PWM driver itself.\n","instantiable":true,"label":"PWM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-PWM|studiocomproot-Platform-Driver-PWM-pwm","isEditable":false,"isEnabled":true,"name":"pwm","isSelected":false,"id":"studiocomproot-Platform-Driver-PWM-pwm"}],"isEnabled":true,"name":"PWM","id":"studiocomproot-Platform-Driver-PWM","label":"PWM","type":"category"},{"children":[{"keyWords":"spidrv","componentId":"spidrv","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/spidrv","description":"The SPI USART driver sets up the USART for SPI communication and supports both master and slave roles. Both blocking and interrupt driven asynchrounous APIs are provided for transmit and receive operations.\n\nThis component is instantiable, meaning that several named instances can be created. For each instance a configuration is generated along with an initialization struct set according to this configuration. These instance defines and variables are available in a generated header file, sl_spidrv_instances.h.\n\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver instances will be initialized automatically, using the instance configurations, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the SPIDRV Core component, which is the implementation of the SPI driver itself.\n","instantiable":true,"label":"SPIDRV","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-SPI|studiocomproot-Platform-Driver-SPI-spidrv","isEditable":false,"isEnabled":true,"name":"spidrv","isSelected":false,"id":"studiocomproot-Platform-Driver-SPI-spidrv"},{"keyWords":"spidrv_core","componentId":"spidrv_core","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/spidrv","description":"The SPI driver sets up SPI communication and supports both master and slave roles. Both blocking and interrupt driven asynchrounous APIs are provided for transmit and receive operations.\n\nThis component includes only the SPI driver core. To configure and create instances of this driver, the SPIDRV_USART or SPIDRV_EUSART component should be included in the  project.\n","instantiable":false,"label":"SPIDRV Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-SPI|studiocomproot-Platform-Driver-SPI-spidrv_core","isEditable":false,"isEnabled":true,"name":"spidrv_core","isSelected":false,"id":"studiocomproot-Platform-Driver-SPI-spidrv_core"},{"keyWords":"spidrv_eusart","componentId":"spidrv_eusart","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/spidrv","description":"The SPI EUSART driver sets up the EUSART for SPI communication and supports both master and slave roles. Both blocking and interrupt driven asynchrounous APIs are provided for transmit and receive operations.\n\nThis component is instantiable, meaning that several named instances can be  created. For each instance a configuration is generated along with an  initialization struct set according to this configuration. These instance defines and variables are available in a generated header file,  sl_spidrv_instances.h.\n\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver instances will be initialized automatically, using the instance configurations, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the SPIDRV Core component, which is  the implementation of the SPI driver itself.\n","instantiable":true,"label":"SPIDRV EUSART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-SPI|studiocomproot-Platform-Driver-SPI-spidrv_eusart","isEditable":false,"isEnabled":true,"name":"spidrv_eusart","isSelected":false,"id":"studiocomproot-Platform-Driver-SPI-spidrv_eusart"},{"keyWords":"spidrv_usart","componentId":"spidrv_usart","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/spidrv","description":"The SPI USART driver sets up the USART for SPI communication and supports both master and slave roles. Both blocking and interrupt driven asynchrounous APIs are provided for transmit and receive operations.\n\nThis component is instantiable, meaning that several named instances can be created. For each instance a configuration is generated along with an initialization struct set according to this configuration. These instance defines and variables are available in a generated header file, sl_spidrv_instances.h.\n\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver instances will be initialized automatically, using the instance configurations, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the SPIDRV Core component, which is the implementation of the SPI driver itself.\n","instantiable":true,"label":"SPIDRV USART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-SPI|studiocomproot-Platform-Driver-SPI-spidrv_usart","isEditable":false,"isEnabled":true,"name":"spidrv_usart","isSelected":false,"id":"studiocomproot-Platform-Driver-SPI-spidrv_usart"}],"isEnabled":true,"name":"SPI","id":"studiocomproot-Platform-Driver-SPI","label":"SPI","type":"category"},{"children":[{"keyWords":"uartdrv_core","componentId":"uartdrv_core","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/uartdrv","description":"The UART driver supports the UART capabilities of the USART, UART, and LEUART peripherals. The driver is fully reentrant and supports multiple driver instances. Both blocking and non-blocking transfer functions are available. The non-blocking transfer functions use DMA to transfer data and report transfer completion with callback functions. Note that the blocking functions are not suitable for low energy applications because they use CPU polling.\n\nThis component includes only the UART driver core. To configure and create instances of this driver, one or more of the UARTDRV EUART/LEUART/USART components  should be included in the project.\n","instantiable":false,"label":"UARTDRV Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-UART|studiocomproot-Platform-Driver-UART-uartdrv_core","isEditable":false,"isEnabled":true,"name":"uartdrv_core","isSelected":false,"id":"studiocomproot-Platform-Driver-UART-uartdrv_core"},{"keyWords":"uartdrv_eusart","componentId":"uartdrv_eusart","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/uartdrv","description":"The UART EUSART driver supports the UART capabilities of the EUSART  peripheral. The driver is fully reentrant and supports multiple driver  instances. Both blocking and non-blocking transfer functions are available.  The non-blocking transfer functions use DMA to transfer data and report  transfer completion with callback functions. Note that the blocking functions  are not suitable for low energy applications because they use CPU polling.\n\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver instances will be initialized automatically, using the instance configurations, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the UARTDRV Core component, which is  the implementation of the UARTDRV driver itself.\n","instantiable":true,"label":"UARTDRV EUSART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-UART|studiocomproot-Platform-Driver-UART-uartdrv_eusart","isEditable":false,"isEnabled":true,"name":"uartdrv_eusart","isSelected":false,"id":"studiocomproot-Platform-Driver-UART-uartdrv_eusart"},{"keyWords":"uartdrv_usart","componentId":"uartdrv_usart","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/uartdrv","description":"The UART USART driver supports the UART capabilities of the USART peripheral. The driver is fully reentrant and supports multiple driver  instances. Both blocking and non-blocking transfer functions are available.  The non-blocking transfer functions use DMA to transfer data and report  transfer completion with callback functions. Note that the blocking functions  are not suitable for low energy applications because they use CPU polling.\n\nIf the Services->Runtime->System Setup->System Init component is included in a project, the driver instances will be initialized automatically, using the instance configurations, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the UARTDRV Core component, which is  the implementation of the UARTDRV driver itself.\n","instantiable":true,"label":"UARTDRV USART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-UART|studiocomproot-Platform-Driver-UART-uartdrv_usart","isEditable":false,"isEnabled":true,"name":"uartdrv_usart","isSelected":false,"id":"studiocomproot-Platform-Driver-UART-uartdrv_usart"}],"isEnabled":true,"name":"UART","id":"studiocomproot-Platform-Driver-UART","label":"UART","type":"category"},{"keyWords":"coulomb_counter_efp","componentId":"coulomb_counter_efp","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/coulomb-counter","description":"Coulomb Counter EFP driver.","instantiable":false,"label":"Coulomb Counter EFP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-coulomb_counter_efp","isEditable":false,"isEnabled":true,"name":"coulomb_counter_efp","isSelected":false,"id":"studiocomproot-Platform-Driver-coulomb_counter_efp"},{"keyWords":"cycle_counter","componentId":"cycle_counter","isConfigurable":false,"documentation":"","description":"Data Watchpoint and Trace (DWT) cycle counter is a platform module that initializes the DWT hardware and allows to count execution cycles via a simple API.\n","instantiable":false,"label":"Cycle Counter","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-cycle_counter","isEditable":false,"isEnabled":true,"name":"cycle_counter","isSelected":false,"id":"studiocomproot-Platform-Driver-cycle_counter"},{"keyWords":"dmadrv","componentId":"dmadrv","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/driver/api/group-dmadrv","description":"The Direct Memory Access (DMA) driver is used configure and control the DMA and LDMA peripherals to perform data transfers between memory regions and/or peripherals. The driver handles central management of the DMA channels and interrupt vector which allows sharing DMA resources between several users.\n","instantiable":false,"label":"DMADRV","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-dmadrv","isEditable":false,"isEnabled":true,"name":"dmadrv","isSelected":false,"id":"studiocomproot-Platform-Driver-dmadrv"},{"keyWords":"ecode","componentId":"ecode","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/ecode","description":"Common headers for emdrv components.","instantiable":false,"label":"EMDRV Common Headers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-ecode","isEditable":false,"isEnabled":true,"name":"ecode","isSelected":true,"id":"studiocomproot-Platform-Driver-ecode"},{"keyWords":"glib","componentId":"glib","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/middleware/api/group-glib","description":"GLIB graphics library.","instantiable":false,"label":"GLIB Graphics Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-glib","isEditable":false,"isEnabled":true,"name":"glib","isSelected":false,"id":"studiocomproot-Platform-Driver-glib"},{"keyWords":"dmd_memlcd","componentId":"dmd_memlcd","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/middleware/api/group-dmd","description":"This component is the GLIB dot matrix display driver that support memory LCD displays. This component supports both monochrome and 3 bit rgb displays.\n","instantiable":false,"label":"GLIB driver for Memory LCD","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-dmd_memlcd","isEditable":false,"isEnabled":true,"name":"dmd_memlcd","isSelected":false,"id":"studiocomproot-Platform-Driver-dmd_memlcd"},{"keyWords":"gpiointerrupt","componentId":"gpiointerrupt","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/gpioint","description":"The GPIO interrupt driver implements GPIO IRQ handlers and allows users to register callback functions that are called when a GPIO interrupt is triggered.\n","instantiable":false,"label":"GPIOINT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-gpiointerrupt","isEditable":false,"isEnabled":true,"name":"gpiointerrupt","isSelected":false,"id":"studiocomproot-Platform-Driver-gpiointerrupt"},{"keyWords":"tempdrv","componentId":"tempdrv","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/tempdrv","description":"The Temperature Driver measures the temperature using the EMU internal temperature sensor which is present on some EFR32 and EFM32 devices. Application specific callback functions can be registered and will be called on given temperature thresholds. The EMU internal temperature sensor is running in EM0-EM4H and is capable of waking up the core on temperature change. The EMU temperature sensor is running continuously and measurements are taken every 250 ms. For devices where errata EMU_E201 applies, the temperature driver implements a workaround where EMU settings are adjusted according to the measured temperature. More information on this errata workaround can be found in application note AN1027. \n","instantiable":false,"label":"TEMPDRV","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-tempdrv","isEditable":false,"isEnabled":true,"name":"tempdrv","isSelected":false,"id":"studiocomproot-Platform-Driver-tempdrv"},{"keyWords":"ustimer","componentId":"ustimer","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/ustimer","description":"The microsecond timer uses a high frequency hardware timer to implement a delay function with microsecond accuracy.\n","instantiable":false,"label":"USTIMER","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Driver|studiocomproot-Platform-Driver-ustimer","isEditable":false,"isEnabled":true,"name":"ustimer","isSelected":false,"id":"studiocomproot-Platform-Driver-ustimer"}],"isEnabled":true,"name":"Driver","id":"studiocomproot-Platform-Driver","label":"Driver","type":"category"},{"children":[{"children":[{"keyWords":"emlib_gpio_simple_init","componentId":"emlib_gpio_simple_init","isConfigurable":true,"documentation":"","description":"Provides a simple initialization routine for GPIO.\nThis component is instantiable, meaning that several named instances can be created. For each instance a configuration is generated along with an initialization routine according to this configuration. The initialization routine is available in a generated header file, sl_emlib_gpio_simple_init.h.\nIf the Services->Runtime->System Setup->System Init component is included in the project, the configured GPIO's will be initialized automatically during the sl_system_init() call in main.c.\nSelecting this component will also include the GPIO Init Core component, which is the implementation of the GPIO init routine.\n","instantiable":true,"label":"GPIO Init","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"pin_tool:peripheral:gpio","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-Init|studiocomproot-Platform-Peripheral-Init-emlib_gpio_simple_init","isEditable":false,"isEnabled":true,"name":"emlib_gpio_simple_init","isSelected":false,"id":"studiocomproot-Platform-Peripheral-Init-emlib_gpio_simple_init"},{"keyWords":"emlib_gpio_simple_init_common","componentId":"emlib_gpio_simple_init_common","isConfigurable":false,"documentation":"","description":"Provides a simple initialization routine for GPIO.\nThis component includes only the core of the GPIO initialization routine.  To configure an initialization routine for a GPIO, the GPIO Init component should be included  in the project. \n","instantiable":false,"label":"GPIO Init Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-Init|studiocomproot-Platform-Peripheral-Init-emlib_gpio_simple_init_common","isEditable":false,"isEnabled":true,"name":"emlib_gpio_simple_init_common","isSelected":false,"id":"studiocomproot-Platform-Peripheral-Init-emlib_gpio_simple_init_common"}],"isEnabled":true,"name":"Init","id":"studiocomproot-Platform-Peripheral-Init","label":"Init","type":"category"},{"keyWords":"emlib_acmp","componentId":"emlib_acmp","isConfigurable":false,"documentation":"","description":"Analog comparator (ACMP) Peripheral API\n","instantiable":false,"label":"ACMP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_acmp","isEditable":false,"isEnabled":true,"name":"emlib_acmp","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_acmp"},{"keyWords":"emlib_burtc","componentId":"emlib_burtc","isConfigurable":false,"documentation":"","description":"Backup Real Time Counter (BURTC) Peripheral API\n","instantiable":false,"label":"BURTC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_burtc","isEditable":false,"isEnabled":true,"name":"emlib_burtc","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_burtc"},{"keyWords":"emlib_chip","componentId":"emlib_chip","isConfigurable":false,"documentation":"","description":"Chip Initialization API\n","instantiable":false,"label":"CHIP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_chip","isEditable":false,"isEnabled":true,"name":"emlib_chip","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_chip"},{"keyWords":"emlib_cmu","componentId":"emlib_cmu","isConfigurable":false,"documentation":"","description":"Clock Management Unit (CMU) Peripheral API\n","instantiable":false,"label":"CMU","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_cmu","isEditable":false,"isEnabled":true,"name":"emlib_cmu","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_cmu"},{"keyWords":"emlib_core","componentId":"emlib_core","isConfigurable":true,"documentation":"","description":"API for critical and atomic sections\n","instantiable":false,"label":"CORE","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_core","isEditable":true,"isEnabled":true,"name":"emlib_core","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_core"},{"keyWords":"hal_common","componentId":"hal_common","isConfigurable":false,"documentation":"","description":"Common headers for the Peripheral's library providing register and RAM access, ramfunc, assert functions, macros for alignment, min/max/ceil/floor, pack, section, weak, noreturn, fallthrough and the Silicon Labs CMSIS-Device part headers for the used part.\n","instantiable":false,"label":"Common Headers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-hal_common","isEditable":false,"isEnabled":true,"name":"hal_common","isSelected":true,"id":"studiocomproot-Platform-Peripheral-hal_common"},{"keyWords":"emlib_common","componentId":"emlib_common","isConfigurable":false,"documentation":"","description":"Common headers for EMLIB, providing atomic bit access, macros for alignment, min/max/ceil/floor, pack, section, weak, noreturn, fallthrough and versioning.\n","instantiable":false,"label":"Common Headers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_common","isEditable":false,"isEnabled":true,"name":"emlib_common","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_common"},{"keyWords":"emlib_dbg","componentId":"emlib_dbg","isConfigurable":false,"documentation":"","description":"Debug (DBG) API\n","instantiable":false,"label":"DBG","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_dbg","isEditable":false,"isEnabled":true,"name":"emlib_dbg","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_dbg"},{"keyWords":"emlib","componentId":"emlib","isConfigurable":false,"documentation":"","description":"The lowest level hardware abstraction layer for EFM32 microcontrollers, EZR32/EFR32 SoCs and xGM modules.\nThis component will install all compatible EMLIB modules.\n","instantiable":false,"label":"EMLIB Peripheral HAL","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib","isEditable":false,"isEnabled":true,"name":"emlib","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib"},{"keyWords":"emlib_emu","componentId":"emlib_emu","isConfigurable":false,"documentation":"","description":"Energy Management Unit (EMU) peripheral API\n","instantiable":false,"label":"EMU","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_emu","isEditable":false,"isEnabled":true,"name":"emlib_emu","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_emu"},{"keyWords":"emlib_eusart","componentId":"emlib_eusart","isConfigurable":false,"documentation":"","description":"Universal asynchronous receiver/transmitter (EUSART) peripheral API\n","instantiable":false,"label":"EUSART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_eusart","isEditable":false,"isEnabled":true,"name":"emlib_eusart","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_eusart"},{"keyWords":"emlib_gpcrc","componentId":"emlib_gpcrc","isConfigurable":false,"documentation":"","description":"General Purpose Cyclic Redundancy Check (GPCRC) peripheral API\n","instantiable":false,"label":"GPCRC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_gpcrc","isEditable":false,"isEnabled":true,"name":"emlib_gpcrc","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_gpcrc"},{"keyWords":"hal_gpio","componentId":"hal_gpio","isConfigurable":false,"documentation":"","description":"General Purpose Input Output (GPIO) peripheral API\n","instantiable":false,"label":"GPIO","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-hal_gpio","isEditable":false,"isEnabled":true,"name":"hal_gpio","isSelected":true,"id":"studiocomproot-Platform-Peripheral-hal_gpio"},{"keyWords":"emlib_gpio","componentId":"emlib_gpio","isConfigurable":false,"documentation":"","description":"General Purpose IO (GPIO) peripheral API\n","instantiable":false,"label":"GPIO","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_gpio","isEditable":false,"isEnabled":true,"name":"emlib_gpio","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_gpio"},{"keyWords":"emlib_i2c","componentId":"emlib_i2c","isConfigurable":false,"documentation":"","description":"Inter-integrated Circuit (I2C) peripheral API\n","instantiable":false,"label":"I2C","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_i2c","isEditable":false,"isEnabled":true,"name":"emlib_i2c","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_i2c"},{"keyWords":"emlib_iadc","componentId":"emlib_iadc","isConfigurable":false,"documentation":"","description":"Incremental Analog to Digital Converter (IADC) peripheral API\n","instantiable":false,"label":"IADC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_iadc","isEditable":false,"isEnabled":true,"name":"emlib_iadc","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_iadc"},{"keyWords":"hal_keyscan","componentId":"hal_keyscan","isConfigurable":false,"documentation":"","description":"KEYSCAN Peripheral API\n","instantiable":false,"label":"KEYSCAN","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-hal_keyscan","isEditable":false,"isEnabled":true,"name":"hal_keyscan","isSelected":false,"id":"studiocomproot-Platform-Peripheral-hal_keyscan"},{"keyWords":"emlib_lcd","componentId":"emlib_lcd","isConfigurable":false,"documentation":"","description":"Liquid Crystal Display (LCD) peripheral API\n","instantiable":false,"label":"LCD","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_lcd","isEditable":false,"isEnabled":true,"name":"emlib_lcd","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_lcd"},{"keyWords":"emlib_ldma","componentId":"emlib_ldma","isConfigurable":false,"documentation":"","description":"Linked Direct Memory Access (LDMA) peripheral API\n","instantiable":false,"label":"LDMA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_ldma","isEditable":false,"isEnabled":true,"name":"emlib_ldma","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_ldma"},{"keyWords":"emlib_letimer","componentId":"emlib_letimer","isConfigurable":false,"documentation":"","description":"Low Energy Timer (LETIMER) peripheral API\n","instantiable":false,"label":"LETIMER","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_letimer","isEditable":false,"isEnabled":true,"name":"emlib_letimer","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_letimer"},{"keyWords":"emlib_msc","componentId":"emlib_msc","isConfigurable":false,"documentation":"","description":"Flash controller (MSC) peripheral API\n","instantiable":false,"label":"MSC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_msc","isEditable":false,"isEnabled":true,"name":"emlib_msc","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_msc"},{"keyWords":"emlib_opamp","componentId":"emlib_opamp","isConfigurable":false,"documentation":"","description":"Operational Amplifier (OPAMP) peripheral API\n","instantiable":false,"label":"OPAMP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_opamp","isEditable":false,"isEnabled":true,"name":"emlib_opamp","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_opamp"},{"keyWords":"emlib_pcnt","componentId":"emlib_pcnt","isConfigurable":false,"documentation":"","description":"Pulse Counter (PCNT) peripheral API\n","instantiable":false,"label":"PCNT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_pcnt","isEditable":false,"isEnabled":true,"name":"emlib_pcnt","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_pcnt"},{"keyWords":"emlib_prs","componentId":"emlib_prs","isConfigurable":false,"documentation":"","description":"Peripheral Reflex System (PRS) Peripheral API\n","instantiable":false,"label":"PRS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_prs","isEditable":false,"isEnabled":true,"name":"emlib_prs","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_prs"},{"keyWords":"emlib_rmu","componentId":"emlib_rmu","isConfigurable":false,"documentation":"","description":"Reset Management Unit (RMU) peripheral API\n","instantiable":false,"label":"RMU","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_rmu","isEditable":false,"isEnabled":true,"name":"emlib_rmu","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_rmu"},{"keyWords":"emlib_se","componentId":"emlib_se","isConfigurable":false,"documentation":"","description":"Secure Element API\n","instantiable":false,"label":"SE","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_se","isEditable":false,"isEnabled":true,"name":"emlib_se","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_se"},{"keyWords":"emlib_smu","componentId":"emlib_smu","isConfigurable":false,"documentation":"","description":"Security Management Unit (SMU) Peripheral API\n","instantiable":false,"label":"SMU","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_smu","isEditable":false,"isEnabled":true,"name":"emlib_smu","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_smu"},{"keyWords":"emlib_syscfg","componentId":"emlib_syscfg","isConfigurable":false,"documentation":"","description":"SYSCFG API\n","instantiable":false,"label":"SYSCFG","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_syscfg","isEditable":false,"isEnabled":true,"name":"emlib_syscfg","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_syscfg"},{"keyWords":"hal_syscfg","componentId":"hal_syscfg","isConfigurable":false,"documentation":"","description":"SYSCFG API\n","instantiable":false,"label":"SYSCFG","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-hal_syscfg","isEditable":false,"isEnabled":true,"name":"hal_syscfg","isSelected":true,"id":"studiocomproot-Platform-Peripheral-hal_syscfg"},{"keyWords":"hal_sysrtc","componentId":"hal_sysrtc","isConfigurable":false,"documentation":"","description":"System Real Time Counter (SYSRTC) peripheral API\n","instantiable":false,"label":"SYSRTC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-hal_sysrtc","isEditable":false,"isEnabled":true,"name":"hal_sysrtc","isSelected":true,"id":"studiocomproot-Platform-Peripheral-hal_sysrtc"},{"keyWords":"emlib_system","componentId":"emlib_system","isConfigurable":false,"documentation":"","description":"System peripheral API\n","instantiable":false,"label":"SYSTEM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_system","isEditable":false,"isEnabled":true,"name":"emlib_system","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_system"},{"keyWords":"hal_system","componentId":"hal_system","isConfigurable":false,"documentation":"","description":"System peripheral API\n","instantiable":false,"label":"SYSTEM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-hal_system","isEditable":false,"isEnabled":true,"name":"hal_system","isSelected":true,"id":"studiocomproot-Platform-Peripheral-hal_system"},{"keyWords":"emlib_timer","componentId":"emlib_timer","isConfigurable":false,"documentation":"","description":"Timer/counter (TIMER) peripheral API\n","instantiable":false,"label":"TIMER","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_timer","isEditable":false,"isEnabled":true,"name":"emlib_timer","isSelected":true,"id":"studiocomproot-Platform-Peripheral-emlib_timer"},{"keyWords":"emlib_usart","componentId":"emlib_usart","isConfigurable":false,"documentation":"","description":"Universal synchronous/asynchronous receiver/transmitter (USART/UART) peripheral API\n","instantiable":false,"label":"USART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_usart","isEditable":false,"isEnabled":true,"name":"emlib_usart","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_usart"},{"keyWords":"emlib_vdac","componentId":"emlib_vdac","isConfigurable":false,"documentation":"","description":"Digital to Analog Converter (VDAC) Peripheral API\n","instantiable":false,"label":"VDAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_vdac","isEditable":false,"isEnabled":true,"name":"emlib_vdac","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_vdac"},{"keyWords":"emlib_wdog","componentId":"emlib_wdog","isConfigurable":false,"documentation":"","description":"Watchdog (WDOG) peripheral API\n","instantiable":false,"label":"WDOG","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Peripheral|studiocomproot-Platform-Peripheral-emlib_wdog","isEditable":false,"isEnabled":true,"name":"emlib_wdog","isSelected":false,"id":"studiocomproot-Platform-Peripheral-emlib_wdog"}],"isEnabled":true,"name":"Peripheral","id":"studiocomproot-Platform-Peripheral","label":"Peripheral","type":"category"},{"children":[{"keyWords":"rail_lib_multiprotocol","componentId":"rail_lib_multiprotocol","isConfigurable":false,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-lib","description":"Multiprotocol RAIL Library Support","instantiable":false,"label":"RAIL Library, Multiprotocol","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_lib_multiprotocol","isEditable":false,"isEnabled":true,"name":"rail_lib_multiprotocol","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_lib_multiprotocol"},{"keyWords":"rail_lib_singleprotocol","componentId":"rail_lib_singleprotocol","isConfigurable":false,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-lib","description":"Single Protocol RAIL Library Support","instantiable":false,"label":"RAIL Library, Single Protocol","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_lib_singleprotocol","isEditable":false,"isEnabled":true,"name":"rail_lib_singleprotocol","isSelected":true,"id":"studiocomproot-Platform-Radio-rail_lib_singleprotocol"},{"keyWords":"rail_util_ant_div_cli","componentId":"rail_util_ant_div_cli","isConfigurable":false,"documentation":"","description":"Antenna Diversity CLI","instantiable":false,"label":"RAIL Utility, Antenna Diversity CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_ant_div_cli","isEditable":false,"isEnabled":true,"name":"rail_util_ant_div_cli","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_ant_div_cli"},{"keyWords":"rail_util_ant_div","componentId":"rail_util_ant_div","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-ant-div","description":"Utility to aid with antenna diversity configuration","instantiable":false,"label":"RAIL Utility, Antenna Diversity Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_ant_div","isEditable":false,"isEnabled":true,"name":"rail_util_ant_div","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_ant_div"},{"keyWords":"rail_util_aox","componentId":"rail_util_aox","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-aox","description":"Utility to aid with Angle of Arrival/Departure (AoX) Configuration","instantiable":false,"label":"RAIL Utility, AoX","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_aox","isEditable":false,"isEnabled":true,"name":"rail_util_aox","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_aox"},{"keyWords":"rail_util_ble_cs","componentId":"rail_util_ble_cs","isConfigurable":false,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-ble-cs","description":"Utility to aid with RAIL BLE Channel Sounding (CS) Support","instantiable":false,"label":"RAIL Utility, BLE Channel Sounding","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_ble_cs","isEditable":false,"isEnabled":true,"name":"rail_util_ble_cs","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_ble_cs"},{"keyWords":"rail_util_coex_ble_cli","componentId":"rail_util_coex_ble_cli","isConfigurable":false,"documentation":"","description":"Bluetooth Coexistence CLI","instantiable":false,"label":"RAIL Utility, Bluetooth Coexistence CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_coex_ble_cli","isEditable":false,"isEnabled":true,"name":"rail_util_coex_ble_cli","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_coex_ble_cli"},{"keyWords":"rail_util_built_in_phys","componentId":"rail_util_built_in_phys","isConfigurable":false,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-built-in-phys","description":"Utility to include built-in PHYs to work with different HFXO frequencies. On EFR32XG24 and EFR32XG26 parts, 38.4 MHz, 39 MHz, and 40 Mhz HFXO support is provided by this component.\n","instantiable":false,"label":"RAIL Utility, Built-in PHYs Across HFXO Frequencies","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_built_in_phys","isEditable":false,"isEnabled":true,"name":"rail_util_built_in_phys","isSelected":true,"id":"studiocomproot-Platform-Radio-rail_util_built_in_phys"},{"keyWords":"rail_util_ble_cs_antenna_offset","componentId":"rail_util_ble_cs_antenna_offset","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-ble-cs-antenna-offset","description":"Utility to aid with setting CS antenna offsets","instantiable":false,"label":"RAIL Utility, CS Antenna Offset","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_ble_cs_antenna_offset","isEditable":false,"isEnabled":true,"name":"rail_util_ble_cs_antenna_offset","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_ble_cs_antenna_offset"},{"keyWords":"rail_util_callbacks","componentId":"rail_util_callbacks","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-callbacks","description":"Utility to aid with RAIL Callback Support","instantiable":false,"label":"RAIL Utility, Callbacks","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_callbacks","isEditable":false,"isEnabled":true,"name":"rail_util_callbacks","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_callbacks"},{"keyWords":"rail_util_coex","componentId":"rail_util_coex","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-coex","description":"Utility to aid with RAIL Coexistence Support","instantiable":false,"label":"RAIL Utility, Coexistence","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_coex","isEditable":false,"isEnabled":true,"name":"rail_util_coex","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_coex"},{"keyWords":"rail_util_coex_cli","componentId":"rail_util_coex_cli","isConfigurable":false,"documentation":"","description":"Coexistence CLI","instantiable":false,"label":"RAIL Utility, Coexistence CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_coex_cli","isEditable":false,"isEnabled":true,"name":"rail_util_coex_cli","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_coex_cli"},{"keyWords":"rail_util_coulomb_counter","componentId":"rail_util_coulomb_counter","isConfigurable":false,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-coulomb-counter","description":"Utility to estimate device energy usage","instantiable":false,"label":"RAIL Utility, Coulomb Counter","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_coulomb_counter","isEditable":false,"isEnabled":true,"name":"rail_util_coulomb_counter","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_coulomb_counter"},{"keyWords":"rail_util_dma","componentId":"rail_util_dma","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-dma","description":"Utility to aid with RAIL Direct Memory Access (DMA) Support","instantiable":false,"label":"RAIL Utility, DMA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_dma","isEditable":false,"isEnabled":true,"name":"rail_util_dma","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_dma"},{"keyWords":"rail_util_eff","componentId":"rail_util_eff","isConfigurable":false,"documentation":"","description":"Utility to provide RAIL with EFF support","instantiable":false,"label":"RAIL Utility, EFF","type":"component","quality":"DEPRECATED","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_eff","isEditable":false,"isEnabled":true,"name":"rail_util_eff","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_eff"},{"keyWords":"rail_util_coex_ieee802154_cli","componentId":"rail_util_coex_ieee802154_cli","isConfigurable":false,"documentation":"","description":"IEEE802.15.4 Coexistence CLI","instantiable":false,"label":"RAIL Utility, IEEE802.15.4 Coexistence CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_coex_ieee802154_cli","isEditable":false,"isEnabled":true,"name":"rail_util_coex_ieee802154_cli","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_coex_ieee802154_cli"},{"keyWords":"rail_util_ieee802154_fast_channel_switching","componentId":"rail_util_ieee802154_fast_channel_switching","isConfigurable":true,"documentation":"","description":"Utility to aid with IEEE802.15.4 Fast Channel Switching Configuration","instantiable":false,"label":"RAIL Utility, IEEE802.15.4 Fast Channel Switching Configuration","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_ieee802154_fast_channel_switching","isEditable":false,"isEnabled":true,"name":"rail_util_ieee802154_fast_channel_switching","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_ieee802154_fast_channel_switching"},{"keyWords":"rail_util_ieee802154_high_speed","componentId":"rail_util_ieee802154_high_speed","isConfigurable":true,"documentation":"","description":"Utility to aid with IEEE802.15.4 High Speed PHY Configuration","instantiable":false,"label":"RAIL Utility, IEEE802.15.4 High Speed PHY Configuration","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_ieee802154_high_speed","isEditable":false,"isEnabled":true,"name":"rail_util_ieee802154_high_speed","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_ieee802154_high_speed"},{"keyWords":"rail_util_init","componentId":"rail_util_init","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-init","description":"Utility to aid with RAIL Initialization Support","instantiable":true,"label":"RAIL Utility, Initialization","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_init","isEditable":false,"isEnabled":true,"name":"rail_util_init","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_init"},{"keyWords":"rail_util_load_devinfo","componentId":"rail_util_load_devinfo","isConfigurable":false,"documentation":"","description":"Utility to aid with copying DEVINFO register values onto RAM","instantiable":false,"label":"RAIL Utility, Load Devinfo","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_load_devinfo","isEditable":false,"isEnabled":true,"name":"rail_util_load_devinfo","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_load_devinfo"},{"keyWords":"rail_util_pa","componentId":"rail_util_pa","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-pa","description":"Utility to aid with RAIL RF Power Amplifier (PA) Support","instantiable":false,"label":"RAIL Utility, PA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_pa","isEditable":true,"isEnabled":true,"name":"rail_util_pa","isSelected":true,"id":"studiocomproot-Platform-Radio-rail_util_pa"},{"keyWords":"rail_util_pti","componentId":"rail_util_pti","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-pti","description":"Utility to aid with RAIL Packet Trace Interface (PTI) Support","instantiable":false,"label":"RAIL Utility, PTI","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_pti","isEditable":true,"isEnabled":true,"name":"rail_util_pti","isSelected":true,"id":"studiocomproot-Platform-Radio-rail_util_pti"},{"keyWords":"rail_util_protocol","componentId":"rail_util_protocol","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-protocol","description":"Utility to aid with Protocol-Specific Configurations","instantiable":false,"label":"RAIL Utility, Protocol","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_protocol","isEditable":false,"isEnabled":true,"name":"rail_util_protocol","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_protocol"},{"keyWords":"rail_util_rf_path","componentId":"rail_util_rf_path","isConfigurable":false,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-rf-path","description":"Utility to aid with RAIL RF Path Support (e.g., device-internal RF path, device-external antenna diversity)","instantiable":false,"label":"RAIL Utility, RF Path","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_rf_path","isEditable":false,"isEnabled":true,"name":"rail_util_rf_path","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_rf_path"},{"keyWords":"rail_util_rf_path_switch","componentId":"rail_util_rf_path_switch","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-rf-path-switch","description":"Utility to aid with RAIL RF Path Switch control.","instantiable":false,"label":"RAIL Utility, RF Path Switch","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_rf_path_switch","isEditable":false,"isEnabled":true,"name":"rail_util_rf_path_switch","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_rf_path_switch"},{"keyWords":"rail_util_rssi","componentId":"rail_util_rssi","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-rssi","description":"Utility to aid with Received Signal Strength Indicator (RSSI) Support","instantiable":false,"label":"RAIL Utility, RSSI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_rssi","isEditable":false,"isEnabled":true,"name":"rail_util_rssi","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_rssi"},{"keyWords":"rail_util_recommended","componentId":"rail_util_recommended","isConfigurable":false,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-recommended","description":"Recommended selection of common RAIL utilities","instantiable":false,"label":"RAIL Utility, Recommended","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_recommended","isEditable":false,"isEnabled":true,"name":"rail_util_recommended","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_recommended"},{"keyWords":"rail_util_sfm_sequencer","componentId":"rail_util_sfm_sequencer","isConfigurable":false,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-sfm-sequencer","description":"Utility to aid with selecting a Software Modem (SFM) sequencer image.","instantiable":false,"label":"RAIL Utility, SFM Sequencer Image Selection","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_sfm_sequencer","isEditable":false,"isEnabled":true,"name":"rail_util_sfm_sequencer","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_sfm_sequencer"},{"keyWords":"rail_util_thermistor","componentId":"rail_util_thermistor","isConfigurable":false,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-util-thermistor","description":"Utility to aid with RAIL thermistor conversions support","instantiable":false,"label":"RAIL Utility, Thermistor Utility","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_util_thermistor","isEditable":false,"isEnabled":true,"name":"rail_util_thermistor","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_util_thermistor"},{"keyWords":"rail_test_core","componentId":"rail_test_core","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-test-core","description":"RAILtest Application Core Support","instantiable":false,"label":"RAILtest Application, Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_test_core","isEditable":false,"isEnabled":true,"name":"rail_test_core","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_test_core"},{"keyWords":"rail_test_graphics","componentId":"rail_test_graphics","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/rail-test-graphics","description":"RAILtest Application WSTK Graphics Support","instantiable":false,"label":"RAILtest Application, Graphics","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-rail_test_graphics","isEditable":false,"isEnabled":true,"name":"rail_test_graphics","isSelected":false,"id":"studiocomproot-Platform-Radio-rail_test_graphics"},{"keyWords":"fem_util","componentId":"fem_util","isConfigurable":true,"documentation":"http://docs.silabs.com/rail/2.18.0/rail-api/fem-util","description":"Utility to aid with Device-external Front End Module (FEM) Support","instantiable":false,"label":"Radio Utility, FEM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-fem_util","isEditable":false,"isEnabled":true,"name":"fem_util","isSelected":false,"id":"studiocomproot-Platform-Radio-fem_util"},{"keyWords":"zigbee_ant_div_cli","componentId":"zigbee_ant_div_cli","isConfigurable":false,"documentation":"","description":"Zigbee antenna diversity CLI","instantiable":false,"label":"Zigbee Utility, Antenna Diversity CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-zigbee_ant_div_cli","isEditable":false,"isEnabled":true,"name":"zigbee_ant_div_cli","isSelected":false,"id":"studiocomproot-Platform-Radio-zigbee_ant_div_cli"},{"keyWords":"zigbee_coex_cli","componentId":"zigbee_coex_cli","isConfigurable":false,"documentation":"","description":"Zigbee Coexistence CLI","instantiable":false,"label":"Zigbee Utility, Coexistence CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-zigbee_coex_cli","isEditable":false,"isEnabled":true,"name":"zigbee_coex_cli","isSelected":false,"id":"studiocomproot-Platform-Radio-zigbee_coex_cli"},{"keyWords":"zigbee_phy_select_cli","componentId":"zigbee_phy_select_cli","isConfigurable":false,"documentation":"","description":"Zigbee PHY select CLI","instantiable":false,"label":"Zigbee Utility, PHY Select CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio|studiocomproot-Platform-Radio-zigbee_phy_select_cli","isEditable":false,"isEnabled":true,"name":"zigbee_phy_select_cli","isSelected":false,"id":"studiocomproot-Platform-Radio-zigbee_phy_select_cli"}],"isEnabled":true,"name":"Radio","id":"studiocomproot-Platform-Radio","label":"Radio","type":"category"},{"children":[{"keyWords":"restrictions_profile_all","componentId":"restrictions_profile_all","isConfigurable":false,"documentation":"","description":"Limits the radio configurator to help compatibility with the example application. Removing it unlocks the disabled radio configurator profiles, but might result the application not able to send or receive messages over the radio.","instantiable":false,"label":"Restrictions - All Profile","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Radio_Configuration|studiocomproot-Platform-Radio_Configuration-restrictions_profile_all","isEditable":false,"isEnabled":true,"name":"restrictions_profile_all","isSelected":false,"id":"studiocomproot-Platform-Radio_Configuration-restrictions_profile_all"}],"isEnabled":true,"name":"Radio Configuration","id":"studiocomproot-Platform-Radio_Configuration","label":"Radio Configuration","type":"category"},{"children":[{"children":[{"children":[{"keyWords":"mbedtls_ccm","componentId":"mbedtls_ccm","isConfigurable":false,"documentation":"","description":"This component provides support for authenticated encryption and decryption in CCM mode for block ciphers using Mbed TLS.","instantiable":false,"label":"CCM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption|studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption-mbedtls_ccm","isEditable":false,"isEnabled":true,"name":"mbedtls_ccm","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption-mbedtls_ccm"},{"keyWords":"mbedtls_chachapoly","componentId":"mbedtls_chachapoly","isConfigurable":false,"documentation":"","description":"This component provides support for authenticated encryption and decryption with ChaChaPoly using Mbed TLS. This component also provides support for the ChaCha20 stream cipher and Poly1305 message authentication codes.","instantiable":false,"label":"ChaChaPoly","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption|studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption-mbedtls_chachapoly","isEditable":false,"isEnabled":true,"name":"mbedtls_chachapoly","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption-mbedtls_chachapoly"},{"keyWords":"mbedtls_gcm","componentId":"mbedtls_gcm","isConfigurable":false,"documentation":"http://docs.silabs.com/mbed-tls/3.5.0/group-sl-crypto-gcm","description":"This component provides support for authenticated encryption and decryption in GCM mode for block ciphers using Mbed TLS.","instantiable":false,"label":"GCM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption|studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption-mbedtls_gcm","isEditable":false,"isEnabled":true,"name":"mbedtls_gcm","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption-mbedtls_gcm"},{"keyWords":"mbedtls_nist_kw","componentId":"mbedtls_nist_kw","isConfigurable":false,"documentation":"","description":"This component enables the implementation of NIST's KW and KWP modes of operation for deterministic authenticated encryption using AES.","instantiable":false,"label":"NIST AES Key Wrap","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption|studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption-mbedtls_nist_kw","isEditable":false,"isEnabled":true,"name":"mbedtls_nist_kw","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption-mbedtls_nist_kw"}],"isEnabled":true,"name":"Authenticated Encryption","id":"studiocomproot-Platform-Security-Mbed_TLS-Authenticated_Encryption","label":"Authenticated Encryption","type":"category"},{"children":[{"keyWords":"mbedtls_ecc_curve25519","componentId":"mbedtls_ecc_curve25519","isConfigurable":false,"documentation":"","description":"This component enables support for usage of the Curve25519 elliptic curve with Mbed TLS.","instantiable":false,"label":"Curve25519","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_curve25519","isEditable":false,"isEnabled":true,"name":"mbedtls_ecc_curve25519","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_curve25519"},{"keyWords":"mbedtls_ecc_curve448","componentId":"mbedtls_ecc_curve448","isConfigurable":false,"documentation":"","description":"This component enables support for usage of the Curve448 elliptic curve with Mbed TLS.","instantiable":false,"label":"Curve448","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_curve448","isEditable":false,"isEnabled":true,"name":"mbedtls_ecc_curve448","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_curve448"},{"keyWords":"mbedtls_ecc_secp192r1","componentId":"mbedtls_ecc_secp192r1","isConfigurable":false,"documentation":"","description":"This component adds support for the secp192r1 elliptic curve, a 192-bit prime field Weierstrass curve, in Mbed TLS.","instantiable":false,"label":"secp192r1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_secp192r1","isEditable":false,"isEnabled":true,"name":"mbedtls_ecc_secp192r1","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_secp192r1"},{"keyWords":"mbedtls_ecc_secp224r1","componentId":"mbedtls_ecc_secp224r1","isConfigurable":false,"documentation":"","description":"This component adds support for the secp224r1 elliptic curve, a 224-bit prime field Weierstrass curve, in Mbed TLS.","instantiable":false,"label":"secp224r1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_secp224r1","isEditable":false,"isEnabled":true,"name":"mbedtls_ecc_secp224r1","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_secp224r1"},{"keyWords":"mbedtls_ecc_secp256r1","componentId":"mbedtls_ecc_secp256r1","isConfigurable":false,"documentation":"","description":"This component adds support for the secp256r1 elliptic curve, a 256-bit prime field Weierstrass curve, in Mbed TLS.","instantiable":false,"label":"secp256r1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_secp256r1","isEditable":false,"isEnabled":true,"name":"mbedtls_ecc_secp256r1","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_secp256r1"},{"keyWords":"mbedtls_ecc_secp384r1","componentId":"mbedtls_ecc_secp384r1","isConfigurable":false,"documentation":"","description":"This component adds support for the secp384r1 elliptic curve, a 384-bit prime field Weierstrass curve, in Mbed TLS.","instantiable":false,"label":"secp384r1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_secp384r1","isEditable":false,"isEnabled":true,"name":"mbedtls_ecc_secp384r1","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_secp384r1"},{"keyWords":"mbedtls_ecc_secp521r1","componentId":"mbedtls_ecc_secp521r1","isConfigurable":false,"documentation":"","description":"This component adds support for the secp521r1 elliptic curve, a 521-bit prime field Weierstrass curve, in Mbed TLS.","instantiable":false,"label":"secp521r1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves|studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_secp521r1","isEditable":false,"isEnabled":true,"name":"mbedtls_ecc_secp521r1","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves-mbedtls_ecc_secp521r1"}],"isEnabled":true,"name":"Elliptic Curves","id":"studiocomproot-Platform-Security-Mbed_TLS-Elliptic_Curves","label":"Elliptic Curves","type":"category"},{"children":[{"keyWords":"mbedtls_aes","componentId":"mbedtls_aes","isConfigurable":false,"documentation":"","description":"This component provides support for the AES block cipher using Mbed TLS.","instantiable":false,"label":"AES Block Cipher","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Encryption|studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_aes","isEditable":false,"isEnabled":true,"name":"mbedtls_aes","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_aes"},{"keyWords":"mbedtls_cipher_cbc","componentId":"mbedtls_cipher_cbc","isConfigurable":false,"documentation":"","description":"This component provides support for CBC cipher modes in mbed TLS.","instantiable":false,"label":"CBC Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Encryption|studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_cbc","isEditable":false,"isEnabled":true,"name":"mbedtls_cipher_cbc","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_cbc"},{"keyWords":"mbedtls_cipher_cfb","componentId":"mbedtls_cipher_cfb","isConfigurable":false,"documentation":"","description":"This component provides support for CFB cipher modes in mbed TLS.","instantiable":false,"label":"CFB Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Encryption|studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_cfb","isEditable":false,"isEnabled":true,"name":"mbedtls_cipher_cfb","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_cfb"},{"keyWords":"mbedtls_cipher_ctr","componentId":"mbedtls_cipher_ctr","isConfigurable":false,"documentation":"","description":"This component provides support for CTR cipher modes in mbed TLS.","instantiable":false,"label":"CTR Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Encryption|studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_ctr","isEditable":false,"isEnabled":true,"name":"mbedtls_cipher_ctr","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_ctr"},{"keyWords":"mbedtls_cipher_ofb","componentId":"mbedtls_cipher_ofb","isConfigurable":false,"documentation":"","description":"This component provides support for OFB cipher modes in mbed TLS.","instantiable":false,"label":"OFB Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Encryption|studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_ofb","isEditable":false,"isEnabled":true,"name":"mbedtls_cipher_ofb","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_ofb"},{"keyWords":"mbedtls_cipher_padding_pkcs7","componentId":"mbedtls_cipher_padding_pkcs7","isConfigurable":false,"documentation":"","description":"This component provides support for PKCS#7 padding for cipher modes. Currently only CBC is supported.","instantiable":false,"label":"PKCS#7 Padding","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Encryption|studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_padding_pkcs7","isEditable":false,"isEnabled":true,"name":"mbedtls_cipher_padding_pkcs7","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_padding_pkcs7"},{"keyWords":"mbedtls_cipher_xts","componentId":"mbedtls_cipher_xts","isConfigurable":false,"documentation":"","description":"This component provides support for XTS cipher modes in mbed TLS.","instantiable":false,"label":"XTS Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Encryption|studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_xts","isEditable":false,"isEnabled":true,"name":"mbedtls_cipher_xts","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Encryption-mbedtls_cipher_xts"}],"isEnabled":true,"name":"Encryption","id":"studiocomproot-Platform-Security-Mbed_TLS-Encryption","label":"Encryption","type":"category"},{"children":[{"keyWords":"mbedtls_md5","componentId":"mbedtls_md5","isConfigurable":false,"documentation":"","description":"This component provides support for the MD5 hash function using Mbed TLS.","instantiable":false,"label":"MD5","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Hashing|studiocomproot-Platform-Security-Mbed_TLS-Hashing-mbedtls_md5","isEditable":false,"isEnabled":true,"name":"mbedtls_md5","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Hashing-mbedtls_md5"},{"keyWords":"mbedtls_sha1","componentId":"mbedtls_sha1","isConfigurable":false,"documentation":"","description":"This component provides support for the SHA-1 hash function using Mbed TLS.","instantiable":false,"label":"SHA-1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Hashing|studiocomproot-Platform-Security-Mbed_TLS-Hashing-mbedtls_sha1","isEditable":false,"isEnabled":true,"name":"mbedtls_sha1","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Hashing-mbedtls_sha1"},{"keyWords":"mbedtls_sha256","componentId":"mbedtls_sha256","isConfigurable":false,"documentation":"","description":"This component provides support for SHA-224 and SHA-256 hash functions using Mbed TLS.","instantiable":false,"label":"SHA-224 and SHA-256","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Hashing|studiocomproot-Platform-Security-Mbed_TLS-Hashing-mbedtls_sha256","isEditable":false,"isEnabled":true,"name":"mbedtls_sha256","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Hashing-mbedtls_sha256"},{"keyWords":"mbedtls_sha512","componentId":"mbedtls_sha512","isConfigurable":false,"documentation":"","description":"This component provides support for SHA-384 and SHA-512 hash functions using Mbed TLS.","instantiable":false,"label":"SHA-384 and SHA-512","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Hashing|studiocomproot-Platform-Security-Mbed_TLS-Hashing-mbedtls_sha512","isEditable":false,"isEnabled":true,"name":"mbedtls_sha512","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Hashing-mbedtls_sha512"}],"isEnabled":true,"name":"Hashing","id":"studiocomproot-Platform-Security-Mbed_TLS-Hashing","label":"Hashing","type":"category"},{"children":[{"keyWords":"mbedtls_hkdf","componentId":"mbedtls_hkdf","isConfigurable":false,"documentation":"","description":"This component provides support for key derivation using HKDF in Mbed TLS.","instantiable":false,"label":"HKDF","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Key_Derivation|studiocomproot-Platform-Security-Mbed_TLS-Key_Derivation-mbedtls_hkdf","isEditable":false,"isEnabled":true,"name":"mbedtls_hkdf","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Key_Derivation-mbedtls_hkdf"}],"isEnabled":true,"name":"Key Derivation","id":"studiocomproot-Platform-Security-Mbed_TLS-Key_Derivation","label":"Key Derivation","type":"category"},{"children":[{"keyWords":"mbedtls_ecdh","componentId":"mbedtls_ecdh","isConfigurable":false,"documentation":"","description":"This component provides support for key agreement with the ECDH protocol using Mbed TLS.","instantiable":false,"label":"ECDH","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Key_Exchange|studiocomproot-Platform-Security-Mbed_TLS-Key_Exchange-mbedtls_ecdh","isEditable":false,"isEnabled":true,"name":"mbedtls_ecdh","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Key_Exchange-mbedtls_ecdh"},{"keyWords":"mbedtls_jpake","componentId":"mbedtls_jpake","isConfigurable":false,"documentation":"","description":"This component provides support for Elliptic Curve (EC) J-PAKE using Mbed TLS.","instantiable":false,"label":"J-PAKE over Elliptic Curves","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Key_Exchange|studiocomproot-Platform-Security-Mbed_TLS-Key_Exchange-mbedtls_jpake","isEditable":false,"isEnabled":true,"name":"mbedtls_jpake","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Key_Exchange-mbedtls_jpake"}],"isEnabled":true,"name":"Key Exchange","id":"studiocomproot-Platform-Security-Mbed_TLS-Key_Exchange","label":"Key Exchange","type":"category"},{"children":[{"keyWords":"mbedtls_cmac","componentId":"mbedtls_cmac","isConfigurable":false,"documentation":"","description":"This component provides support for message authentication with the CMAC algorithm using Mbed TLS.","instantiable":false,"label":"CMAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Message_Authentication_Codes|studiocomproot-Platform-Security-Mbed_TLS-Message_Authentication_Codes-mbedtls_cmac","isEditable":false,"isEnabled":true,"name":"mbedtls_cmac","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Message_Authentication_Codes-mbedtls_cmac"},{"keyWords":"mbedtls_hmac","componentId":"mbedtls_hmac","isConfigurable":false,"documentation":"","description":"This component provides support for message authentication with the HMAC algorithm using Mbed TLS.","instantiable":false,"label":"HMAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Message_Authentication_Codes|studiocomproot-Platform-Security-Mbed_TLS-Message_Authentication_Codes-mbedtls_hmac","isEditable":false,"isEnabled":true,"name":"mbedtls_hmac","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Message_Authentication_Codes-mbedtls_hmac"}],"isEnabled":true,"name":"Message Authentication Codes","id":"studiocomproot-Platform-Security-Mbed_TLS-Message_Authentication_Codes","label":"Message Authentication Codes","type":"category"},{"children":[{"keyWords":"mbedtls_pkcs12","componentId":"mbedtls_pkcs12","isConfigurable":false,"documentation":"","description":"This component enables the implementation of Password-Based Encryption (PBE) and derivation algorithms from RSA Labratories' PKCS #12 specification.","instantiable":false,"label":"PKCS#12","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Password-Based_Cryptography|studiocomproot-Platform-Security-Mbed_TLS-Password-Based_Cryptography-mbedtls_pkcs12","isEditable":false,"isEnabled":true,"name":"mbedtls_pkcs12","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Password-Based_Cryptography-mbedtls_pkcs12"},{"keyWords":"mbedtls_pkcs5","componentId":"mbedtls_pkcs5","isConfigurable":false,"documentation":"","description":"This component enables the implementation of PBES2- and PBKDF2 algorithms from RSA Labratories' PKCS #5 specification.","instantiable":false,"label":"PKCS#5","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Password-Based_Cryptography|studiocomproot-Platform-Security-Mbed_TLS-Password-Based_Cryptography-mbedtls_pkcs5","isEditable":false,"isEnabled":true,"name":"mbedtls_pkcs5","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Password-Based_Cryptography-mbedtls_pkcs5"}],"isEnabled":true,"name":"Password-Based Cryptography","id":"studiocomproot-Platform-Security-Mbed_TLS-Password-Based_Cryptography","label":"Password-Based Cryptography","type":"category"},{"children":[{"keyWords":"mbedtls_pkcs1_v15","componentId":"mbedtls_pkcs1_v15","isConfigurable":false,"documentation":"","description":"This component adds support for the RSA-OAEP and RSA-PSS schemes as specified in RSA Labratories' PKCS #1 specification v1.5.","instantiable":false,"label":"PKCS#1 v1.5","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-RSA|studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_pkcs1_v15","isEditable":false,"isEnabled":true,"name":"mbedtls_pkcs1_v15","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_pkcs1_v15"},{"keyWords":"mbedtls_pkcs1_v21","componentId":"mbedtls_pkcs1_v21","isConfigurable":false,"documentation":"","description":"This component adds support for the RSA-OAEP and RSA-PSS schemes as specified in RSA Labratories' PKCS #1 specification v2.1.","instantiable":false,"label":"PKCS#1 v2.1","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-RSA|studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_pkcs1_v21","isEditable":false,"isEnabled":true,"name":"mbedtls_pkcs1_v21","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_pkcs1_v21"},{"keyWords":"mbedtls_rsa_1024","componentId":"mbedtls_rsa_1024","isConfigurable":false,"documentation":"","description":"This component adds support for 1024-bit RSA operations.","instantiable":false,"label":"RSA-1024","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-RSA|studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_rsa_1024","isEditable":false,"isEnabled":true,"name":"mbedtls_rsa_1024","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_rsa_1024"},{"keyWords":"mbedtls_rsa_2048","componentId":"mbedtls_rsa_2048","isConfigurable":false,"documentation":"","description":"This component adds support for 2048-bit RSA operations.","instantiable":false,"label":"RSA-2048","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-RSA|studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_rsa_2048","isEditable":false,"isEnabled":true,"name":"mbedtls_rsa_2048","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_rsa_2048"},{"keyWords":"mbedtls_rsa_4096","componentId":"mbedtls_rsa_4096","isConfigurable":false,"documentation":"","description":"This component adds support for 4096-bit RSA operations.","instantiable":false,"label":"RSA-4096","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-RSA|studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_rsa_4096","isEditable":false,"isEnabled":true,"name":"mbedtls_rsa_4096","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_rsa_4096"},{"keyWords":"mbedtls_rsa_8192","componentId":"mbedtls_rsa_8192","isConfigurable":false,"documentation":"","description":"This component adds support for 8192-bit RSA operations.","instantiable":false,"label":"RSA-8192","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-RSA|studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_rsa_8192","isEditable":false,"isEnabled":true,"name":"mbedtls_rsa_8192","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-RSA-mbedtls_rsa_8192"}],"isEnabled":true,"name":"RSA","id":"studiocomproot-Platform-Security-Mbed_TLS-RSA","label":"RSA","type":"category"},{"children":[{"keyWords":"mbedtls_random","componentId":"mbedtls_random","isConfigurable":false,"documentation":"","description":"This component provides support for pseudo-random number generation using the CTR-DRBG construction in Mbed TLS.","instantiable":false,"label":"CTR-DRBG","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Randomness|studiocomproot-Platform-Security-Mbed_TLS-Randomness-mbedtls_random","isEditable":false,"isEnabled":true,"name":"mbedtls_random","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Randomness-mbedtls_random"},{"keyWords":"mbedtls_entropy_default","componentId":"mbedtls_entropy_default","isConfigurable":false,"documentation":"http://docs.silabs.com/mbed-tls/3.5.0/group-rng-module","description":"This component can be used in order to make sure that a suitable component for an entropy source is included in the project. Depending on the device's capabilities, this can be either a hardware (TRNG, Radio or ADC) source, or a device-unique seed in non-volatile storage.","instantiable":false,"label":"Default Entropy Source","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Randomness|studiocomproot-Platform-Security-Mbed_TLS-Randomness-mbedtls_entropy_default","isEditable":false,"isEnabled":true,"name":"mbedtls_entropy_default","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Randomness-mbedtls_entropy_default"},{"keyWords":"mbedtls_entropy_nvseed","componentId":"mbedtls_entropy_nvseed","isConfigurable":false,"documentation":"","description":"This component provides support for using entropy gathered from a device-unique seed.","instantiable":false,"label":"Device-Unique Seed Entropy Source","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Randomness|studiocomproot-Platform-Security-Mbed_TLS-Randomness-mbedtls_entropy_nvseed","isEditable":false,"isEnabled":true,"name":"mbedtls_entropy_nvseed","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Randomness-mbedtls_entropy_nvseed"},{"keyWords":"mbedtls_entropy_hardware","componentId":"mbedtls_entropy_hardware","isConfigurable":false,"documentation":"","description":"This component provides support for using entropy gathered from a strict hardware entropy source (TRNG, radio or ADC) on Silicon Labs devices.","instantiable":false,"label":"Hardware Entropy Source","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Randomness|studiocomproot-Platform-Security-Mbed_TLS-Randomness-mbedtls_entropy_hardware","isEditable":false,"isEnabled":true,"name":"mbedtls_entropy_hardware","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Randomness-mbedtls_entropy_hardware"}],"isEnabled":true,"name":"Randomness","id":"studiocomproot-Platform-Security-Mbed_TLS-Randomness","label":"Randomness","type":"category"},{"children":[{"keyWords":"mbedtls_ecdsa","componentId":"mbedtls_ecdsa","isConfigurable":false,"documentation":"","description":"This component provides support for signature generation and verification with ECDSA using Mbed TLS.","instantiable":false,"label":"ECDSA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Signatures|studiocomproot-Platform-Security-Mbed_TLS-Signatures-mbedtls_ecdsa","isEditable":false,"isEnabled":true,"name":"mbedtls_ecdsa","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Signatures-mbedtls_ecdsa"},{"keyWords":"mbedtls_ecdsa_deterministic","componentId":"mbedtls_ecdsa_deterministic","isConfigurable":false,"documentation":"","description":"This component provides support for signature generation with deterministic ECDSA (RFC-6979) using Mbed TLS.\n\nWARNING: \n Adding support for deterministic ECDSA through Mbed TLS will preclude regular ECDSA operations using the Mbed TLS API from being accelerated on Series-2 devices. ECDSA operations on those devices using the corresponding PSA API are unaffected. \n\nNOTE: \n The PSA Crypto component for Deterministic ECDSA (psa_crypto_ecdsa_deterministic.slcc) is recommended over Legacy Deterministic ECDSA (mbedtls_ecdsa_deterministic.slcc) in Mbed TLS for future support since the legacy low level crypto APIs of Mbed TLS is planned to be removed from Mbed TLS 4.0 APIs.","instantiable":false,"label":"Legacy Deterministic ECDSA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Signatures|studiocomproot-Platform-Security-Mbed_TLS-Signatures-mbedtls_ecdsa_deterministic","isEditable":false,"isEnabled":true,"name":"mbedtls_ecdsa_deterministic","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Signatures-mbedtls_ecdsa_deterministic"}],"isEnabled":true,"name":"Signatures","id":"studiocomproot-Platform-Security-Mbed_TLS-Signatures","label":"Signatures","type":"category"},{"children":[{"keyWords":"mbedtls_asn1","componentId":"mbedtls_asn1","isConfigurable":false,"documentation":"","description":"This component provides support for ASN.1 parsing and writing using Mbed TLS.","instantiable":false,"label":"ASN.1 Parsing","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_asn1","isEditable":false,"isEnabled":true,"name":"mbedtls_asn1","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_asn1"},{"keyWords":"mbedtls_base64","componentId":"mbedtls_base64","isConfigurable":false,"documentation":"","description":"This component provides support for Base64 encoding and decoding using Mbed TLS.","instantiable":false,"label":"Base64 Encoding and Decoding","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_base64","isEditable":false,"isEnabled":true,"name":"mbedtls_base64","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_base64"},{"keyWords":"mbedtls_dtls","componentId":"mbedtls_dtls","isConfigurable":false,"documentation":"","description":"This component provides support for the DTLS protocol using Mbed TLS.","instantiable":false,"label":"DTLS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_dtls","isEditable":false,"isEnabled":true,"name":"mbedtls_dtls","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_dtls"},{"keyWords":"mbedtls_ecdhe_key_exchange","componentId":"mbedtls_ecdhe_key_exchange","isConfigurable":false,"documentation":"","description":"This component provides support for key exchange mechanisms in Mbed TLS' TLS implementation based on ephemeral ECDH keys. It will turn on all ECDHE key exchange methods available with the currently configured components. If a smaller selection of key exchange mechanisms is preferable, then please do not enable this component, but rather set the relevant 'SL_MBEDTLS_KEY_EXCHANGE_xxx' configuration options manually.","instantiable":false,"label":"ECDHE-Based Key Exchange","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_ecdhe_key_exchange","isEditable":false,"isEnabled":true,"name":"mbedtls_ecdhe_key_exchange","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_ecdhe_key_exchange"},{"keyWords":"mbedtls_pem","componentId":"mbedtls_pem","isConfigurable":false,"documentation":"","description":"This component provides support for reading PEM formatted keys and certificates in Mbed TLS.","instantiable":false,"label":"PEM Parsing","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_pem","isEditable":false,"isEnabled":true,"name":"mbedtls_pem","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_pem"},{"keyWords":"mbedtls_pki","componentId":"mbedtls_pki","isConfigurable":false,"documentation":"","description":"This component provides support for the Public Key (PK) abstraction layer in Mbed TLS. This layer provides indirect support for public-key encryption/decryption as well signature generation/verification.","instantiable":false,"label":"Public-Key Abstraction Layer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_pki","isEditable":false,"isEnabled":true,"name":"mbedtls_pki","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_pki"},{"keyWords":"mbedtls_tls","componentId":"mbedtls_tls","isConfigurable":false,"documentation":"http://docs.silabs.com/mbed-tls/3.5.0/group-ssltls-communication-module","description":"This component provides support for using TLS (as a client) in Mbed TLS.","instantiable":false,"label":"TLS Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_tls","isEditable":false,"isEnabled":true,"name":"mbedtls_tls","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_tls"},{"keyWords":"mbedtls_tls_server","componentId":"mbedtls_tls_server","isConfigurable":false,"documentation":"","description":"This component provides support for using TLS (as a server) in Mbed TLS.","instantiable":false,"label":"TLS Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_tls_server","isEditable":false,"isEnabled":true,"name":"mbedtls_tls_server","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_tls_server"},{"keyWords":"mbedtls_x509","componentId":"mbedtls_x509","isConfigurable":false,"documentation":"","description":"This component provides full support for handling X.509 standard- based certificates in Mbed TLS.","instantiable":false,"label":"X.509","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer|studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_x509","isEditable":false,"isEnabled":true,"name":"mbedtls_x509","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer-mbedtls_x509"}],"isEnabled":true,"name":"Upper Layer","id":"studiocomproot-Platform-Security-Mbed_TLS-Upper_Layer","label":"Upper Layer","type":"category"},{"children":[{"keyWords":"mbedtls_debug","componentId":"mbedtls_debug","isConfigurable":false,"documentation":"","description":"This component provides support for the debug APIs in Mbed TLS, provided by the debug.h file.\n","instantiable":false,"label":"Debug Helpers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Utilities|studiocomproot-Platform-Security-Mbed_TLS-Utilities-mbedtls_debug","isEditable":false,"isEnabled":true,"name":"mbedtls_debug","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Utilities-mbedtls_debug"},{"keyWords":"mbedtls_error","componentId":"mbedtls_error","isConfigurable":false,"documentation":"","description":"This component provides support for the error APIs in Mbed TLS, provided by the error.h file.","instantiable":false,"label":"Error Helpers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Utilities|studiocomproot-Platform-Security-Mbed_TLS-Utilities-mbedtls_error","isEditable":false,"isEnabled":true,"name":"mbedtls_error","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Utilities-mbedtls_error"},{"keyWords":"mbedtls_mpi","componentId":"mbedtls_mpi","isConfigurable":false,"documentation":"","description":"This component enables the Mbed TLS multi-precision integer (MPI) library.","instantiable":false,"label":"Multi-Precision Integers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Utilities|studiocomproot-Platform-Security-Mbed_TLS-Utilities-mbedtls_mpi","isEditable":false,"isEnabled":true,"name":"mbedtls_mpi","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Utilities-mbedtls_mpi"},{"keyWords":"mbedtls_version","componentId":"mbedtls_version","isConfigurable":false,"documentation":"","description":"This component enables the Mbed TLS run-time version information API functions.","instantiable":false,"label":"Version Helpers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-Utilities|studiocomproot-Platform-Security-Mbed_TLS-Utilities-mbedtls_version","isEditable":false,"isEnabled":true,"name":"mbedtls_version","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-Utilities-mbedtls_version"}],"isEnabled":true,"name":"Utilities","id":"studiocomproot-Platform-Security-Mbed_TLS-Utilities","label":"Utilities","type":"category"},{"keyWords":"mbedtls_config","componentId":"mbedtls_config","isConfigurable":true,"documentation":"","description":"This component includes the Mbed TLS configuration.","instantiable":false,"label":"Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-mbedtls_config","isEditable":true,"isEnabled":true,"name":"mbedtls_config","isSelected":true,"id":"studiocomproot-Platform-Security-Mbed_TLS-mbedtls_config"},{"keyWords":"mbedtls_core","componentId":"mbedtls_core","isConfigurable":false,"documentation":"","description":"This component contains the core files needed for any project using Mbed TLS, as well as common header and source files.\n\nAlgorithms need to be enabled in order to be supported. This is done by including the components corresponding to the wanted primitives, key types, functionality, etc. that live in the different 'Platform|Security|Mbed TLS' subcategories.\n\nBased on the selected sub-components, the Mbed TLS configuration file will be auto-generated and included where necessary.","instantiable":false,"label":"Mbed TLS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-mbedtls_core","isEditable":false,"isEnabled":true,"name":"mbedtls_core","isSelected":true,"id":"studiocomproot-Platform-Security-Mbed_TLS-mbedtls_core"},{"keyWords":"mbedtls_platform_dynamic_memory_allocation_config_init_runtime","componentId":"mbedtls_platform_dynamic_memory_allocation_config_init_runtime","isConfigurable":false,"documentation":"","description":"This component allows for runtime initialisation of the dynamic memory allocation functions for Mbed TLS.","instantiable":false,"label":"Runtime initialisation of dynamic memory allocation functions for Mbed TLS.","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Mbed_TLS|studiocomproot-Platform-Security-Mbed_TLS-mbedtls_platform_dynamic_memory_allocation_config_init_runtime","isEditable":false,"isEnabled":true,"name":"mbedtls_platform_dynamic_memory_allocation_config_init_runtime","isSelected":false,"id":"studiocomproot-Platform-Security-Mbed_TLS-mbedtls_platform_dynamic_memory_allocation_config_init_runtime"}],"isEnabled":true,"name":"Mbed TLS","id":"studiocomproot-Platform-Security-Mbed_TLS","label":"Mbed TLS","type":"category"},{"children":[{"keyWords":"mpu","componentId":"mpu","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/mpu","description":"Instantiate the simple driver that configures the Memory Protection Unit (MPU) to detect code injection attacks by making the RAM non-executable.\n","instantiable":false,"label":"Simple MPU","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Memory_Protection_Unit|studiocomproot-Platform-Security-Memory_Protection_Unit-mpu","isEditable":false,"isEnabled":true,"name":"mpu","isSelected":true,"id":"studiocomproot-Platform-Security-Memory_Protection_Unit-mpu"}],"isEnabled":true,"name":"Memory Protection Unit","id":"studiocomproot-Platform-Security-Memory_Protection_Unit","label":"Memory Protection Unit","type":"category"},{"children":[{"children":[{"keyWords":"psa_crypto_rsa_crypt_legacy","componentId":"psa_crypto_rsa_crypt_legacy","isConfigurable":false,"documentation":"","description":"This component adds support for asymmetric encryption using the legacy RSA scheme as specified in RSA Labratories' PKCS #1 specification v1.5. If possible, it's recommended to use PSA-OAEP.","instantiable":false,"label":"Legacy RSA Encryption","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Asymmetric_Encryption|studiocomproot-Platform-Security-PSA_Crypto-Asymmetric_Encryption-psa_crypto_rsa_crypt_legacy","isEditable":false,"isEnabled":true,"name":"psa_crypto_rsa_crypt_legacy","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Asymmetric_Encryption-psa_crypto_rsa_crypt_legacy"},{"keyWords":"psa_crypto_rsa_crypt_oaep","componentId":"psa_crypto_rsa_crypt_oaep","isConfigurable":false,"documentation":"","description":"This component adds support for asymmetric encryption using the RSA-OAEP scheme as specified in RSA Labratories' PKCS #1 specification v2.1.","instantiable":false,"label":"RSA-OAEP","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Asymmetric_Encryption|studiocomproot-Platform-Security-PSA_Crypto-Asymmetric_Encryption-psa_crypto_rsa_crypt_oaep","isEditable":false,"isEnabled":true,"name":"psa_crypto_rsa_crypt_oaep","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Asymmetric_Encryption-psa_crypto_rsa_crypt_oaep"}],"isEnabled":true,"name":"Asymmetric Encryption","id":"studiocomproot-Platform-Security-PSA_Crypto-Asymmetric_Encryption","label":"Asymmetric Encryption","type":"category"},{"children":[{"keyWords":"psa_crypto_ccm","componentId":"psa_crypto_ccm","isConfigurable":false,"documentation":"","description":"This component provides support for the CCM authenticated encryption algorithm in PSA Crypto.","instantiable":false,"label":"CCM Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption|studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption-psa_crypto_ccm","isEditable":false,"isEnabled":true,"name":"psa_crypto_ccm","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption-psa_crypto_ccm"},{"keyWords":"psa_crypto_chachapoly","componentId":"psa_crypto_chachapoly","isConfigurable":false,"documentation":"","description":"This component provides support for authenticated encryption and decryption with ChaChaPoly in the PSA Crypto AEAD APIs.\n\nNOTE: There exists a special case which Silicon Labs' crypto acceleration driver cannot handle: that is the case where both the message- and additional authenticated data lengths are equal to zero. If the user needs zero data length, they will need to include the 'ChaChaPoly' component under the Platform|Security|Mbed TLS|Authenticated Encryption category in order to include fallback to the software implementation in the Mbed TLS library.","instantiable":false,"label":"ChachaPoly","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption|studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption-psa_crypto_chachapoly","isEditable":false,"isEnabled":true,"name":"psa_crypto_chachapoly","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption-psa_crypto_chachapoly"},{"keyWords":"psa_crypto_gcm","componentId":"psa_crypto_gcm","isConfigurable":false,"documentation":"","description":"This component provides support for the GCM authenticated encryption algorithm in PSA Crypto.\n\nNote: Silicon Labs' hardware can only handle IV's of the recommended length equal to 12 bytes. If support for other lengths is required, use the 'GCM with Non-Recommended IV Lengths' component.","instantiable":false,"label":"GCM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption|studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption-psa_crypto_gcm","isEditable":false,"isEnabled":true,"name":"psa_crypto_gcm","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption-psa_crypto_gcm"},{"keyWords":"psa_crypto_gcm_full","componentId":"psa_crypto_gcm_full","isConfigurable":false,"documentation":"","description":"This component extends the hardware implementations of AES-GCM with the software capability to accept IV input which is larger or smaller than the common 12 byte length.","instantiable":false,"label":"GCM with Non-Recommended IV Lengths","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption|studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption-psa_crypto_gcm_full","isEditable":false,"isEnabled":true,"name":"psa_crypto_gcm_full","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption-psa_crypto_gcm_full"}],"isEnabled":true,"name":"Authenticated Encryption","id":"studiocomproot-Platform-Security-PSA_Crypto-Authenticated_Encryption","label":"Authenticated Encryption","type":"category"},{"children":[{"keyWords":"psa_crypto_ecc_curve25519","componentId":"psa_crypto_ecc_curve25519","isConfigurable":false,"documentation":"","description":"This component adds support for the curve25519 elliptic curve, a 255-bit Montgomery curve, in PSA Crypto.","instantiable":false,"label":"Curve25519","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_curve25519","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecc_curve25519","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_curve25519"},{"keyWords":"psa_crypto_ecc_curve448","componentId":"psa_crypto_ecc_curve448","isConfigurable":false,"documentation":"","description":"This component adds support for the Montgomery 448 bit elliptic curve in PSA Crypto.","instantiable":false,"label":"Curve448","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_curve448","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecc_curve448","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_curve448"},{"keyWords":"psa_crypto_ecc_edwards25519","componentId":"psa_crypto_ecc_edwards25519","isConfigurable":false,"documentation":"","description":"This component adds support for the Twisted Edwards 255-bit ECC curve in PSA Crypto. This curve is only supported on HSE devices.","instantiable":false,"label":"edwards25519","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_edwards25519","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecc_edwards25519","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_edwards25519"},{"keyWords":"psa_crypto_ecc_secp192r1","componentId":"psa_crypto_ecc_secp192r1","isConfigurable":false,"documentation":"","description":"This component adds support for the secp192r1 elliptic curve, a 192-bit prime field Weierstrass curve, in PSA Crypto.","instantiable":false,"label":"secp192r1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp192r1","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecc_secp192r1","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp192r1"},{"keyWords":"psa_crypto_ecc_secp224r1","componentId":"psa_crypto_ecc_secp224r1","isConfigurable":false,"documentation":"","description":"This component adds support for the secp224r1 elliptic curve, a 224-bit prime field Weierstrass curve, in PSA Crypto.","instantiable":false,"label":"secp224r1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp224r1","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecc_secp224r1","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp224r1"},{"keyWords":"psa_crypto_ecc_secp256k1","componentId":"psa_crypto_ecc_secp256k1","isConfigurable":false,"documentation":"","description":"This component adds support for the secp256k1 elliptic curve, a 256-bit Koblitz curve, in PSA Crypto.","instantiable":false,"label":"secp256k1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp256k1","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecc_secp256k1","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp256k1"},{"keyWords":"psa_crypto_ecc_secp256r1","componentId":"psa_crypto_ecc_secp256r1","isConfigurable":false,"documentation":"","description":"This component adds support for the secp256r1 elliptic curve, a 256-bit prime field Weierstrass curve, in PSA Crypto.","instantiable":false,"label":"secp256r1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp256r1","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecc_secp256r1","isSelected":true,"id":"studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp256r1"},{"keyWords":"psa_crypto_ecc_secp384r1","componentId":"psa_crypto_ecc_secp384r1","isConfigurable":false,"documentation":"","description":"This component adds support for the secp384r1 elliptic curve, a 384-bit prime field Weierstrass curve, in PSA Crypto.","instantiable":false,"label":"secp384r1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp384r1","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecc_secp384r1","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp384r1"},{"keyWords":"psa_crypto_ecc_secp521r1","componentId":"psa_crypto_ecc_secp521r1","isConfigurable":false,"documentation":"","description":"This component adds support for the secp521r1 elliptic curve, a 521-bit prime field Weierstrass curve, in PSA Crypto.","instantiable":false,"label":"secp521r1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves|studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp521r1","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecc_secp521r1","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves-psa_crypto_ecc_secp521r1"}],"isEnabled":true,"name":"Elliptic Curves","id":"studiocomproot-Platform-Security-PSA_Crypto-Elliptic_Curves","label":"Elliptic Curves","type":"category"},{"children":[{"keyWords":"psa_crypto_aes","componentId":"psa_crypto_aes","isConfigurable":false,"documentation":"","description":"This component provides support for AES key type in PSA Crypto.","instantiable":false,"label":"AES Block Cipher","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Encryption|studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_aes","isEditable":false,"isEnabled":true,"name":"psa_crypto_aes","isSelected":true,"id":"studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_aes"},{"keyWords":"psa_crypto_cipher_cbc","componentId":"psa_crypto_cipher_cbc","isConfigurable":false,"documentation":"","description":"This component provides support for the CBC block cipher chaining mode (with no padding) in PSA Crypto.","instantiable":false,"label":"CBC Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Encryption|studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_cbc","isEditable":false,"isEnabled":true,"name":"psa_crypto_cipher_cbc","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_cbc"},{"keyWords":"psa_crypto_cipher_cbc_pkcs7","componentId":"psa_crypto_cipher_cbc_pkcs7","isConfigurable":false,"documentation":"","description":"This component provides support for the CBC block cipher chaining mode with PKCS#7 padding in PSA Crypto.","instantiable":false,"label":"CBC Mode with PKCS#7 Padding","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Encryption|studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_cbc_pkcs7","isEditable":false,"isEnabled":true,"name":"psa_crypto_cipher_cbc_pkcs7","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_cbc_pkcs7"},{"keyWords":"psa_crypto_cipher_cfb","componentId":"psa_crypto_cipher_cfb","isConfigurable":false,"documentation":"","description":"This component provides support for the CFB stream cipher mode in PSA Crypto.","instantiable":false,"label":"CFB Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Encryption|studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_cfb","isEditable":false,"isEnabled":true,"name":"psa_crypto_cipher_cfb","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_cfb"},{"keyWords":"psa_crypto_cipher_ctr","componentId":"psa_crypto_cipher_ctr","isConfigurable":false,"documentation":"","description":"This component provides support for the CTR stream cipher mode in PSA Crypto.","instantiable":false,"label":"CTR Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Encryption|studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_ctr","isEditable":false,"isEnabled":true,"name":"psa_crypto_cipher_ctr","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_ctr"},{"keyWords":"psa_crypto_cipher_chacha20","componentId":"psa_crypto_cipher_chacha20","isConfigurable":false,"documentation":"","description":"This component provides support for the ChaCha20 stream cipher in PSA Crypto.","instantiable":false,"label":"Chacha20 Stream Cipher","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Encryption|studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_chacha20","isEditable":false,"isEnabled":true,"name":"psa_crypto_cipher_chacha20","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_chacha20"},{"keyWords":"psa_crypto_cipher_ecb","componentId":"psa_crypto_cipher_ecb","isConfigurable":false,"documentation":"","description":"This component provides support for the ECB block cipher mode (with no padding) in PSA Crypto.","instantiable":false,"label":"ECB Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Encryption|studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_ecb","isEditable":false,"isEnabled":true,"name":"psa_crypto_cipher_ecb","isSelected":true,"id":"studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_ecb"},{"keyWords":"psa_crypto_cipher_ofb","componentId":"psa_crypto_cipher_ofb","isConfigurable":false,"documentation":"","description":"This component provides support for the OFB stream cipher mode in PSA Crypto.","instantiable":false,"label":"OFB Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Encryption|studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_ofb","isEditable":false,"isEnabled":true,"name":"psa_crypto_cipher_ofb","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_ofb"},{"keyWords":"psa_crypto_cipher_xts","componentId":"psa_crypto_cipher_xts","isConfigurable":false,"documentation":"","description":"This component provides support for the XTS cipher mode in PSA Crypto.","instantiable":false,"label":"XTS Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Encryption|studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_xts","isEditable":false,"isEnabled":true,"name":"psa_crypto_cipher_xts","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Encryption-psa_crypto_cipher_xts"}],"isEnabled":true,"name":"Encryption","id":"studiocomproot-Platform-Security-PSA_Crypto-Encryption","label":"Encryption","type":"category"},{"children":[{"keyWords":"psa_crypto_md5","componentId":"psa_crypto_md5","isConfigurable":false,"documentation":"","description":"This component provides support for the MD5 hash function in PSA Crypto. Hardware acceleration of MD5 is not supported on any devices from Silicon Labs.","instantiable":false,"label":"MD5","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Hashing|studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_md5","isEditable":false,"isEnabled":true,"name":"psa_crypto_md5","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_md5"},{"keyWords":"psa_crypto_sha1","componentId":"psa_crypto_sha1","isConfigurable":false,"documentation":"","description":"This component provides support for the SHA-1 hash algorithm in PSA Crypto.","instantiable":false,"label":"SHA-1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Hashing|studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_sha1","isEditable":false,"isEnabled":true,"name":"psa_crypto_sha1","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_sha1"},{"keyWords":"psa_crypto_sha224","componentId":"psa_crypto_sha224","isConfigurable":false,"documentation":"","description":"This component provides support for the SHA-224 hash algorithm in PSA Crypto.","instantiable":false,"label":"SHA-224","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Hashing|studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_sha224","isEditable":false,"isEnabled":true,"name":"psa_crypto_sha224","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_sha224"},{"keyWords":"psa_crypto_sha256","componentId":"psa_crypto_sha256","isConfigurable":false,"documentation":"","description":"This component provides support for the SHA-256 hash algorithm in PSA Crypto.","instantiable":false,"label":"SHA-256","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Hashing|studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_sha256","isEditable":false,"isEnabled":true,"name":"psa_crypto_sha256","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_sha256"},{"keyWords":"psa_crypto_sha384","componentId":"psa_crypto_sha384","isConfigurable":false,"documentation":"","description":"This component provides support for the SHA-384 hash algorithm in PSA Crypto.","instantiable":false,"label":"SHA-384","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Hashing|studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_sha384","isEditable":false,"isEnabled":true,"name":"psa_crypto_sha384","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_sha384"},{"keyWords":"psa_crypto_sha512","componentId":"psa_crypto_sha512","isConfigurable":false,"documentation":"","description":"This component provides support for the SHA-512 hash algorithm in PSA Crypto.","instantiable":false,"label":"SHA-512","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Hashing|studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_sha512","isEditable":false,"isEnabled":true,"name":"psa_crypto_sha512","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Hashing-psa_crypto_sha512"}],"isEnabled":true,"name":"Hashing","id":"studiocomproot-Platform-Security-PSA_Crypto-Hashing","label":"Hashing","type":"category"},{"children":[{"keyWords":"psa_crypto_hkdf","componentId":"psa_crypto_hkdf","isConfigurable":false,"documentation":"","description":"This component provides support for one shot key derivation using HKDF through a Silicon Labs custom API integrated into PSA Crypto in addition to the built- in support through the standard PSA APIs.","instantiable":false,"label":"HKDF","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation|studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation-psa_crypto_hkdf","isEditable":false,"isEnabled":true,"name":"psa_crypto_hkdf","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation-psa_crypto_hkdf"},{"keyWords":"psa_crypto_pbkdf2_cmac","componentId":"psa_crypto_pbkdf2_cmac","isConfigurable":false,"documentation":"","description":"PSA Crypto support for PBKDF2 using AES-CMAC-PRF-128 as the PRF.","instantiable":false,"label":"PBKDF2-AES-CMAC-PRF-128","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation|studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation-psa_crypto_pbkdf2_cmac","isEditable":false,"isEnabled":true,"name":"psa_crypto_pbkdf2_cmac","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation-psa_crypto_pbkdf2_cmac"},{"keyWords":"psa_crypto_pbkdf2","componentId":"psa_crypto_pbkdf2","isConfigurable":false,"documentation":"","description":"PSA Crypto support for PBKDF2 using HMAC as the PRF.","instantiable":false,"label":"PBKDF2-HMAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation|studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation-psa_crypto_pbkdf2","isEditable":false,"isEnabled":true,"name":"psa_crypto_pbkdf2","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation-psa_crypto_pbkdf2"},{"keyWords":"psa_crypto_tls12_prf","componentId":"psa_crypto_tls12_prf","isConfigurable":false,"documentation":"","description":"This component provides support for the pseudorandom function (PRF) specified in TLS 1.2 for use with PSA Crypto. This PSA Crypto functionality uses a Mbed TLS backend.","instantiable":false,"label":"TLS 1.2 PRF","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation|studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation-psa_crypto_tls12_prf","isEditable":false,"isEnabled":true,"name":"psa_crypto_tls12_prf","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation-psa_crypto_tls12_prf"},{"keyWords":"psa_crypto_tls12_psk_to_ms","componentId":"psa_crypto_tls12_psk_to_ms","isConfigurable":false,"documentation":"","description":"This component provides support for the functions specified in TLS 1.2 for derivation of master secrets from pre-shared keys (PSKs) in PSA Crypto. This PSA Crypto functionality uses a Mbed TLS backend.","instantiable":false,"label":"TLS 1.2 PSK to Master Secret","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation|studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation-psa_crypto_tls12_psk_to_ms","isEditable":false,"isEnabled":true,"name":"psa_crypto_tls12_psk_to_ms","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation-psa_crypto_tls12_psk_to_ms"}],"isEnabled":true,"name":"Key Derivation","id":"studiocomproot-Platform-Security-PSA_Crypto-Key_Derivation","label":"Key Derivation","type":"category"},{"children":[{"keyWords":"psa_crypto_ecdh","componentId":"psa_crypto_ecdh","isConfigurable":false,"documentation":"","description":"This component provides support for key agreement with ECDH in PSA Crypto.","instantiable":false,"label":"ECDH","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Key_Exchange|studiocomproot-Platform-Security-PSA_Crypto-Key_Exchange-psa_crypto_ecdh","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecdh","isSelected":true,"id":"studiocomproot-Platform-Security-PSA_Crypto-Key_Exchange-psa_crypto_ecdh"},{"keyWords":"psa_crypto_jpake","componentId":"psa_crypto_jpake","isConfigurable":false,"documentation":"","description":"This component provides support for Elliptic Curve (EC) J-PAKE in PSA Crypto.","instantiable":false,"label":"J-PAKE over Elliptic Curves","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Key_Exchange|studiocomproot-Platform-Security-PSA_Crypto-Key_Exchange-psa_crypto_jpake","isEditable":false,"isEnabled":true,"name":"psa_crypto_jpake","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Key_Exchange-psa_crypto_jpake"}],"isEnabled":true,"name":"Key Exchange","id":"studiocomproot-Platform-Security-PSA_Crypto-Key_Exchange","label":"Key Exchange","type":"category"},{"children":[{"keyWords":"psa_crypto_cmac","componentId":"psa_crypto_cmac","isConfigurable":false,"documentation":"","description":"This component provides support for the CMAC, Cipher based Message Authentication Code algorithm in PSA Crypto.","instantiable":false,"label":"CMAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Message_Authentication_Codes|studiocomproot-Platform-Security-PSA_Crypto-Message_Authentication_Codes-psa_crypto_cmac","isEditable":false,"isEnabled":true,"name":"psa_crypto_cmac","isSelected":true,"id":"studiocomproot-Platform-Security-PSA_Crypto-Message_Authentication_Codes-psa_crypto_cmac"},{"keyWords":"psa_crypto_hmac","componentId":"psa_crypto_hmac","isConfigurable":false,"documentation":"","description":"This component provides support for hash-based message authentication codes (HMACs) in PSA Crypto.","instantiable":false,"label":"HMAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Message_Authentication_Codes|studiocomproot-Platform-Security-PSA_Crypto-Message_Authentication_Codes-psa_crypto_hmac","isEditable":false,"isEnabled":true,"name":"psa_crypto_hmac","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Message_Authentication_Codes-psa_crypto_hmac"}],"isEnabled":true,"name":"Message Authentication Codes","id":"studiocomproot-Platform-Security-PSA_Crypto-Message_Authentication_Codes","label":"Message Authentication Codes","type":"category"},{"children":[{"keyWords":"psa_crypto_rsa_1024","componentId":"psa_crypto_rsa_1024","isConfigurable":false,"documentation":"","description":"This component adds support for 1024-bit RSA operations.","instantiable":false,"label":"RSA-1024","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-RSA|studiocomproot-Platform-Security-PSA_Crypto-RSA-psa_crypto_rsa_1024","isEditable":false,"isEnabled":true,"name":"psa_crypto_rsa_1024","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-RSA-psa_crypto_rsa_1024"},{"keyWords":"psa_crypto_rsa_2048","componentId":"psa_crypto_rsa_2048","isConfigurable":false,"documentation":"","description":"This component adds support for 2048-bit RSA operations.","instantiable":false,"label":"RSA-2048","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-RSA|studiocomproot-Platform-Security-PSA_Crypto-RSA-psa_crypto_rsa_2048","isEditable":false,"isEnabled":true,"name":"psa_crypto_rsa_2048","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-RSA-psa_crypto_rsa_2048"},{"keyWords":"psa_crypto_rsa_4096","componentId":"psa_crypto_rsa_4096","isConfigurable":false,"documentation":"","description":"This component adds support for 4096-bit RSA operations.","instantiable":false,"label":"RSA-4096","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-RSA|studiocomproot-Platform-Security-PSA_Crypto-RSA-psa_crypto_rsa_4096","isEditable":false,"isEnabled":true,"name":"psa_crypto_rsa_4096","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-RSA-psa_crypto_rsa_4096"},{"keyWords":"psa_crypto_rsa_8192","componentId":"psa_crypto_rsa_8192","isConfigurable":false,"documentation":"","description":"This component adds support for 8192-bit RSA operations.","instantiable":false,"label":"RSA-8192","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-RSA|studiocomproot-Platform-Security-PSA_Crypto-RSA-psa_crypto_rsa_8192","isEditable":false,"isEnabled":true,"name":"psa_crypto_rsa_8192","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-RSA-psa_crypto_rsa_8192"}],"isEnabled":true,"name":"RSA","id":"studiocomproot-Platform-Security-PSA_Crypto-RSA","label":"RSA","type":"category"},{"children":[{"keyWords":"psa_crypto_ecdsa_deterministic","componentId":"psa_crypto_ecdsa_deterministic","isConfigurable":false,"documentation":"","description":"This component provides support for signature generation with deterministic ECDSA (RFC-6979) in PSA Crypto.","instantiable":false,"label":"Deterministic ECDSA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Signatures|studiocomproot-Platform-Security-PSA_Crypto-Signatures-psa_crypto_ecdsa_deterministic","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecdsa_deterministic","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Signatures-psa_crypto_ecdsa_deterministic"},{"keyWords":"psa_crypto_ecdsa","componentId":"psa_crypto_ecdsa","isConfigurable":false,"documentation":"","description":"This component provides support for signature generation and verification with ECDSA in PSA Crypto.","instantiable":false,"label":"ECDSA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Signatures|studiocomproot-Platform-Security-PSA_Crypto-Signatures-psa_crypto_ecdsa","isEditable":false,"isEnabled":true,"name":"psa_crypto_ecdsa","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Signatures-psa_crypto_ecdsa"},{"keyWords":"psa_crypto_eddsa","componentId":"psa_crypto_eddsa","isConfigurable":false,"documentation":"","description":"This component provides support for signature generation and verification with EdDSA in PSA Crypto.","instantiable":false,"label":"EdDSA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Signatures|studiocomproot-Platform-Security-PSA_Crypto-Signatures-psa_crypto_eddsa","isEditable":false,"isEnabled":true,"name":"psa_crypto_eddsa","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Signatures-psa_crypto_eddsa"},{"keyWords":"psa_crypto_rsa_sign_legacy","componentId":"psa_crypto_rsa_sign_legacy","isConfigurable":false,"documentation":"","description":"This component adds support for signatures using the legacy RSA scheme as specified in RSA Labratories' PKCS #1 specification v1.5. If possible, it's recommended to use RSA-PSS.","instantiable":false,"label":"Legacy RSA Signatures","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Signatures|studiocomproot-Platform-Security-PSA_Crypto-Signatures-psa_crypto_rsa_sign_legacy","isEditable":false,"isEnabled":true,"name":"psa_crypto_rsa_sign_legacy","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Signatures-psa_crypto_rsa_sign_legacy"},{"keyWords":"psa_crypto_rsa_sign_pss","componentId":"psa_crypto_rsa_sign_pss","isConfigurable":false,"documentation":"","description":"This component adds support for signatures using the RSA-PSS scheme as specified in RSA Labratories' PKCS #1 specification v2.1.","instantiable":false,"label":"RSA-PSS","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-Signatures|studiocomproot-Platform-Security-PSA_Crypto-Signatures-psa_crypto_rsa_sign_pss","isEditable":false,"isEnabled":true,"name":"psa_crypto_rsa_sign_pss","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-Signatures-psa_crypto_rsa_sign_pss"}],"isEnabled":true,"name":"Signatures","id":"studiocomproot-Platform-Security-PSA_Crypto-Signatures","label":"Signatures","type":"category"},{"keyWords":"psa_builtin_key_support_se","componentId":"psa_builtin_key_support_se","isConfigurable":false,"documentation":"","description":"This component provides support for using OTP-provisioned keys through the PSA Crypto API (using the built-in key functionality). For more details on OTP-provisioned keys, please refer to AN1271.","instantiable":false,"label":"Built-In Keys","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-psa_builtin_key_support_se","isEditable":false,"isEnabled":true,"name":"psa_builtin_key_support_se","isSelected":false,"id":"studiocomproot-Platform-Security-PSA_Crypto-psa_builtin_key_support_se"},{"keyWords":"psa_crypto_config","componentId":"psa_crypto_config","isConfigurable":true,"documentation":"","description":"This component includes the PSA Crypto configuration.","instantiable":false,"label":"Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-psa_crypto_config","isEditable":true,"isEnabled":true,"name":"psa_crypto_config","isSelected":true,"id":"studiocomproot-Platform-Security-PSA_Crypto-psa_crypto_config"},{"keyWords":"psa_crypto","componentId":"psa_crypto","isConfigurable":false,"documentation":"","description":"This component provides the PSA Crypto API, a high-level interface to various cryptographic functions.\n\nSilicon Labs aims to provide hardware acceleration drivers for all operations/algorithms that are supported by hardware accelerators. The set of accelerated functions differs between devices, please refer to the individual device's reference manuals for more information. If hardware acceleration is not available, the software implementations in the Mbed TLS library are used as 'fallback' implementations.\n\nAlgorithms need to be enabled in order to be supported. This is done by including the components corresponding to the wanted primitives, key types, functionality, etc. that live in the different 'Platform|Security|PSA Crypto' subcategories.\n\nIf a device does not support hardware acceleration of a requested function, the corresponding Mbed TLS component under 'Platform|Security|Mbed TLS' will be included. If hardware acceleration is enabled, but the option to fallback to a software implementation is still required, it is possible to manually enable the Mbed TLS components. Do note that doing this will result in a potentially significant code size increase.\n\nBased on the selected sub-components, the PSA Crypto configuration file will be auto-generated and included where necessary.","instantiable":false,"label":"PSA Crypto","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-psa_crypto","isEditable":false,"isEnabled":true,"name":"psa_crypto","isSelected":true,"id":"studiocomproot-Platform-Security-PSA_Crypto-psa_crypto"},{"keyWords":"psa_its","componentId":"psa_its","isConfigurable":false,"documentation":"","description":"This component provides an implementation of the PSA ITS (Internal Trusted Storage) API based on Silicon Labs NVM3. For example, this component is required for enabling the use of persistent key storage in PSA Crypto.","instantiable":false,"label":"PSA Persistent Storage Support (ITS)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-PSA_Crypto|studiocomproot-Platform-Security-PSA_Crypto-psa_its","isEditable":false,"isEnabled":true,"name":"psa_its","isSelected":true,"id":"studiocomproot-Platform-Security-PSA_Crypto-psa_its"}],"isEnabled":true,"name":"PSA Crypto","id":"studiocomproot-Platform-Security-PSA_Crypto","label":"PSA Crypto","type":"category"},{"children":[{"keyWords":"se_manager","componentId":"se_manager","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/service/api/group-sl-se-manager","description":"Driver for interacting with the SE or Root Code on Series 2 devices. The available functionality varies accross parts: device management utilities are available on all parts; on parts with the SE subsystem, a low level crypto API is available; finally, Vault High devices also include key storage functionality.","instantiable":false,"label":"SE Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-SE_Manager|studiocomproot-Platform-Security-SE_Manager-se_manager","isEditable":false,"isEnabled":true,"name":"se_manager","isSelected":true,"id":"studiocomproot-Platform-Security-SE_Manager-se_manager"}],"isEnabled":true,"name":"SE Manager","id":"studiocomproot-Platform-Security-SE_Manager","label":"SE Manager","type":"category"},{"children":[{"keyWords":"se_cpc_secondary","componentId":"se_cpc_secondary","isConfigurable":false,"documentation":"","description":"Provides secondary support for Secure Engine mailbox communication over CPC","instantiable":false,"label":"Secure Engine Co-Processor Communcation Secondary","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-Secure_Engine_CPC|studiocomproot-Platform-Security-Secure_Engine_CPC-se_cpc_secondary","isEditable":false,"isEnabled":true,"name":"se_cpc_secondary","isSelected":false,"id":"studiocomproot-Platform-Security-Secure_Engine_CPC-se_cpc_secondary"}],"isEnabled":true,"name":"Secure Engine CPC","id":"studiocomproot-Platform-Security-Secure_Engine_CPC","label":"Secure Engine CPC","type":"category"},{"children":[{"keyWords":"tz_service_nvm3","componentId":"tz_service_nvm3","isConfigurable":false,"documentation":"","description":"This component includes the NVM3 support for TrustZone secure library.","instantiable":false,"label":"NVM3 Service for TrustZone Secure Key Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-TrustZone|studiocomproot-Platform-Security-TrustZone-tz_service_nvm3","isEditable":false,"isEnabled":true,"name":"tz_service_nvm3","isSelected":false,"id":"studiocomproot-Platform-Security-TrustZone-tz_service_nvm3"},{"keyWords":"tz_service_attestation","componentId":"tz_service_attestation","isConfigurable":false,"documentation":"","description":"This component includes the attestation support for TrustZone secure library.","instantiable":false,"label":"PSA Attestation Service for TrustZone Secure Key Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-TrustZone|studiocomproot-Platform-Security-TrustZone-tz_service_attestation","isEditable":false,"isEnabled":true,"name":"tz_service_attestation","isSelected":false,"id":"studiocomproot-Platform-Security-TrustZone-tz_service_attestation"},{"keyWords":"tz_service_psa_crypto","componentId":"tz_service_psa_crypto","isConfigurable":false,"documentation":"","description":"This component includes the PSA Crypto core support for TrustZone secure library.","instantiable":false,"label":"PSA Crypto Service for TrustZone Secure Key Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-TrustZone|studiocomproot-Platform-Security-TrustZone-tz_service_psa_crypto","isEditable":false,"isEnabled":true,"name":"tz_service_psa_crypto","isSelected":false,"id":"studiocomproot-Platform-Security-TrustZone-tz_service_psa_crypto"},{"keyWords":"tz_service_psa_its","componentId":"tz_service_psa_its","isConfigurable":false,"documentation":"","description":"This component includes the PSA Internal Trusted Storage support for TrustZone secure library.","instantiable":false,"label":"PSA ITS Service for TrustZone Secure Key Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-TrustZone|studiocomproot-Platform-Security-TrustZone-tz_service_psa_its","isEditable":false,"isEnabled":true,"name":"tz_service_psa_its","isSelected":false,"id":"studiocomproot-Platform-Security-TrustZone-tz_service_psa_its"},{"keyWords":"tz_service_se_manager","componentId":"tz_service_se_manager","isConfigurable":false,"documentation":"","description":"This component includes the SE Manager support for TrustZone secure library.","instantiable":false,"label":"SE Manager Service for TrustZone Secure Key Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-TrustZone|studiocomproot-Platform-Security-TrustZone-tz_service_se_manager","isEditable":false,"isEnabled":true,"name":"tz_service_se_manager","isSelected":false,"id":"studiocomproot-Platform-Security-TrustZone-tz_service_se_manager"},{"keyWords":"tz_service_syscfg","componentId":"tz_service_syscfg","isConfigurable":false,"documentation":"","description":"This component includes API that provides access to SYSCFG registers.","instantiable":false,"label":"SYSCFG Service for TrustZone Secure Key Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-TrustZone|studiocomproot-Platform-Security-TrustZone-tz_service_syscfg","isEditable":false,"isEnabled":true,"name":"tz_service_syscfg","isSelected":false,"id":"studiocomproot-Platform-Security-TrustZone-tz_service_syscfg"},{"keyWords":"tz_secure_key_library","componentId":"tz_secure_key_library","isConfigurable":false,"documentation":"","description":"This component enables TrustZone secure library and its Non-Secure interface.","instantiable":false,"label":"TrustZone Secure Key Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-TrustZone|studiocomproot-Platform-Security-TrustZone-tz_secure_key_library","isEditable":false,"isEnabled":true,"name":"tz_secure_key_library","isSelected":false,"id":"studiocomproot-Platform-Security-TrustZone-tz_secure_key_library"}],"isEnabled":true,"name":"TrustZone","id":"studiocomproot-Platform-Security-TrustZone","label":"TrustZone","type":"category"},{"keyWords":"sl_fault_injection_hardening","componentId":"sl_fault_injection_hardening","isConfigurable":true,"documentation":"","description":"Fault injection hardening library provides support for different measures, which can either be enabled/disabled by selecting one of the TFM_FIH_PROFILEs\n","instantiable":false,"label":"Fault Injection Hardening","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Security|studiocomproot-Platform-Security-sl_fault_injection_hardening","isEditable":false,"isEnabled":true,"name":"sl_fault_injection_hardening","isSelected":false,"id":"studiocomproot-Platform-Security-sl_fault_injection_hardening"}],"isEnabled":true,"name":"Security","id":"studiocomproot-Platform-Security","label":"Security","type":"category"},{"children":[{"keyWords":"status_string","componentId":"status_string","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/status","description":"Common status code string functions and components","instantiable":false,"label":"Status Code Strings","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Status_Code|studiocomproot-Platform-Status_Code-status_string","isEditable":false,"isEnabled":true,"name":"status_string","isSelected":false,"id":"studiocomproot-Platform-Status_Code-status_string"},{"keyWords":"status","componentId":"status","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/status","description":"Common status codes","instantiable":false,"label":"Status Codes Definitions","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Status_Code|studiocomproot-Platform-Status_Code-status","isEditable":false,"isEnabled":true,"name":"status","isSelected":true,"id":"studiocomproot-Platform-Status_Code-status"}],"isEnabled":true,"name":"Status Code","id":"studiocomproot-Platform-Status_Code","label":"Status Code","type":"category"},{"children":[{"keyWords":"toolchain_gcc_lto","componentId":"toolchain_gcc_lto","isConfigurable":false,"documentation":"","description":"Enable Link time optimization","instantiable":false,"label":"Enable Link time optimization","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Toolchain|studiocomproot-Platform-Toolchain-toolchain_gcc_lto","isEditable":false,"isEnabled":true,"name":"toolchain_gcc_lto","isSelected":false,"id":"studiocomproot-Platform-Toolchain-toolchain_gcc_lto"},{"keyWords":"toolchain_gcc","componentId":"toolchain_gcc","isConfigurable":false,"documentation":"","description":"Toolchain support for GCC","instantiable":false,"label":"GCC Toolchain","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"toolchain:id:gcc","path":"studiocomproot-Platform|studiocomproot-Platform-Toolchain|studiocomproot-Platform-Toolchain-toolchain_gcc","isEditable":false,"isEnabled":true,"name":"toolchain_gcc","isSelected":false,"id":"studiocomproot-Platform-Toolchain-toolchain_gcc"},{"keyWords":"toolchain_iar","componentId":"toolchain_iar","isConfigurable":false,"documentation":"","description":"Toolchain support for IAR","instantiable":false,"label":"IAR Toolchain","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"toolchain:id:iar","path":"studiocomproot-Platform|studiocomproot-Platform-Toolchain|studiocomproot-Platform-Toolchain-toolchain_iar","isEditable":false,"isEnabled":true,"name":"toolchain_iar","isSelected":false,"id":"studiocomproot-Platform-Toolchain-toolchain_iar"},{"keyWords":"sl_memory","componentId":"sl_memory","isConfigurable":true,"documentation":"","description":"Warning: This component is deprecated This component provides configuration of the stack and heap for supported toolchains. For gcc it also adds support for _sbrk() for heap allocation. This is used in the newlib version of malloc().\n","instantiable":false,"label":"Memory Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Toolchain|studiocomproot-Platform-Toolchain-sl_memory","isEditable":true,"isEnabled":true,"name":"sl_memory","isSelected":false,"id":"studiocomproot-Platform-Toolchain-sl_memory"},{"keyWords":"toolchain_variant_arm","componentId":"toolchain_variant_arm","isConfigurable":false,"documentation":"","description":"Toolchain support for ARM devices","instantiable":false,"label":"Toolchain for ARM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"toolchain:variant:arm","path":"studiocomproot-Platform|studiocomproot-Platform-Toolchain|studiocomproot-Platform-Toolchain-toolchain_variant_arm","isEditable":false,"isEnabled":true,"name":"toolchain_variant_arm","isSelected":false,"id":"studiocomproot-Platform-Toolchain-toolchain_variant_arm"},{"keyWords":"toolchain_variant_host","componentId":"toolchain_variant_host","isConfigurable":false,"documentation":"","description":"Toolchain support for host devices","instantiable":false,"label":"Toolchain for host","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"toolchain:variant:host","path":"studiocomproot-Platform|studiocomproot-Platform-Toolchain|studiocomproot-Platform-Toolchain-toolchain_variant_host","isEditable":false,"isEnabled":true,"name":"toolchain_variant_host","isSelected":false,"id":"studiocomproot-Platform-Toolchain-toolchain_variant_host"},{"keyWords":"cpp_support","componentId":"cpp_support","isConfigurable":false,"documentation":"","description":"C++ support for project. Adds C++ standard library for GCC.\n","instantiable":false,"label":"Toolchain: C++ Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Toolchain|studiocomproot-Platform-Toolchain-cpp_support","isEditable":false,"isEnabled":true,"name":"cpp_support","isSelected":false,"id":"studiocomproot-Platform-Toolchain-cpp_support"},{"keyWords":"errno","componentId":"errno","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/errno","description":"This component provides \"errno.h\" header file. It also provides support for threadsafe errno usage along with support for errno usage in ISR context.\n","instantiable":false,"label":"errno support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Toolchain|studiocomproot-Platform-Toolchain-errno","isEditable":false,"isEnabled":true,"name":"errno","isSelected":false,"id":"studiocomproot-Platform-Toolchain-errno"}],"isEnabled":true,"name":"Toolchain","id":"studiocomproot-Platform-Toolchain","label":"Toolchain","type":"category"},{"children":[{"keyWords":"trustzone_nonsecure","componentId":"trustzone_nonsecure","isConfigurable":false,"documentation":"","description":"Set up application configuration to create TrustZone Non-Secure application.\n","instantiable":false,"label":"TrustZone Non-Secure","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-TrustZone|studiocomproot-Platform-TrustZone-trustzone_nonsecure","isEditable":false,"isEnabled":true,"name":"trustzone_nonsecure","isSelected":false,"id":"studiocomproot-Platform-TrustZone-trustzone_nonsecure"},{"keyWords":"trustzone_secure","componentId":"trustzone_secure","isConfigurable":false,"documentation":"","description":"Set up application configuration to create TrustZone Secure application.\n","instantiable":false,"label":"TrustZone Secure","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-TrustZone|studiocomproot-Platform-TrustZone-trustzone_secure","isEditable":false,"isEnabled":true,"name":"trustzone_secure","isSelected":false,"id":"studiocomproot-Platform-TrustZone-trustzone_secure"},{"keyWords":"trustzone_unaware","componentId":"trustzone_unaware","isConfigurable":false,"documentation":"","description":"Used to signal that a project does not make active use of different TrustZone security states.\n","instantiable":false,"label":"TrustZone Unaware","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-TrustZone|studiocomproot-Platform-TrustZone-trustzone_unaware","isEditable":false,"isEnabled":true,"name":"trustzone_unaware","isSelected":true,"id":"studiocomproot-Platform-TrustZone-trustzone_unaware"}],"isEnabled":true,"name":"TrustZone","id":"studiocomproot-Platform-TrustZone","label":"TrustZone","type":"category"},{"children":[{"keyWords":"sl_assert","componentId":"sl_assert","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/assert","description":"Component that provides assert functions.","instantiable":false,"label":"Assert Functions","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-sl_assert","isEditable":false,"isEnabled":true,"name":"sl_assert","isSelected":true,"id":"studiocomproot-Platform-Utilities-sl_assert"},{"keyWords":"atomic","componentId":"atomic","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/atomic","description":"Library of different operations performed atomically","instantiable":false,"label":"Atomic Operations Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-atomic","isEditable":false,"isEnabled":true,"name":"atomic","isSelected":true,"id":"studiocomproot-Platform-Utilities-atomic"},{"keyWords":"bit","componentId":"bit","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/bit","description":"Library of different bit operations","instantiable":false,"label":"Bit Operations Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-bit","isEditable":false,"isEnabled":true,"name":"bit","isSelected":true,"id":"studiocomproot-Platform-Utilities-bit"},{"keyWords":"byte_utilities","componentId":"byte_utilities","isConfigurable":false,"documentation":"","description":"Data store and fetch routines","instantiable":false,"label":"Byte Utilities","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-byte_utilities","isEditable":false,"isEnabled":true,"name":"byte_utilities","isSelected":false,"id":"studiocomproot-Platform-Utilities-byte_utilities"},{"keyWords":"silabs_core_circular_queue","componentId":"silabs_core_circular_queue","isConfigurable":true,"documentation":"","description":"Silicon Labs core utility providing a circular queue.","instantiable":false,"label":"Circular Queue","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-silabs_core_circular_queue","isEditable":false,"isEnabled":true,"name":"silabs_core_circular_queue","isSelected":false,"id":"studiocomproot-Platform-Utilities-silabs_core_circular_queue"},{"keyWords":"sl_common","componentId":"sl_common","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/common","description":"Common headers macros for alignment, min/max/ceil/floor, pack, section, weak, noreturn, fallthrough\n","instantiable":false,"label":"Common Functions","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-sl_common","isEditable":false,"isEnabled":true,"name":"sl_common","isSelected":true,"id":"studiocomproot-Platform-Utilities-sl_common"},{"keyWords":"component_catalog","componentId":"component_catalog","isConfigurable":false,"documentation":"","description":"Component catalog that provides the list of APIs present in the project.","instantiable":false,"label":"Component Catalog","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-component_catalog","isEditable":false,"isEnabled":true,"name":"component_catalog","isSelected":true,"id":"studiocomproot-Platform-Utilities-component_catalog"},{"keyWords":"util_eeprom","componentId":"util_eeprom","isConfigurable":true,"documentation":"","description":"This component manages the state of the EEPROM so that it will be correctly initialized before operations are executed. This is important, for example, when sleeping/waking the chip. The SPI or I2C bus must often be reinitialized. It also handles partial writes (less than the word size of the part), caching that partial word for writing later when a call to write is made that is at the next address to the partial word. If this component is not enabled or similar functionality is not implemented, deep sleep may not be possible. This component must be disabled if the module it is being used for does not have EEPROM.","instantiable":false,"label":"EEPROM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-util_eeprom","isEditable":false,"isEnabled":true,"name":"util_eeprom","isSelected":false,"id":"studiocomproot-Platform-Utilities-util_eeprom"},{"keyWords":"silabs_core_event_queue","componentId":"silabs_core_event_queue","isConfigurable":false,"documentation":"","description":"Ember queue-based event system.","instantiable":false,"label":"Ember queue-based event system","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-silabs_core_event_queue","isEditable":false,"isEnabled":true,"name":"silabs_core_event_queue","isSelected":false,"id":"studiocomproot-Platform-Utilities-silabs_core_event_queue"},{"keyWords":"endianness","componentId":"endianness","isConfigurable":false,"documentation":"","description":"Library of different endianness operations","instantiable":false,"label":"Endianness Operations Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-endianness","isEditable":false,"isEnabled":true,"name":"endianness","isSelected":false,"id":"studiocomproot-Platform-Utilities-endianness"},{"keyWords":"enum","componentId":"enum","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/enum","description":"A wrapper for enum generation that ensures consistent sizing and doxygen stylization.","instantiable":false,"label":"Enumerations","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-enum","isEditable":false,"isEnabled":true,"name":"enum","isSelected":true,"id":"studiocomproot-Platform-Utilities-enum"},{"keyWords":"event_system","componentId":"event_system","isConfigurable":false,"documentation":"","description":"Component that provides an event system for inter-process communication.","instantiable":false,"label":"Event System API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-event_system","isEditable":false,"isEnabled":true,"name":"event_system","isSelected":false,"id":"studiocomproot-Platform-Utilities-event_system"},{"keyWords":"flash_storage","componentId":"flash_storage","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/linker","description":"Flash storage allocation support used for features like bootloader storage. This component is used to configure a bootloader storage space from the view of the application. This way the application can reserve an area in the flash which cannot be used by code.\n","instantiable":false,"label":"Flash Storage Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-flash_storage","isEditable":false,"isEnabled":true,"name":"flash_storage","isSelected":false,"id":"studiocomproot-Platform-Utilities-flash_storage"},{"keyWords":"stack_protection_iar","componentId":"stack_protection_iar","isConfigurable":false,"documentation":"","description":"This component enables stack protection and also provides stack protection definitions for IAR.","instantiable":false,"label":"IAR stack protection","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-stack_protection_iar","isEditable":false,"isEnabled":true,"name":"stack_protection_iar","isSelected":false,"id":"studiocomproot-Platform-Utilities-stack_protection_iar"},{"keyWords":"silabs_core_sl_malloc","componentId":"silabs_core_sl_malloc","isConfigurable":false,"documentation":"","description":"THIS COMPONENT IS DEPRECATED. It is replaced by the component memory_manager.\n\nThis component provides a thread safe wrapper on top of the standard c memory allocation functions.\nThe component can be used in an environment where Micrium OS or FreeRTOS is used in order to safely\nallocate and free memory in multiple tasks from a shared heap.\n\nThe wrapper functions are called sl_malloc(), sl_calloc, sl_realloc() and sl_free().","instantiable":false,"label":"Malloc Wrapper - DEPRECATED","type":"component","quality":"DEPRECATED","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-silabs_core_sl_malloc","isEditable":false,"isEnabled":true,"name":"silabs_core_sl_malloc","isSelected":false,"id":"studiocomproot-Platform-Utilities-silabs_core_sl_malloc"},{"keyWords":"silabs_core_memory_manager","componentId":"silabs_core_memory_manager","isConfigurable":true,"documentation":"","description":"Silabs core is a collection of basic application utilities.","instantiable":false,"label":"Memory Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-silabs_core_memory_manager","isEditable":false,"isEnabled":true,"name":"silabs_core_memory_manager","isSelected":false,"id":"studiocomproot-Platform-Utilities-silabs_core_memory_manager"},{"keyWords":"udelay","componentId":"udelay","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/udelay","description":"This component provides a microsecond delay function which can be used for small delays. The delay function is designed to not use any hardware peripherals and instead use a while loop based on the frequency of the core clock.\n","instantiable":false,"label":"Microsecond Delay","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-udelay","isEditable":false,"isEnabled":true,"name":"udelay","isSelected":true,"id":"studiocomproot-Platform-Utilities-udelay"},{"keyWords":"silabs_core_response_print","componentId":"silabs_core_response_print","isConfigurable":true,"documentation":"","description":"Silabs core utility to format text using response print syntax.","instantiable":false,"label":"Response Print","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-silabs_core_response_print","isEditable":false,"isEnabled":true,"name":"silabs_core_response_print","isSelected":false,"id":"studiocomproot-Platform-Utilities-silabs_core_response_print"},{"keyWords":"security_manager","componentId":"security_manager","isConfigurable":false,"documentation":"","description":"The 15.4 Security Manager utility handles general security functions (key management and crypto operations) through PSA Crypto API. Encryption keys are securely stored on parts that support the Vault feature.","instantiable":false,"label":"Security Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-security_manager","isEditable":false,"isEnabled":true,"name":"security_manager","isSelected":false,"id":"studiocomproot-Platform-Utilities-security_manager"},{"keyWords":"slist","componentId":"slist","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/slist","description":"Component that provides single link list functionality.","instantiable":false,"label":"Single Link List","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-slist","isEditable":false,"isEnabled":true,"name":"slist","isSelected":true,"id":"studiocomproot-Platform-Utilities-slist"},{"keyWords":"slot_manager","componentId":"slot_manager","isConfigurable":false,"documentation":"","description":"The Slot Manager utility manages storage slots in flash (internal or external SPI flash). This feature is used with the Gecko Bootloader. A bootloader built with storage slots is necessary for Slot Manager to function. The Zigbee over-the-air bootloading feature uses Slot Manager to save to and boot from storage slots.","instantiable":false,"label":"Slot Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-slot_manager","isEditable":false,"isEnabled":true,"name":"slot_manager","isSelected":false,"id":"studiocomproot-Platform-Utilities-slot_manager"},{"keyWords":"stdio","componentId":"stdio","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/stdio","description":"Component that provides stdio compatibility.","instantiable":false,"label":"Standard I/O","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-stdio","isEditable":false,"isEnabled":true,"name":"stdio","isSelected":false,"id":"studiocomproot-Platform-Utilities-stdio"},{"keyWords":"sl_string","componentId":"sl_string","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-common/string","description":"Component that provides safe string functions.","instantiable":false,"label":"String Functions","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-sl_string","isEditable":false,"isEnabled":true,"name":"sl_string","isSelected":false,"id":"studiocomproot-Platform-Utilities-sl_string"},{"keyWords":"demo_ui","componentId":"demo_ui","isConfigurable":false,"documentation":"","description":"Utility for drawing graphics for demo applications.","instantiable":false,"label":"UI Demo Functions","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-demo_ui","isEditable":false,"isEnabled":true,"name":"demo_ui","isSelected":false,"id":"studiocomproot-Platform-Utilities-demo_ui"},{"keyWords":"sl_core","componentId":"sl_core","isConfigurable":true,"documentation":"","description":"Core peripheral API\n","instantiable":false,"label":"core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Platform|studiocomproot-Platform-Utilities|studiocomproot-Platform-Utilities-sl_core","isEditable":true,"isEnabled":true,"name":"sl_core","isSelected":true,"id":"studiocomproot-Platform-Utilities-sl_core"}],"isEnabled":true,"name":"Utilities","id":"studiocomproot-Platform-Utilities","label":"Utilities","type":"category"}],"isEnabled":true,"name":"Platform","id":"studiocomproot-Platform","label":"Platform","type":"category"},{"children":[{"children":[{"keyWords":"sl_rail_sdk_range_test_dmp_component","componentId":"sl_rail_sdk_range_test_dmp_component","isConfigurable":true,"documentation":"","description":"Adds DMP Bluetooth support to Range Test.","instantiable":false,"label":"DMP Bluetooth for Range Test (Range Test DMP Only)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Extension|studiocomproot-RAIL-SDK-Extension-sl_rail_sdk_range_test_dmp_component","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_range_test_dmp_component","isSelected":false,"id":"studiocomproot-RAIL-SDK-Extension-sl_rail_sdk_range_test_dmp_component"},{"keyWords":"sl_rail_sdk_simple_cpc","componentId":"sl_rail_sdk_simple_cpc","isConfigurable":true,"documentation":"","description":"The Simple RAIL CPC for NCP projects (SPI) component offers a straightforward communication interface for CPC, utilizing the recommended CPC communication method. By integrating a Wireless Gecko (EFR32) System on Chip (SoC) in NCP (Network Co-processor) mode into your system, you can create a wireless application based on the Silicon Labs RAIL stack.\n","instantiable":false,"label":"Simple CPC for NCP projects","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Extension|studiocomproot-RAIL-SDK-Extension-sl_rail_sdk_simple_cpc","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_simple_cpc","isSelected":false,"id":"studiocomproot-RAIL-SDK-Extension-sl_rail_sdk_simple_cpc"},{"keyWords":"sl_rail_sdk_simple_cpc_spi","componentId":"sl_rail_sdk_simple_cpc_spi","isConfigurable":true,"documentation":"","description":"The Simple RAIL CPC for NCP projects (SPI) component offers a straightforward communication interface for CPC, utilizing the recommended CPC communication method. By integrating a Wireless Gecko (EFR32) System on Chip (SoC) in NCP (Network Co-processor) mode into your system, you can create a wireless application based on the Silicon Labs RAIL stack.\n","instantiable":false,"label":"Simple CPC for NCP projects (SPI) (Only for RAIL CPC)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Extension|studiocomproot-RAIL-SDK-Extension-sl_rail_sdk_simple_cpc_spi","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_simple_cpc_spi","isSelected":false,"id":"studiocomproot-RAIL-SDK-Extension-sl_rail_sdk_simple_cpc_spi"},{"keyWords":"sl_rail_sdk_simple_os","componentId":"sl_rail_sdk_simple_os","isConfigurable":false,"documentation":"","description":"Adds task init function for RAIL Sample Apps. Compatible with Micrium and with FreeRTOS.","instantiable":false,"label":"Simple OS Init files for RAIL Sample Apps","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Extension|studiocomproot-RAIL-SDK-Extension-sl_rail_sdk_simple_os","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_simple_os","isSelected":false,"id":"studiocomproot-RAIL-SDK-Extension-sl_rail_sdk_simple_os"}],"isEnabled":true,"name":"Extension","id":"studiocomproot-RAIL-SDK-Extension","label":"Extension","type":"category"},{"children":[{"keyWords":"sl_rail_sdk_ble_support","componentId":"sl_rail_sdk_ble_support","isConfigurable":true,"documentation":"","description":"This component extends the application's capabilities by adding minimalist BLE support. It seamlessly integrates with other components, providing a cohesive solution for Bluetooth Low Energy (BLE) communication. It facilitates seamless communication between devices, enabling efficient data exchange. Specifically, it handles the coding and decoding of BLE packets, ensuring reliable data transmission.\n","instantiable":false,"label":"BLE support (Simple TRX Std Only)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Utility|studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_ble_support","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_ble_support","isSelected":false,"id":"studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_ble_support"},{"keyWords":"sl_rail_sdk_channel_selector","componentId":"sl_rail_sdk_channel_selector","isConfigurable":true,"documentation":"","description":"This component facilitates appropriate channel management for an application. The module offers flexible configuration options through a Command Line Interface (CLI). Users can interactively define their preferred channels, making it a highly adaptable tool for managing channels within the application. Note: Currently, it is limited to the first protocol's first channel group.\n","instantiable":false,"label":"Channel Selector and CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Utility|studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_channel_selector","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_channel_selector","isSelected":false,"id":"studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_channel_selector"},{"keyWords":"sl_rail_sdk_fifo_size","componentId":"sl_rail_sdk_fifo_size","isConfigurable":true,"documentation":"","description":"Provides apps with adjustable RAIL configuration values like TX and RX FIFO capacity.","instantiable":false,"label":"FIFO size values","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Utility|studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_fifo_size","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_fifo_size","isSelected":false,"id":"studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_fifo_size"},{"keyWords":"sl_rail_sdk_802154_support","componentId":"sl_rail_sdk_802154_support","isConfigurable":true,"documentation":"","description":"This software component integrates minimalist IEEE Std. 802.15.4 support for encoding, decoding packets, and utilizing fundamental functionalities. It initializes the IEEE 802.15.4 protocol according to the selected configuration, offering flexibility in protocol setup. The component handles initialization failures gracefully and ensures compatibility with supported RF bands.\n","instantiable":false,"label":"IEEE 802.15.4 support (Simple TRX Std Only)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Utility|studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_802154_support","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_802154_support","isSelected":false,"id":"studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_802154_support"},{"keyWords":"sl_rail_sdk_phy_selector","componentId":"sl_rail_sdk_phy_selector","isConfigurable":false,"documentation":"","description":"This component facilitates appropriate phy management for an application. The module offers flexible configuration options through a Command Line Interface (CLI). Users can interactively define their preferred PHY, making it a highly adaptable tool for managing PHYs within the application. This component is not compatible with Range Test, Wireless M-Bus and Multiphy applications.\n","instantiable":false,"label":"PHY Selector and CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Utility|studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_phy_selector","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_phy_selector","isSelected":false,"id":"studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_phy_selector"},{"keyWords":"sl_radioprs","componentId":"sl_radioprs","isConfigurable":true,"documentation":"","description":"Helper for setting Radio debug PRS signals.","instantiable":true,"label":"PRS Debug Signal Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Utility|studiocomproot-RAIL-SDK-Utility-sl_radioprs","isEditable":false,"isEnabled":true,"name":"sl_radioprs","isSelected":false,"id":"studiocomproot-RAIL-SDK-Utility-sl_radioprs"},{"keyWords":"sl_rail_sdk_packet_assistant","componentId":"sl_rail_sdk_packet_assistant","isConfigurable":true,"documentation":"","description":"This component is a versatile radio interface layer designed to support both proprietary and standards-based wireless protocols. It empowers developers by providing an intuitive and easily-customizable radio interface. The component offers a consistent radio API. This ensures application portability and simplifies complex radio register configurations.\n","instantiable":false,"label":"Packet Assistant","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Utility|studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_packet_assistant","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_packet_assistant","isSelected":false,"id":"studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_packet_assistant"},{"keyWords":"sl_rail_sdk_sleep","componentId":"sl_rail_sdk_sleep","isConfigurable":false,"documentation":"","description":"Component that provides sleep init for RAIL when used with Power Manager.","instantiable":false,"label":"Power Manager Integration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Utility|studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_sleep","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_sleep","isSelected":false,"id":"studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_sleep"},{"keyWords":"sl_rail_sdk_simple_assistance","componentId":"sl_rail_sdk_simple_assistance","isConfigurable":false,"documentation":"","description":"This component provides fine-grained control over the dedicated LEDs on the board, as well as essential logging functionality. The logging functions allow you to capture important events and diagnostic information. These logs can be invaluable for debugging, monitoring, and analyzing the behavior of your system. Whether you want to indicate reception or transmission, this component provides the necessary functionality along with robust logging capabilities.\n","instantiable":false,"label":"Simple Assistance","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Utility|studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_simple_assistance","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_simple_assistance","isSelected":false,"id":"studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_simple_assistance"},{"keyWords":"sl_rail_sdk_packet_asm","componentId":"sl_rail_sdk_packet_asm","isConfigurable":false,"documentation":"","description":"This component offers packet assembly functionalities for IEEE 802.15.4, BLE, and WiSUN.\n","instantiable":false,"label":"Standard packet assembler","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Utility|studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_packet_asm","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_packet_asm","isSelected":false,"id":"studiocomproot-RAIL-SDK-Utility-sl_rail_sdk_packet_asm"}],"isEnabled":true,"name":"Utility","id":"studiocomproot-RAIL-SDK-Utility","label":"Utility","type":"category"},{"children":[{"keyWords":"sl_rail_sdk_wmbus_sensor_pulse_counter","componentId":"sl_rail_sdk_wmbus_sensor_pulse_counter","isConfigurable":true,"documentation":"","description":"Measure and send button presses between TX frames.","instantiable":false,"label":"Wireless M-Bus Button Pulse Counter (Wireless M-Bus Meter Only)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Wireless_M-Bus|studiocomproot-RAIL-SDK-Wireless_M-Bus-sl_rail_sdk_wmbus_sensor_pulse_counter","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_wmbus_sensor_pulse_counter","isSelected":false,"id":"studiocomproot-RAIL-SDK-Wireless_M-Bus-sl_rail_sdk_wmbus_sensor_pulse_counter"},{"keyWords":"sl_rail_sdk_wmbus_sensor_core","componentId":"sl_rail_sdk_wmbus_sensor_core","isConfigurable":true,"documentation":"","description":"Adapter component to use sensors with Wireless M-Bus Meter","instantiable":false,"label":"Wireless M-Bus Sensor Core (Wireless M-Bus Meter Only)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Wireless_M-Bus|studiocomproot-RAIL-SDK-Wireless_M-Bus-sl_rail_sdk_wmbus_sensor_core","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_wmbus_sensor_core","isSelected":false,"id":"studiocomproot-RAIL-SDK-Wireless_M-Bus-sl_rail_sdk_wmbus_sensor_core"},{"keyWords":"sl_rail_sdk_wmbus_sensor_virtual_water_meter","componentId":"sl_rail_sdk_wmbus_sensor_virtual_water_meter","isConfigurable":true,"documentation":"","description":"Software-based solution designed to monitor and measure the water meter in a given environment.","instantiable":false,"label":"Wireless M-Bus Virtual Water Meter Sensor (Wireless M-Bus Meter Only)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Wireless_M-Bus|studiocomproot-RAIL-SDK-Wireless_M-Bus-sl_rail_sdk_wmbus_sensor_virtual_water_meter","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_wmbus_sensor_virtual_water_meter","isSelected":false,"id":"studiocomproot-RAIL-SDK-Wireless_M-Bus-sl_rail_sdk_wmbus_sensor_virtual_water_meter"},{"keyWords":"sl_rail_sdk_wmbus_support","componentId":"sl_rail_sdk_wmbus_support","isConfigurable":true,"documentation":"","description":"Adds minimalist Wireless M-Bus support for coding and decoding packets.","instantiable":false,"label":"Wireless M-Bus support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RAIL-SDK|studiocomproot-RAIL-SDK-Wireless_M-Bus|studiocomproot-RAIL-SDK-Wireless_M-Bus-sl_rail_sdk_wmbus_support","isEditable":false,"isEnabled":true,"name":"sl_rail_sdk_wmbus_support","isSelected":false,"id":"studiocomproot-RAIL-SDK-Wireless_M-Bus-sl_rail_sdk_wmbus_support"}],"isEnabled":true,"name":"Wireless M-Bus","id":"studiocomproot-RAIL-SDK-Wireless_M-Bus","label":"Wireless M-Bus","type":"category"}],"isEnabled":true,"name":"RAIL-SDK","id":"studiocomproot-RAIL-SDK","label":"RAIL-SDK","type":"category"},{"children":[{"children":[{"keyWords":"freertos_kernel_cortexm","componentId":"freertos_kernel_cortexm","isConfigurable":false,"documentation":"","description":"FreeRTOS kernel\n","instantiable":false,"label":"FreeRTOS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RTOS|studiocomproot-RTOS-FreeRTOS|studiocomproot-RTOS-FreeRTOS-freertos_kernel_cortexm","isEditable":false,"isEnabled":true,"name":"freertos_kernel_cortexm","isSelected":false,"id":"studiocomproot-RTOS-FreeRTOS-freertos_kernel_cortexm"},{"keyWords":"freertos","componentId":"freertos","isConfigurable":true,"documentation":"","description":"FreeRTOS kernel\n","instantiable":false,"label":"FreeRTOS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RTOS|studiocomproot-RTOS-FreeRTOS|studiocomproot-RTOS-FreeRTOS-freertos","isEditable":false,"isEnabled":true,"name":"freertos","isSelected":false,"id":"studiocomproot-RTOS-FreeRTOS-freertos"},{"keyWords":"freertos_heap_1","componentId":"freertos_heap_1","isConfigurable":false,"documentation":"","description":"A heap implementation for FreeRTOS.\nThe simplest possible implementation of pvPortMalloc().  Note that this implementation does NOT allow allocated memory to be freed again.\n","instantiable":false,"label":"FreeRTOS Heap 1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RTOS|studiocomproot-RTOS-FreeRTOS|studiocomproot-RTOS-FreeRTOS-freertos_heap_1","isEditable":false,"isEnabled":true,"name":"freertos_heap_1","isSelected":false,"id":"studiocomproot-RTOS-FreeRTOS-freertos_heap_1"},{"keyWords":"freertos_heap_2","componentId":"freertos_heap_2","isConfigurable":false,"documentation":"","description":"A heap implementation for FreeRTOS.\nA sample implementation of pvPortMalloc() and vPortFree() that permits allocated blocks to be freed, but does not combine adjacent free blocks into a single larger block (and so will fragment memory).  See heap_4.c for an equivalent that does combine adjacent blocks into single larger blocks.\n","instantiable":false,"label":"FreeRTOS Heap 2","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RTOS|studiocomproot-RTOS-FreeRTOS|studiocomproot-RTOS-FreeRTOS-freertos_heap_2","isEditable":false,"isEnabled":true,"name":"freertos_heap_2","isSelected":false,"id":"studiocomproot-RTOS-FreeRTOS-freertos_heap_2"},{"keyWords":"freertos_heap_3","componentId":"freertos_heap_3","isConfigurable":false,"documentation":"","description":"A heap implementation for FreeRTOS.\nImplementation of pvPortMalloc() and vPortFree() that relies on the memory manager own malloc() and free() implementations.\nThis file can only be used if the linker is configured to generate a heap memory area.\n","instantiable":false,"label":"FreeRTOS Heap 3","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RTOS|studiocomproot-RTOS-FreeRTOS|studiocomproot-RTOS-FreeRTOS-freertos_heap_3","isEditable":false,"isEnabled":true,"name":"freertos_heap_3","isSelected":false,"id":"studiocomproot-RTOS-FreeRTOS-freertos_heap_3"},{"keyWords":"freertos_heap_4","componentId":"freertos_heap_4","isConfigurable":false,"documentation":"","description":"A heap implementation for FreeRTOS.\nA sample implementation of pvPortMalloc() and vPortFree() that combines (coalescences) adjacent memory blocks as they are freed, and in so doing limits memory fragmentation.\n","instantiable":false,"label":"FreeRTOS Heap 4","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RTOS|studiocomproot-RTOS-FreeRTOS|studiocomproot-RTOS-FreeRTOS-freertos_heap_4","isEditable":false,"isEnabled":true,"name":"freertos_heap_4","isSelected":false,"id":"studiocomproot-RTOS-FreeRTOS-freertos_heap_4"},{"keyWords":"freertos_heap_5","componentId":"freertos_heap_5","isConfigurable":false,"documentation":"","description":"A heap implementation for FreeRTOS.\nA sample implementation of pvPortMalloc() that allows the heap to be defined across multiple non-contigous blocks and combines (coalescences) adjacent memory blocks as they are freed.\n","instantiable":false,"label":"FreeRTOS Heap 5","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RTOS|studiocomproot-RTOS-FreeRTOS|studiocomproot-RTOS-FreeRTOS-freertos_heap_5","isEditable":false,"isEnabled":true,"name":"freertos_heap_5","isSelected":false,"id":"studiocomproot-RTOS-FreeRTOS-freertos_heap_5"}],"isEnabled":true,"name":"FreeRTOS","id":"studiocomproot-RTOS-FreeRTOS","label":"FreeRTOS","type":"category"},{"children":[{"children":[{"keyWords":"micriumos_cpu","componentId":"micriumos_cpu","isConfigurable":true,"documentation":"","description":"Micrium OS CPU","instantiable":false,"label":"Micrium OS CPU Module","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RTOS|studiocomproot-RTOS-Micrium_OS|studiocomproot-RTOS-Micrium_OS-Common|studiocomproot-RTOS-Micrium_OS-Common-micriumos_cpu","isEditable":false,"isEnabled":true,"name":"micriumos_cpu","isSelected":false,"id":"studiocomproot-RTOS-Micrium_OS-Common-micriumos_cpu"}],"isEnabled":true,"name":"Common","id":"studiocomproot-RTOS-Micrium_OS-Common","label":"Common","type":"category"},{"children":[{"keyWords":"micriumos_kernel","componentId":"micriumos_kernel","isConfigurable":true,"documentation":"","description":"Micrium OS Kernel","instantiable":false,"label":"Micrium OS Kernel","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-RTOS|studiocomproot-RTOS-Micrium_OS|studiocomproot-RTOS-Micrium_OS-Kernel|studiocomproot-RTOS-Micrium_OS-Kernel-micriumos_kernel","isEditable":false,"isEnabled":true,"name":"micriumos_kernel","isSelected":false,"id":"studiocomproot-RTOS-Micrium_OS-Kernel-micriumos_kernel"}],"isEnabled":true,"name":"Kernel","id":"studiocomproot-RTOS-Micrium_OS-Kernel","label":"Kernel","type":"category"}],"isEnabled":true,"name":"Micrium OS","id":"studiocomproot-RTOS-Micrium_OS","label":"Micrium OS","type":"category"}],"isEnabled":true,"name":"RTOS","id":"studiocomproot-RTOS","label":"RTOS","type":"category"},{"children":[{"children":[{"keyWords":"radio_priority_15_4","componentId":"radio_priority_15_4","isConfigurable":true,"documentation":"","description":"This component is used to configure the radio priorities of a 15.4 stack","instantiable":false,"label":"802.15.4 Unified radio scheduler priority","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Radio|studiocomproot-Radio-Mac|studiocomproot-Radio-Mac-radio_priority_15_4","isEditable":false,"isEnabled":true,"name":"radio_priority_15_4","isSelected":false,"id":"studiocomproot-Radio-Mac-radio_priority_15_4"},{"keyWords":"spinel_host_interface_cpc","componentId":"spinel_host_interface_cpc","isConfigurable":false,"documentation":"","description":"Implements the socket interface needed to connect host apps to CPC daemon. This layer is parallel to HDLC and SPI interfaces provided by Openthread. Designed for use with zigbeed.","instantiable":false,"label":"Implements host CPC interface to CPC daemon","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Radio|studiocomproot-Radio-Mac|studiocomproot-Radio-Mac-spinel_host_interface_cpc","isEditable":false,"isEnabled":true,"name":"spinel_host_interface_cpc","isSelected":false,"id":"studiocomproot-Radio-Mac-spinel_host_interface_cpc"},{"keyWords":"lower_mac_spinel","componentId":"lower_mac_spinel","isConfigurable":true,"documentation":"","description":"Implements the lower mac portion of the silabs 802.15.4 unified mac using SPINEL talking to an OpenThread 15.4 RCP. Used for running 15.4 stacks such as Zigbee on a posix host connected to an RCP.","instantiable":false,"label":"Implements lower mac using a SPINEL RCP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Radio|studiocomproot-Radio-Mac|studiocomproot-Radio-Mac-lower_mac_spinel","isEditable":false,"isEnabled":true,"name":"lower_mac_spinel","isSelected":false,"id":"studiocomproot-Radio-Mac-lower_mac_spinel"},{"keyWords":"rail_mux","componentId":"rail_mux","isConfigurable":false,"documentation":"","description":"Implements a RAIL Multiplexer Layer that enables supports for multiple 802.15.4-based protocols.","instantiable":false,"label":"RAIL 802.15.4 Multiplexer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Radio|studiocomproot-Radio-Mac|studiocomproot-Radio-Mac-rail_mux","isEditable":false,"isEnabled":true,"name":"rail_mux","isSelected":false,"id":"studiocomproot-Radio-Mac-rail_mux"},{"keyWords":"radio_priority_configurator","componentId":"radio_priority_configurator","isConfigurable":true,"documentation":"","description":"Adds the Radio Priority Configurator tool to the project.","instantiable":false,"label":"Radio Priority Configurator","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Radio|studiocomproot-Radio-Mac|studiocomproot-Radio-Mac-radio_priority_configurator","isEditable":false,"isEnabled":true,"name":"radio_priority_configurator","isSelected":false,"id":"studiocomproot-Radio-Mac-radio_priority_configurator"}],"isEnabled":true,"name":"Mac","id":"studiocomproot-Radio-Mac","label":"Mac","type":"category"}],"isEnabled":true,"name":"Radio","id":"studiocomproot-Radio","label":"Radio","type":"category"},{"children":[{"children":[{"keyWords":"clock_manager","componentId":"clock_manager","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/clock-manager","description":"The Clock Manager module provides configuration of the different oscillators and the device clock tree through CMSIS Configuration Wizard Annotations C header files. The module also provides an API to initialize the module and functions to perfom a variety of oscillator and clock related operations. This includes:\n - functions to fetch information about oscillators and clock branches frequency and precision.\n - functions to interface the CMU module fonctionality and features like enabling modules' bus clock,\n   RCO calibration, retrieving or setting oscillator calibration values, output clocks on GPIO, etc.\n","instantiable":false,"label":"Clock Manager","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Clock_Manager|studiocomproot-Services-Clock_Manager-clock_manager","isEditable":true,"isEnabled":true,"name":"clock_manager","isSelected":true,"id":"studiocomproot-Services-Clock_Manager-clock_manager"},{"keyWords":"clock_manager_runtime","componentId":"clock_manager_runtime","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init-clocks","description":"The Clock Manager Runtime module provides API functions to perfom a variety of oscillator and clock related operations. This includes:\n - functions to fetch information about oscillators and clock branches frequency and precision.\n - functions to interface the CMU module fonctionality and features like enabling modules' bus clock,\n   RCO calibration, retrieving or setting oscillator calibration values, output clocks on GPIO, etc.\n","instantiable":false,"label":"Clock Manager Runtime","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Clock_Manager|studiocomproot-Services-Clock_Manager-clock_manager_runtime","isEditable":false,"isEnabled":true,"name":"clock_manager_runtime","isSelected":true,"id":"studiocomproot-Services-Clock_Manager-clock_manager_runtime"}],"isEnabled":true,"name":"Clock Manager","id":"studiocomproot-Services-Clock_Manager","label":"Clock Manager","type":"category"},{"children":[{"keyWords":"hfxo_manager","componentId":"hfxo_manager","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/hfxo-manager","description":"HFXO Manager - Manager for the High Frequency Crystal Oscillator","instantiable":false,"label":"HFXO Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Clocks|studiocomproot-Services-Clocks-hfxo_manager","isEditable":true,"isEnabled":true,"name":"hfxo_manager","isSelected":true,"id":"studiocomproot-Services-Clocks-hfxo_manager"}],"isEnabled":true,"name":"Clocks","id":"studiocomproot-Services-Clocks","label":"Clocks","type":"category"},{"children":[{"children":[{"keyWords":"cpc_journal","componentId":"cpc_journal","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/service/api/group-cpc","description":"The Co-Processor Communication (CPC) journal utility is a software component designed to enable developers to log CPC events efficiently.\n","instantiable":false,"label":"CPC Journal Utility","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-CPC_Journal|studiocomproot-Services-Co-Processor_Communication-CPC_Journal-cpc_journal","isEditable":false,"isEnabled":true,"name":"cpc_journal","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-CPC_Journal-cpc_journal"}],"isEnabled":true,"name":"CPC Journal","id":"studiocomproot-Services-Co-Processor_Communication-CPC_Journal","label":"CPC Journal","type":"category"},{"children":[{"keyWords":"cpc_gpio_expander","componentId":"cpc_gpio_expander","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-cpc/cpc","description":"The Co-Processor Communication (CPC) General Purpose Input/Output (GPIO) Expander is a software component designed to enable a CPC Primary/Host device to utilize a Secondary device's GPIOs as if they were its own. With the CPC GPIO Expander, the Primary/Host device can seamlessly integrate with the Secondary device and make use of its GPIO capabilities. This component is dependent on specific pieces of software on the Primary/Host device to facilitate this communication. By enabling this communication, the CPC GPIO Expander expands the capabilities of the Primary/Host device, allowing it to interface with a wider range of devices and peripherals.\n","instantiable":false,"label":"CPC GPIO Expander","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-GPIO_Expander|studiocomproot-Services-Co-Processor_Communication-GPIO_Expander-cpc_gpio_expander","isEditable":false,"isEnabled":true,"name":"cpc_gpio_expander","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-GPIO_Expander-cpc_gpio_expander"},{"keyWords":"cpc_gpio_expander_gpio_instance","componentId":"cpc_gpio_expander_gpio_instance","isConfigurable":true,"documentation":"","description":"This component adds a General Purpose Input/Output (GPIO) instance to the  CPC GPIO expander, allowing it to be exposed to the Primary CPC device.\n","instantiable":true,"label":"CPC GPIO Expander GPIO Instance","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-GPIO_Expander|studiocomproot-Services-Co-Processor_Communication-GPIO_Expander-cpc_gpio_expander_gpio_instance","isEditable":false,"isEnabled":true,"name":"cpc_gpio_expander_gpio_instance","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-GPIO_Expander-cpc_gpio_expander_gpio_instance"}],"isEnabled":true,"name":"GPIO Expander","id":"studiocomproot-Services-Co-Processor_Communication-GPIO_Expander","label":"GPIO Expander","type":"category"},{"children":[{"keyWords":"cpc_nvm3","componentId":"cpc_nvm3","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-cpc/cpc","description":"The Co-Processor Communication (CPC) NVM3 is a software component designed to enable a CPC Primary/Host device to utilize a Secondary NVM3 for storing persistent data.\n","instantiable":false,"label":"CPC NVM3","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-GPIO_NVM3|studiocomproot-Services-Co-Processor_Communication-GPIO_NVM3-cpc_nvm3","isEditable":false,"isEnabled":true,"name":"cpc_nvm3","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-GPIO_NVM3-cpc_nvm3"}],"isEnabled":true,"name":"GPIO NVM3","id":"studiocomproot-Services-Co-Processor_Communication-GPIO_NVM3","label":"GPIO NVM3","type":"category"},{"children":[{"children":[{"keyWords":"cpc_primary_driver_uart_eusart","componentId":"cpc_primary_driver_uart_eusart","isConfigurable":true,"documentation":"","description":"UART driver over EUSART peripheral for Co-Processor Communication (CPC) Primary Device.","instantiable":true,"label":"CPC Primary - UART (EUSART)","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Primary_Device|studiocomproot-Services-Co-Processor_Communication-Primary_Device-Driver|studiocomproot-Services-Co-Processor_Communication-Primary_Device-Driver-cpc_primary_driver_uart_eusart","isEditable":false,"isEnabled":true,"name":"cpc_primary_driver_uart_eusart","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Primary_Device-Driver-cpc_primary_driver_uart_eusart"},{"keyWords":"cpc_primary_driver_uart_usart","componentId":"cpc_primary_driver_uart_usart","isConfigurable":true,"documentation":"","description":"UART driver over USART peripheral for Co-Processor Communication (CPC) Primary Device.","instantiable":true,"label":"CPC Primary - UART (USART)","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Primary_Device|studiocomproot-Services-Co-Processor_Communication-Primary_Device-Driver|studiocomproot-Services-Co-Processor_Communication-Primary_Device-Driver-cpc_primary_driver_uart_usart","isEditable":false,"isEnabled":true,"name":"cpc_primary_driver_uart_usart","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Primary_Device-Driver-cpc_primary_driver_uart_usart"}],"isEnabled":true,"name":"Driver","id":"studiocomproot-Services-Co-Processor_Communication-Primary_Device-Driver","label":"Driver","type":"category"},{"keyWords":"cpc_security_primary_none","componentId":"cpc_security_primary_none","isConfigurable":false,"documentation":"","description":"Disable Co-Processor Communication (CPC) security to reduce memory footprint. This is not  recommended, as the data exchanged between the Primary and Secondary devices will be sent in plain-text over the physical link. \n","instantiable":false,"label":"CPC SECURITY NONE","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Primary_Device|studiocomproot-Services-Co-Processor_Communication-Primary_Device-cpc_security_primary_none","isEditable":false,"isEnabled":true,"name":"cpc_security_primary_none","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Primary_Device-cpc_security_primary_none"},{"keyWords":"cpc_primary","componentId":"cpc_primary","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-cpc/cpc","description":"Co-Processor Communication (CPC) allows for communication between a Primary and a secondary device using a single physical link. Both devices can have multiple endpoints that both produce and consume data and CPC will handle the multiplexing/demultiplexing of the data to the target endpoint. CPC also allows for data encryption, mitigating the risks of transmitting data on an unsecured physical data link.\nThis component implements the CPC Primary on an embedded device, allowing it to communicate to a single secondary CPC device connected to it.\n","instantiable":false,"label":"Primary Device (Host)","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Primary_Device|studiocomproot-Services-Co-Processor_Communication-Primary_Device-cpc_primary","isEditable":false,"isEnabled":true,"name":"cpc_primary","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Primary_Device-cpc_primary"}],"isEnabled":true,"name":"Primary Device","id":"studiocomproot-Services-Co-Processor_Communication-Primary_Device","label":"Primary Device","type":"category"},{"children":[{"children":[{"keyWords":"cpc_secondary_driver_spi_eusart","componentId":"cpc_secondary_driver_spi_eusart","isConfigurable":true,"documentation":"","description":"SPI driver over EUSART peripheral for Co-Processor Communication (CPC) Secondary Device.","instantiable":true,"label":"CPC Secondary - SPI (EUSART)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Secondary_Device|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_driver_spi_eusart","isEditable":false,"isEnabled":true,"name":"cpc_secondary_driver_spi_eusart","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_driver_spi_eusart"},{"keyWords":"cpc_secondary_driver_spi_usart","componentId":"cpc_secondary_driver_spi_usart","isConfigurable":true,"documentation":"","description":"SPI driver over USART peripheral for Co-Processor Communication (CPC) Secondary Device.","instantiable":true,"label":"CPC Secondary - SPI (USART)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Secondary_Device|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_driver_spi_usart","isEditable":false,"isEnabled":true,"name":"cpc_secondary_driver_spi_usart","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_driver_spi_usart"},{"keyWords":"cpc_secondary_driver_uart_eusart","componentId":"cpc_secondary_driver_uart_eusart","isConfigurable":true,"documentation":"","description":"UART driver over EUSART peripheral for Co-Processor Communication (CPC) Secondary Device.","instantiable":true,"label":"CPC Secondary - UART (EUSART)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Secondary_Device|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_driver_uart_eusart","isEditable":false,"isEnabled":true,"name":"cpc_secondary_driver_uart_eusart","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_driver_uart_eusart"},{"keyWords":"cpc_secondary_driver_uart_usart","componentId":"cpc_secondary_driver_uart_usart","isConfigurable":true,"documentation":"","description":"UART driver over USART peripheral for Co-Processor Communication (CPC) Secondary Device.","instantiable":true,"label":"CPC Secondary - UART (USART)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Secondary_Device|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_driver_uart_usart","isEditable":false,"isEnabled":true,"name":"cpc_secondary_driver_uart_usart","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_driver_uart_usart"},{"keyWords":"cpc_secondary_recommended_spi_interface","componentId":"cpc_secondary_recommended_spi_interface","isConfigurable":false,"documentation":"","description":"This component is designed to load the recommended interface for the chosen board. When installed, it automatically loads a SPI instance based on either USART or EUSART for the expansion header. Please note that it is important to uninstall this component before switching to a different type of driver.","instantiable":false,"label":"CPC: Recommended SPI interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Secondary_Device|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_recommended_spi_interface","isEditable":false,"isEnabled":true,"name":"cpc_secondary_recommended_spi_interface","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_recommended_spi_interface"},{"keyWords":"cpc_secondary_recommended_interface","componentId":"cpc_secondary_recommended_interface","isConfigurable":false,"documentation":"","description":"This component is designed to load the recommended interface for the chosen board. When installed, it automatically loads a UART vcom instance based on either USART or EUSART. Please note that it is important to uninstall this component before switching to a different type of driver.","instantiable":false,"label":"CPC: Recommended interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Secondary_Device|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_recommended_interface","isEditable":false,"isEnabled":true,"name":"cpc_secondary_recommended_interface","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver-cpc_secondary_recommended_interface"}],"isEnabled":true,"name":"Driver","id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device-Driver","label":"Driver","type":"category"},{"keyWords":"cpc_security_secondary","componentId":"cpc_security_secondary","isConfigurable":true,"documentation":"","description":"Enable Co-Processor Communication (CPC) security endpoint. The security endpoint is used to encrypt and decrypt the data exchanged between the Primary and Secondary device.\n","instantiable":false,"label":"CPC SECURITY","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Secondary_Device|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-cpc_security_secondary","isEditable":false,"isEnabled":true,"name":"cpc_security_secondary","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device-cpc_security_secondary"},{"keyWords":"cpc_security_secondary_none","componentId":"cpc_security_secondary_none","isConfigurable":false,"documentation":"","description":"Disable Co-Processor Communication (CPC) security to reduce memory footprint. This is not  recommended, as the data exchanged between the Primary and Secondary devices will be sent in plain-text over the physical link. \n","instantiable":false,"label":"CPC SECURITY NONE","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Secondary_Device|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-cpc_security_secondary_none","isEditable":false,"isEnabled":true,"name":"cpc_security_secondary_none","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device-cpc_security_secondary_none"},{"keyWords":"cpc_config_vcom","componentId":"cpc_config_vcom","isConfigurable":false,"documentation":"","description":"This component enables automatic configuration of the UART speed (WSTK/WPK) for the VCOM.","instantiable":true,"label":"CPC: Auto Configure VCOM Speed","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Secondary_Device|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-cpc_config_vcom","isEditable":false,"isEnabled":true,"name":"cpc_config_vcom","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device-cpc_config_vcom"},{"keyWords":"cpc_secondary","componentId":"cpc_secondary","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-cpc/cpc","description":"Co-Processor Communication (CPC) allows for communication between a Primary and a secondary device using a single physical link. Both devices can have multiple endpoints that both produce and consume data and CPC will handle the multiplexing/demultiplexing of the data to the target. CPC also allows for data encryption, mitigating the risks of transmitting data on an unsecured physical data link.\nThis component implements the CPC Secondary device, allowing it to communicate to a Primary device.\n","instantiable":false,"label":"Secondary Device (Co-Processor)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Co-Processor_Communication|studiocomproot-Services-Co-Processor_Communication-Secondary_Device|studiocomproot-Services-Co-Processor_Communication-Secondary_Device-cpc_secondary","isEditable":false,"isEnabled":true,"name":"cpc_secondary","isSelected":false,"id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device-cpc_secondary"}],"isEnabled":true,"name":"Secondary Device","id":"studiocomproot-Services-Co-Processor_Communication-Secondary_Device","label":"Secondary Device","type":"category"}],"isEnabled":true,"name":"Co-Processor Communication","id":"studiocomproot-Services-Co-Processor_Communication","label":"Co-Processor Communication","type":"category"},{"children":[{"children":[{"keyWords":"cli_storage_nvm3","componentId":"cli_storage_nvm3","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/cli-storage-nvm3","description":"A component that lets the application store cli commands in flash using NVM3.  Flash commands are automatically executed at startup.\n","instantiable":true,"label":"CLI: Storage in NVM3","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Command_Line_Interface|studiocomproot-Services-Command_Line_Interface-Extensions|studiocomproot-Services-Command_Line_Interface-Extensions-cli_storage_nvm3","isEditable":false,"isEnabled":true,"name":"cli_storage_nvm3","isSelected":false,"id":"studiocomproot-Services-Command_Line_Interface-Extensions-cli_storage_nvm3"},{"keyWords":"cli_storage_ram","componentId":"cli_storage_ram","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/cli-storage-ram","description":"A component that lets the application store cli commands in RAM.  Flash commands are automatically executed at startup.\n","instantiable":true,"label":"CLI: Storage in RAM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Command_Line_Interface|studiocomproot-Services-Command_Line_Interface-Extensions|studiocomproot-Services-Command_Line_Interface-Extensions-cli_storage_ram","isEditable":false,"isEnabled":true,"name":"cli_storage_ram","isSelected":false,"id":"studiocomproot-Services-Command_Line_Interface-Extensions-cli_storage_ram"}],"isEnabled":true,"name":"Extensions","id":"studiocomproot-Services-Command_Line_Interface-Extensions","label":"Extensions","type":"category"},{"children":[{"keyWords":"cli_simple_password","componentId":"cli_simple_password","isConfigurable":true,"documentation":"","description":"The CLI simple password component provides an access protection to the CLI instance(s); It asks to configure a password at first startup and requires the configured password at the next access. It also includes security mechanisms to limit the number of attempts with invalid passwords.\n","instantiable":false,"label":"CLI: Password protection","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Command_Line_Interface|studiocomproot-Services-Command_Line_Interface-Security|studiocomproot-Services-Command_Line_Interface-Security-cli_simple_password","isEditable":false,"isEnabled":true,"name":"cli_simple_password","isSelected":false,"id":"studiocomproot-Services-Command_Line_Interface-Security-cli_simple_password"}],"isEnabled":true,"name":"Security","id":"studiocomproot-Services-Command_Line_Interface-Security","label":"Security","type":"category"},{"keyWords":"cli_core","componentId":"cli_core","isConfigurable":true,"documentation":"","description":"Configure Global Command line interface parameters common to all CLI instances.","instantiable":false,"label":"CLI Global Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Command_Line_Interface|studiocomproot-Services-Command_Line_Interface-cli_core","isEditable":false,"isEnabled":true,"name":"cli_core","isSelected":false,"id":"studiocomproot-Services-Command_Line_Interface-cli_core"},{"keyWords":"cli","componentId":"cli","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service-cli-overview","description":"The CLI component provides an API to create applications using a command line interface. Configuration options allow enabling command history, advanced input handling (autocompletion, arrows, delete, and so on), and detailed help description for commands and arguments.\nThis component is instantiable and each instance can be bound to different IO Stream interfaces.\n","instantiable":true,"label":"CLI Instance(s)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Command_Line_Interface|studiocomproot-Services-Command_Line_Interface-cli","isEditable":false,"isEnabled":true,"name":"cli","isSelected":false,"id":"studiocomproot-Services-Command_Line_Interface-cli"}],"isEnabled":true,"name":"Command Line Interface","id":"studiocomproot-Services-Command_Line_Interface","label":"Command Line Interface","type":"category"},{"children":[{"children":[{"keyWords":"device_init_clocks","componentId":"device_init_clocks","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init-clocks","description":"Instantiate the component for Clock Tree initialization. This allows for automatic configuration of the clock tree according to what other components are present in the project.\n","instantiable":false,"label":"Clocks","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Initialization|studiocomproot-Services-Device_Initialization-Peripherals|studiocomproot-Services-Device_Initialization-Peripherals-device_init_clocks","isEditable":false,"isEnabled":true,"name":"device_init_clocks","isSelected":false,"id":"studiocomproot-Services-Device_Initialization-Peripherals-device_init_clocks"},{"keyWords":"device_init_core","componentId":"device_init_core","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init","description":"This initialization configures the device to a state as similar to later  revisions as possible to improve software compatibility with newer parts.\n","instantiable":false,"label":"Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Initialization|studiocomproot-Services-Device_Initialization-Peripherals|studiocomproot-Services-Device_Initialization-Peripherals-device_init_core","isEditable":false,"isEnabled":true,"name":"device_init_core","isSelected":true,"id":"studiocomproot-Services-Device_Initialization-Peripherals-device_init_core"},{"keyWords":"device_init_dcdc","componentId":"device_init_dcdc","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init-dcdc","description":"Instantiate the component for DC-DC converter initialization based on the provided component configuration.\n","instantiable":false,"label":"DC-DC Converter","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Initialization|studiocomproot-Services-Device_Initialization-Peripherals|studiocomproot-Services-Device_Initialization-Peripherals-device_init_dcdc","isEditable":true,"isEnabled":true,"name":"device_init_dcdc","isSelected":true,"id":"studiocomproot-Services-Device_Initialization-Peripherals-device_init_dcdc"},{"keyWords":"device_init_dpll","componentId":"device_init_dpll","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init-dpll","description":"Instantiate the component for Digital Phase-Locked Loop (DPLL) initialization and lock for the main High Frequency RC Oscillator (HFRCO), based on the provided component configuration. The reference clock, target oscillator frequency as well as other settings can be specified via the component configuration.\n","instantiable":false,"label":"Digital Phase-Locked Loop (DPLL)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Initialization|studiocomproot-Services-Device_Initialization-Peripherals|studiocomproot-Services-Device_Initialization-Peripherals-device_init_dpll","isEditable":false,"isEnabled":true,"name":"device_init_dpll","isSelected":false,"id":"studiocomproot-Services-Device_Initialization-Peripherals-device_init_dpll"},{"keyWords":"device_init_emu","componentId":"device_init_emu","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init-emu","description":"Instantiate the component for Energy Management Unit (EMU) initialization  based on the provided component configuration. The EM4 behavior such as  voltage scaling levels, state retention, and clock operation can be configured through this component for devices which support these features. This component is not compatible with Power Manager. If Power Manager is present, EMU initialization will be handled during Power Manager initialization.\n","instantiable":false,"label":"Energy Management Unit (EMU)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Initialization|studiocomproot-Services-Device_Initialization-Peripherals|studiocomproot-Services-Device_Initialization-Peripherals-device_init_emu","isEditable":false,"isEnabled":true,"name":"device_init_emu","isSelected":false,"id":"studiocomproot-Services-Device_Initialization-Peripherals-device_init_emu"},{"keyWords":"device_init_hfxo","componentId":"device_init_hfxo","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init-hfxo","description":"Instantiate the component for High Frequency Crystal Oscillator (HFXO) initialization based on the provided configuration.\n","instantiable":false,"label":"High Frequency Crystal Oscillator (HFXO)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Initialization|studiocomproot-Services-Device_Initialization-Peripherals|studiocomproot-Services-Device_Initialization-Peripherals-device_init_hfxo","isEditable":false,"isEnabled":true,"name":"device_init_hfxo","isSelected":false,"id":"studiocomproot-Services-Device_Initialization-Peripherals-device_init_hfxo"},{"keyWords":"device_init_hfrco","componentId":"device_init_hfrco","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init-hfrco","description":"Instantiate the component for High Frequency RC Oscillator (HFRCO)  initialization based on the provided frequency band.\n","instantiable":false,"label":"High Frequency RC Oscillator (HFRCO)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Initialization|studiocomproot-Services-Device_Initialization-Peripherals|studiocomproot-Services-Device_Initialization-Peripherals-device_init_hfrco","isEditable":false,"isEnabled":true,"name":"device_init_hfrco","isSelected":false,"id":"studiocomproot-Services-Device_Initialization-Peripherals-device_init_hfrco"},{"keyWords":"device_init_lfxo","componentId":"device_init_lfxo","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init-lfxo","description":"Initiate the component for Low Frequency Crystal Oscillator (LFXO)  initialization based on the provided configuration, such as crystal accuracy  and startup time delay.\n","instantiable":false,"label":"Low Frequency Crystal Oscillator (LFXO)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Initialization|studiocomproot-Services-Device_Initialization-Peripherals|studiocomproot-Services-Device_Initialization-Peripherals-device_init_lfxo","isEditable":false,"isEnabled":true,"name":"device_init_lfxo","isSelected":false,"id":"studiocomproot-Services-Device_Initialization-Peripherals-device_init_lfxo"},{"keyWords":"device_init_lfrco","componentId":"device_init_lfrco","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init-lfrco","description":"Instantiate the component for Low Frequency RC Oscillator (LFRCO) initialization based on the provided precision configuration.\n","instantiable":false,"label":"Low Frequency RC Oscillator (LFRCO)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Initialization|studiocomproot-Services-Device_Initialization-Peripherals|studiocomproot-Services-Device_Initialization-Peripherals-device_init_lfrco","isEditable":false,"isEnabled":true,"name":"device_init_lfrco","isSelected":false,"id":"studiocomproot-Services-Device_Initialization-Peripherals-device_init_lfrco"},{"keyWords":"device_init_nvic","componentId":"device_init_nvic","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init-nvic","description":"THIS COMPONENT IS DEPRECATED. It is replaced by the component interrupt_manager.\nInitialize the ARM Cortex-M Nested Vector Interrupt Controller (NVIC) by setting all interrupts to the default priority level, except for Fault exceptions. For more details on the NVIC, refer to the ARM Cortex-M documentation.\n","instantiable":false,"label":"Nested Vector Interrupt Controller (NVIC) - DEPRECATED","type":"component","quality":"DEPRECATED","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Initialization|studiocomproot-Services-Device_Initialization-Peripherals|studiocomproot-Services-Device_Initialization-Peripherals-device_init_nvic","isEditable":false,"isEnabled":true,"name":"device_init_nvic","isSelected":false,"id":"studiocomproot-Services-Device_Initialization-Peripherals-device_init_nvic"}],"isEnabled":true,"name":"Peripherals","id":"studiocomproot-Services-Device_Initialization-Peripherals","label":"Peripherals","type":"category"},{"keyWords":"device_init","componentId":"device_init","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-init","description":"This component automatically handles the installation of all required device components for proper MCU operation. The hardware peripherals that will be initialized will depend on the specific device's capabilities. Individual component configuration can be edited by selecting from the \"Peripherals\" sub-menu.\nIf the component \"Clock Manager\" is added to the project, it will take over the peripherals for clocks and oscillators. In that case, this component is still needed for initializing the other peripherals.\nIn the event that the user wants to implement its own initialization routine for any of the peripherals under the \"Peripherals\" sub-menu, it is recommended to uninstall this component, as well as the corresponding peripheral's initialization component.\n","instantiable":false,"label":"Automatic Device Initialization","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Initialization|studiocomproot-Services-Device_Initialization-device_init","isEditable":false,"isEnabled":true,"name":"device_init","isSelected":true,"id":"studiocomproot-Services-Device_Initialization-device_init"}],"isEnabled":true,"name":"Device Initialization","id":"studiocomproot-Services-Device_Initialization","label":"Device Initialization","type":"category"},{"children":[{"keyWords":"device_manager","componentId":"device_manager","isConfigurable":false,"documentation":"","description":"This component handles devices and technologies abstraction.\n","instantiable":false,"label":"Device Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Manager|studiocomproot-Services-Device_Manager-device_manager","isEditable":false,"isEnabled":true,"name":"device_manager","isSelected":true,"id":"studiocomproot-Services-Device_Manager-device_manager"},{"keyWords":"device_clock","componentId":"device_clock","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-manager-clock","description":"The Device Manager Clock component defines the different oscillators, clock branches and bus clock values that exist accross all Silicon Labs devices.\n","instantiable":false,"label":"Device Manager Clock","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Manager|studiocomproot-Services-Device_Manager-device_clock","isEditable":false,"isEnabled":true,"name":"device_clock","isSelected":true,"id":"studiocomproot-Services-Device_Manager-device_clock"},{"keyWords":"device_gpio","componentId":"device_gpio","isConfigurable":false,"documentation":"","description":"The Device Manager GPIO component defines the macros,  structures, and enums that are used common across GPIO driver and peripheral.\n","instantiable":false,"label":"Device Manager GPIO","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Manager|studiocomproot-Services-Device_Manager-device_gpio","isEditable":false,"isEnabled":true,"name":"device_gpio","isSelected":true,"id":"studiocomproot-Services-Device_Manager-device_gpio"},{"keyWords":"device_peripheral","componentId":"device_peripheral","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/device-manager-peripheral","description":"The Device Manager Peripheral component defines the different peripherals that exist accross all Silicon Labs devices and their utility functions.\n","instantiable":false,"label":"Device Manager Peripheral","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Device_Manager|studiocomproot-Services-Device_Manager-device_peripheral","isEditable":false,"isEnabled":true,"name":"device_peripheral","isSelected":true,"id":"studiocomproot-Services-Device_Manager-device_peripheral"}],"isEnabled":true,"name":"Device Manager","id":"studiocomproot-Services-Device_Manager","label":"Device Manager","type":"category"},{"children":[{"keyWords":"legacy_common_ash","componentId":"legacy_common_ash","isConfigurable":true,"documentation":"","description":"Legacy Ember ASH implementation common to both NCP and Host.","instantiable":false,"label":"Legacy Common ASH","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Ember_Legacy|studiocomproot-Services-Ember_Legacy-legacy_common_ash","isEditable":false,"isEnabled":true,"name":"legacy_common_ash","isSelected":false,"id":"studiocomproot-Services-Ember_Legacy-legacy_common_ash"},{"keyWords":"legacy_hal","componentId":"legacy_hal","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/legacyhal","description":"Legacy Ember HAL\nThe Legacy HAL is an implementation of the Hardware Abstraction Layer (HAL) that was used by the Zigbee EmberZNet stack and Flex Connect stack before their transition to the new component-based architecture (Zigbee version 7.0 and Connect version 3.0).  This component is not a complete duplicate of the old HAL. It only contains the most commonly used pieces to enable our networking stacks and sample applications and to support porting customer applications to the new component-based implementation.  Currently, Zigbee and Connect sample applications are dependent on this component.  Eventually, they will be ported to use new HAL components directly so that this  component can become optional or be deprecated.\nThe Legacy HAL component is only designed for Zigbee EmberZNet and Flex Connect stack applications. Do not use with any other stacks as it will likely introduce problems.  Keep in mind not all components that are considered Legacy HAL require the Legacy HAL component itself.\n","instantiable":false,"label":"Legacy HAL","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Ember_Legacy|studiocomproot-Services-Ember_Legacy-legacy_hal","isEditable":false,"isEnabled":true,"name":"legacy_hal","isSelected":false,"id":"studiocomproot-Services-Ember_Legacy-legacy_hal"},{"keyWords":"legacy_hal_wdog","componentId":"legacy_hal_wdog","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/legacyhal","description":"Legacy HAL Watchdog.\n\nSL_LEGACY_HAL_WDOGn chooses which watchdog to use.  By default it's WDOG0.\n\nSL_LEGACY_HAL_DISABLE_WATCHDOG disables calling halInternalEnableWatchDog in base-replacement.c's halInit() even if the component is added.\n","instantiable":false,"label":"Legacy HAL Watchdog","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Ember_Legacy|studiocomproot-Services-Ember_Legacy-legacy_hal_wdog","isEditable":false,"isEnabled":true,"name":"legacy_hal_wdog","isSelected":false,"id":"studiocomproot-Services-Ember_Legacy-legacy_hal_wdog"},{"keyWords":"legacy_host_ash","componentId":"legacy_host_ash","isConfigurable":false,"documentation":"","description":"Legacy Ember ASH implementation for Host.","instantiable":false,"label":"Legacy Host ASH","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Ember_Legacy|studiocomproot-Services-Ember_Legacy-legacy_host_ash","isEditable":false,"isEnabled":true,"name":"legacy_host_ash","isSelected":false,"id":"studiocomproot-Services-Ember_Legacy-legacy_host_ash"},{"keyWords":"legacy_ncp_ash","componentId":"legacy_ncp_ash","isConfigurable":false,"documentation":"","description":"Legacy Ember ASH implementation for NCP.","instantiable":false,"label":"Legacy NCP ASH","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Ember_Legacy|studiocomproot-Services-Ember_Legacy-legacy_ncp_ash","isEditable":false,"isEnabled":true,"name":"legacy_ncp_ash","isSelected":false,"id":"studiocomproot-Services-Ember_Legacy-legacy_ncp_ash"},{"keyWords":"legacy_ncp_spi","componentId":"legacy_ncp_spi","isConfigurable":true,"documentation":"","description":"Legacy SPI implementation for NCP.","instantiable":false,"label":"SPI NCP Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Ember_Legacy|studiocomproot-Services-Ember_Legacy-legacy_ncp_spi","isEditable":false,"isEnabled":true,"name":"legacy_ncp_spi","isSelected":false,"id":"studiocomproot-Services-Ember_Legacy-legacy_ncp_spi"}],"isEnabled":true,"name":"Ember Legacy","id":"studiocomproot-Services-Ember_Legacy","label":"Ember Legacy","type":"category"},{"children":[{"children":[{"keyWords":"iostream_vuart","componentId":"iostream_vuart","isConfigurable":true,"documentation":"","description":"Instantiate the driver for using IO Stream over the Virtual UART (VUART)  pseudo-peripheral. VUART is a special interface where RTT is used as  input channel and the Single Wire Output(SWO) is used as output channel.\n","instantiable":false,"label":"IO Stream VUART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-IO_Stream|studiocomproot-Services-IO_Stream-Driver|studiocomproot-Services-IO_Stream-Driver-iostream_vuart","isEditable":false,"isEnabled":true,"name":"iostream_vuart","isSelected":false,"id":"studiocomproot-Services-IO_Stream-Driver-iostream_vuart"},{"keyWords":"iostream_debug","componentId":"iostream_debug","isConfigurable":false,"documentation":"","description":"Instantiate the driver for using IO Stream over the Single Wire Output (SWO) Stimulus 8 debug peripheral.","instantiable":false,"label":"IO Stream debug","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-IO_Stream|studiocomproot-Services-IO_Stream-Driver|studiocomproot-Services-IO_Stream-Driver-iostream_debug","isEditable":false,"isEnabled":true,"name":"iostream_debug","isSelected":false,"id":"studiocomproot-Services-IO_Stream-Driver-iostream_debug"},{"keyWords":"iostream_cpc","componentId":"iostream_cpc","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-cpc","description":"Instantiate the driver for using IO Stream over the Co-Processor Communication (CPC) protocol. Note that the physical link used to transmit the data can be selected via the configuration of CPC.\n","instantiable":false,"label":"IO Stream: CPC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-IO_Stream|studiocomproot-Services-IO_Stream-Driver|studiocomproot-Services-IO_Stream-Driver-iostream_cpc","isEditable":false,"isEnabled":true,"name":"iostream_cpc","isSelected":false,"id":"studiocomproot-Services-IO_Stream-Driver-iostream_cpc"},{"keyWords":"iostream_eusart","componentId":"iostream_eusart","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-eusart","description":"Instantiate the driver for using IO Stream over the Enhanced Universal Synchronous Asynchronous Receiver Transceiver (EUSART) peripheral.\n","instantiable":true,"label":"IO Stream: EUSART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-IO_Stream|studiocomproot-Services-IO_Stream-Driver|studiocomproot-Services-IO_Stream-Driver-iostream_eusart","isEditable":false,"isEnabled":true,"name":"iostream_eusart","isSelected":false,"id":"studiocomproot-Services-IO_Stream-Driver-iostream_eusart"},{"keyWords":"iostream_rtt","componentId":"iostream_rtt","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-rtt","description":"Instantiate the driver for using IO Stream over the SEGGER Real-Time Transfer (RTT) peripheral.\n","instantiable":false,"label":"IO Stream: RTT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-IO_Stream|studiocomproot-Services-IO_Stream-Driver|studiocomproot-Services-IO_Stream-Driver-iostream_rtt","isEditable":false,"isEnabled":true,"name":"iostream_rtt","isSelected":false,"id":"studiocomproot-Services-IO_Stream-Driver-iostream_rtt"},{"keyWords":"iostream_swo","componentId":"iostream_swo","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-swo","description":"Instantiate the driver for using IO Stream over the Single Wire Output (SWO) peripheral.\n","instantiable":false,"label":"IO Stream: SWO","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-IO_Stream|studiocomproot-Services-IO_Stream-Driver|studiocomproot-Services-IO_Stream-Driver-iostream_swo","isEditable":false,"isEnabled":true,"name":"iostream_swo","isSelected":false,"id":"studiocomproot-Services-IO_Stream-Driver-iostream_swo"},{"keyWords":"iostream_uart_si91x","componentId":"iostream_uart_si91x","isConfigurable":false,"documentation":"","description":"Instantiate the driver for using IO Stream over the Universal Asynchronous Receiver Transceiver (UART) peripheral.\n","instantiable":true,"label":"IO Stream: Si91x UART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-IO_Stream|studiocomproot-Services-IO_Stream-Driver|studiocomproot-Services-IO_Stream-Driver-iostream_uart_si91x","isEditable":false,"isEnabled":true,"name":"iostream_uart_si91x","isSelected":false,"id":"studiocomproot-Services-IO_Stream-Driver-iostream_uart_si91x"},{"keyWords":"iostream_usart","componentId":"iostream_usart","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-usart","description":"Instantiate the driver for using IO Stream over the Universal Synchronous Asynchronous Receiver Transceiver (USART) peripheral.\n","instantiable":true,"label":"IO Stream: USART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-IO_Stream|studiocomproot-Services-IO_Stream-Driver|studiocomproot-Services-IO_Stream-Driver-iostream_usart","isEditable":false,"isEnabled":true,"name":"iostream_usart","isSelected":false,"id":"studiocomproot-Services-IO_Stream-Driver-iostream_usart"}],"isEnabled":true,"name":"Driver","id":"studiocomproot-Services-IO_Stream-Driver","label":"Driver","type":"category"},{"keyWords":"iostream","componentId":"iostream","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream","description":"The IO Stream component allows to read/write data using a variety of physical communication interfaces, or Streams. This allows for standardized data transfer operations while abstracting the underlying interface. IO Stream also enables the implementation of the printf standard C function, using the configured Stream, making it easier to send formatted data over a physical link. For IO Stream to be able to use a physical link, the corresponding IO Stream driver component must be added to your project. Note that a project may have multiple instances of IO Stream, allowing for communication over multiple physical links at the same time.\n","instantiable":false,"label":"IO Stream","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-IO_Stream|studiocomproot-Services-IO_Stream-iostream","isEditable":false,"isEnabled":true,"name":"iostream","isSelected":true,"id":"studiocomproot-Services-IO_Stream-iostream"},{"keyWords":"iostream_retarget_stdio","componentId":"iostream_retarget_stdio","isConfigurable":false,"documentation":"","description":"Retarget STDIO to IOStream.","instantiable":false,"label":"IO Stream: Retarget STDIO","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-IO_Stream|studiocomproot-Services-IO_Stream-iostream_retarget_stdio","isEditable":false,"isEnabled":true,"name":"iostream_retarget_stdio","isSelected":true,"id":"studiocomproot-Services-IO_Stream-iostream_retarget_stdio"},{"keyWords":"iostream_stdlib_config","componentId":"iostream_stdlib_config","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/iostream-stdlib-cfg","description":"Disable newlib/nanolib line buffering","instantiable":false,"label":"IO Stream: STDLIB Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-IO_Stream|studiocomproot-Services-IO_Stream-iostream_stdlib_config","isEditable":false,"isEnabled":true,"name":"iostream_stdlib_config","isSelected":true,"id":"studiocomproot-Services-IO_Stream-iostream_stdlib_config"}],"isEnabled":true,"name":"IO Stream","id":"studiocomproot-Services-IO_Stream","label":"IO Stream","type":"category"},{"children":[{"keyWords":"ram_interrupt_vector_init","componentId":"ram_interrupt_vector_init","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/ram-interrupt-vector-init","description":"THIS COMPONENT IS DEPRECATED. It is replaced by the component interrupt_manager.\nInstantiate the RAM interrupt vector component. This copies the interrupt vector table from flash to RAM and modifies the VTOR register to point to that location in RAM.\n","instantiable":false,"label":"RAM interrupt vector initialization - DEPRECATED","type":"component","quality":"DEPRECATED","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Interrupt|studiocomproot-Services-Interrupt-ram_interrupt_vector_init","isEditable":false,"isEnabled":true,"name":"ram_interrupt_vector_init","isSelected":false,"id":"studiocomproot-Services-Interrupt-ram_interrupt_vector_init"}],"isEnabled":true,"name":"Interrupt","id":"studiocomproot-Services-Interrupt","label":"Interrupt","type":"category"},{"children":[{"keyWords":"interrupt_manager","componentId":"interrupt_manager","isConfigurable":true,"documentation":"","description":"This component provides different APIs to manage embedded interrupts. It allows devices to set the affinity of an interrupt, to enable/disable interrupts, set priority and copy the vector table in RAM.\n","instantiable":false,"label":"Interrupt Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Interrupt_Manager|studiocomproot-Services-Interrupt_Manager-interrupt_manager","isEditable":true,"isEnabled":true,"name":"interrupt_manager","isSelected":true,"id":"studiocomproot-Services-Interrupt_Manager-interrupt_manager"},{"keyWords":"interrupt_manager_vector_table_in_ram","componentId":"interrupt_manager_vector_table_in_ram","isConfigurable":false,"documentation":"","description":"Specify that Interrupt Manager copy the interrupt vector in flash to RAM during initialization\n","instantiable":false,"label":"interrupt Manager: Set interrupt vector in RAM.","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Interrupt_Manager|studiocomproot-Services-Interrupt_Manager-interrupt_manager_vector_table_in_ram","isEditable":false,"isEnabled":true,"name":"interrupt_manager_vector_table_in_ram","isSelected":false,"id":"studiocomproot-Services-Interrupt_Manager-interrupt_manager_vector_table_in_ram"}],"isEnabled":true,"name":"Interrupt Manager","id":"studiocomproot-Services-Interrupt_Manager","label":"Interrupt Manager","type":"category"},{"children":[{"keyWords":"memory_manager","componentId":"memory_manager","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/memory-manager","description":"This component provides different APIs to manage embedded dynamic memory allocations. Different memory management constructs are supported. * Dynamic allocation/free: dynamically allocate and free memory blocks of various sizes. * Memory pools: reserve a chunk of memory large enough to hold a number of fixed-size blocks. This construct should only be used for models where a random dynamic memory allocation failure would be irrecoverable. * Dynamic reservation/free: similar to the dynamic allocation to reserve and free a block. A reserved block is meant to have a long life duration during the application execution. * Memory regions: Provides configuration and getter function of the C stack and heap for the supported toolchains. For GCC, it also adds support for _sbrk() for heap allocation. It is used in the newlib version of malloc().\n","instantiable":false,"label":"Memory Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Memory_Manager|studiocomproot-Services-Memory_Manager-memory_manager","isEditable":true,"isEnabled":true,"name":"memory_manager","isSelected":true,"id":"studiocomproot-Services-Memory_Manager-memory_manager"},{"keyWords":"memory_manager_cpp","componentId":"memory_manager_cpp","isConfigurable":false,"documentation":"","description":"This component adds C++ support to the Memory Manager. The C++ new/delete constructs are globally overloaded. New and delete respectively call the Memory Manager sl_memory_alloc() and sl_memory_free() functions. Hence, any C++ Simplicity SDK stacks such as OpenThread, Matter, AoX RTLLib doing dynamic memory allocations via the classic C++ new/delete or any standard containers will call under the hood the Memory Manager API.\n","instantiable":false,"label":"Memory Manager C++ Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Memory_Manager|studiocomproot-Services-Memory_Manager-memory_manager_cpp","isEditable":false,"isEnabled":true,"name":"memory_manager_cpp","isSelected":false,"id":"studiocomproot-Services-Memory_Manager-memory_manager_cpp"},{"keyWords":"memory_manager_pool","componentId":"memory_manager_pool","isConfigurable":false,"documentation":"","description":"This component provides a memory pool API. This API allows to reserve a chunk of memory large enough to hold a number of fixed-size blocks. This construct should only be used for models where a random dynamic memory allocation failure would be irrecoverable. It should also be favored if the determinism during the execution time of the block allocation and free operations is important. The Memory Manager also offers another memory pool API called Memory Pool Power Aware. The Memory Manager Memory Pool API offers a smaller memory footprint in RAM compared to the Memory Pool Power Aware.\n","instantiable":false,"label":"Memory Manager Memory Pool","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Memory_Manager|studiocomproot-Services-Memory_Manager-memory_manager_pool","isEditable":false,"isEnabled":true,"name":"memory_manager_pool","isSelected":true,"id":"studiocomproot-Services-Memory_Manager-memory_manager_pool"},{"keyWords":"memory_manager_pool_power_aware","componentId":"memory_manager_pool_power_aware","isConfigurable":false,"documentation":"","description":"This component provides a memory pool API. This API allows to reserve a chunk of memory large enough to hold a number of fixed-size blocks. This construct should only be used for models where a random dynamic memory allocation failure would be irrecoverable. The Memory Manager also offers another memory pool API called Memory Pool. The Memory Manager Memory Pool Power Aware API has a bigger memory footprint in RAM compared to the Memory Pool but offers a better placement in RAM to limit the heap fragmentation.\n","instantiable":false,"label":"Memory Manager Memory Pool Power Aware","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Memory_Manager|studiocomproot-Services-Memory_Manager-memory_manager_pool_power_aware","isEditable":false,"isEnabled":true,"name":"memory_manager_pool_power_aware","isSelected":false,"id":"studiocomproot-Services-Memory_Manager-memory_manager_pool_power_aware"},{"keyWords":"memory_manager_redirect","componentId":"memory_manager_redirect","isConfigurable":false,"documentation":"","description":"This component provides an API similar to the memory manager API but redirects the memory management functions to use the standard library versions. It is useful for components that do not yet support advanced memory management features, such as long-term and short-term block allocation.\n","instantiable":false,"label":"Memory Manager Redirect","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Memory_Manager|studiocomproot-Services-Memory_Manager-memory_manager_redirect","isEditable":false,"isEnabled":true,"name":"memory_manager_redirect","isSelected":false,"id":"studiocomproot-Services-Memory_Manager-memory_manager_redirect"},{"keyWords":"memory_manager_region","componentId":"memory_manager_region","isConfigurable":true,"documentation":"","description":"This component provides configuration and getter functions for the C stack and heap for the supported toolchains. For GCC, also adds support for _sbrk() for heap allocation. It is used in the newlib version of malloc().\n","instantiable":false,"label":"Memory Manager region","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Memory_Manager|studiocomproot-Services-Memory_Manager-memory_manager_region","isEditable":true,"isEnabled":true,"name":"memory_manager_region","isSelected":true,"id":"studiocomproot-Services-Memory_Manager-memory_manager_region"},{"keyWords":"memory_profiler","componentId":"memory_profiler","isConfigurable":true,"documentation":"","description":"Silicon Labs internal utility for memory usage profiling. Use this component to record a Memory Profiler trace if instructed by Silicon Labs.\n","instantiable":false,"label":"Memory Profiler","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Memory_Manager|studiocomproot-Services-Memory_Manager-memory_profiler","isEditable":false,"isEnabled":true,"name":"memory_profiler","isSelected":false,"id":"studiocomproot-Services-Memory_Manager-memory_profiler"},{"keyWords":"memory_profiler_api","componentId":"memory_profiler_api","isConfigurable":false,"documentation":"","description":"Provides an internal API for Silicon Labs components that need to profile memory usage with the Memory Profiler tool. This API component gives Silicon Labs components access to the Memory Profiler API header without forcing the Memory Profiler functionality to be included in the application build. Use the component <memory_profiler> to enable the tracing of the Memory Profiler events in the application.\n","instantiable":false,"label":"Memory Profiler API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Memory_Manager|studiocomproot-Services-Memory_Manager-memory_profiler_api","isEditable":false,"isEnabled":true,"name":"memory_profiler_api","isSelected":true,"id":"studiocomproot-Services-Memory_Manager-memory_profiler_api"}],"isEnabled":true,"name":"Memory Manager","id":"studiocomproot-Services-Memory_Manager","label":"Memory Manager","type":"category"},{"children":[{"children":[{"keyWords":"micriumos_common_lib","componentId":"micriumos_common_lib","isConfigurable":false,"documentation":"","description":"Micrium OS Extension to Common libraries provide additional libraries that are not essential to the kernel","instantiable":false,"label":"Micrium OS Common Libraries Module","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Micrium|studiocomproot-Services-Micrium-Common|studiocomproot-Services-Micrium-Common-micriumos_common_lib","isEditable":false,"isEnabled":true,"name":"micriumos_common_lib","isSelected":false,"id":"studiocomproot-Services-Micrium-Common-micriumos_common_lib"},{"keyWords":"micriumos_common_lib_mem_asm","componentId":"micriumos_common_lib_mem_asm","isConfigurable":false,"documentation":"","description":"Use an optimized Mem_Copy in assembly","instantiable":false,"label":"Micrium OS Common Libraries Optimized Mem Copy","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Micrium|studiocomproot-Services-Micrium-Common|studiocomproot-Services-Micrium-Common-micriumos_common_lib_mem_asm","isEditable":false,"isEnabled":true,"name":"micriumos_common_lib_mem_asm","isSelected":false,"id":"studiocomproot-Services-Micrium-Common-micriumos_common_lib_mem_asm"},{"keyWords":"micriumos_common_core","componentId":"micriumos_common_core","isConfigurable":true,"documentation":"","description":"Micrium OS Common Module Core","instantiable":false,"label":"Micrium OS Common Module Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Micrium|studiocomproot-Services-Micrium-Common|studiocomproot-Services-Micrium-Common-micriumos_common_core","isEditable":false,"isEnabled":true,"name":"micriumos_common_core","isSelected":false,"id":"studiocomproot-Services-Micrium-Common-micriumos_common_core"},{"keyWords":"micriumos_common_shell","componentId":"micriumos_common_shell","isConfigurable":false,"documentation":"","description":"Micrium OS Common Shell","instantiable":false,"label":"Shell","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Micrium|studiocomproot-Services-Micrium-Common|studiocomproot-Services-Micrium-Common-micriumos_common_shell","isEditable":false,"isEnabled":true,"name":"micriumos_common_shell","isSelected":false,"id":"studiocomproot-Services-Micrium-Common-micriumos_common_shell"}],"isEnabled":true,"name":"Common","id":"studiocomproot-Services-Micrium-Common","label":"Common","type":"category"}],"isEnabled":true,"name":"Micrium","id":"studiocomproot-Services-Micrium","label":"Micrium","type":"category"},{"children":[{"keyWords":"nvm3_lib","componentId":"nvm3_lib","isConfigurable":false,"documentation":"","description":"The NVM3 driver provides a means to write and read data objects (key/value pairs) stored in flash. Wear-leveling is applied to reduce erase and write cycles and maximize flash lifetime. The driver is resilient to power loss and reset events, ensuring that objects retrieved from the driver are always in a valid state. A single NVM3 instance can be shared among several wireless stacks and application code, making it well-suited for multiprotocol applications.\n\nThis component includes only the NVM3 driver core. To configure and create the default instance of this driver, the NVM3 Default Instance component should be included in the project.\n","instantiable":false,"label":"NVM3 Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-NVM3|studiocomproot-Services-NVM3-nvm3_lib","isEditable":false,"isEnabled":true,"name":"nvm3_lib","isSelected":false,"id":"studiocomproot-Services-NVM3-nvm3_lib"},{"keyWords":"nvm3_source","componentId":"nvm3_source","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/nvm3","description":"The NVM3 driver provides a means to write and read data objects (key/value pairs) stored in flash. Wear-leveling is applied to reduce erase and write cycles and maximize flash lifetime. The driver is resilient to power loss and reset events, ensuring that objects retrieved from the driver are always in a valid state. A single NVM3 instance can be shared among several wireless stacks and application code, making it well-suited for multiprotocol applications.\n\nThis component includes only the NVM3 driver core. To configure and create the default instance of this driver, the NVM3 Default Instance component should be included in the project.\nThis component allows secure read/write and storage for NVM3 based on device specific selection of this feature (nvm3_secure).\n","instantiable":false,"label":"NVM3 Core (source)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-NVM3|studiocomproot-Services-NVM3-nvm3_source","isEditable":false,"isEnabled":true,"name":"nvm3_source","isSelected":true,"id":"studiocomproot-Services-NVM3-nvm3_source"},{"keyWords":"nvm3_default_config","componentId":"nvm3_default_config","isConfigurable":true,"documentation":"","description":"","instantiable":false,"label":"NVM3 Default Config","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-NVM3|studiocomproot-Services-NVM3-nvm3_default_config","isEditable":true,"isEnabled":true,"name":"nvm3_default_config","isSelected":true,"id":"studiocomproot-Services-NVM3-nvm3_default_config"},{"keyWords":"nvm3_default","componentId":"nvm3_default","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-driver/nvm3default","description":"This component provides functions to initialize/deinitialize the default NVM3 instance. The instance can be accessed with the NVM3 API by using the nvm3_defaultHandle provided in nvm3_default.h as the nvm3_Handle_t pointer.\n\nIf the Services->Runtime->System Setup component is included in a project, the default instance will be initialized automatically, using the default instance configuration, during the sl_system_init() call in main.c.\n\nSelecting this component will also include the NVM3 Core component, which is the implementation of the NVM3 driver itself.\n","instantiable":false,"label":"NVM3 Default Instance","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-NVM3|studiocomproot-Services-NVM3-nvm3_default","isEditable":false,"isEnabled":true,"name":"nvm3_default","isSelected":true,"id":"studiocomproot-Services-NVM3-nvm3_default"},{"keyWords":"nvm3_default_flash_backend","componentId":"nvm3_default_flash_backend","isConfigurable":false,"documentation":"","description":"This component initialize/deinitialize the default NVM3 instance in flash. The instance can be accessed with the NVM3 API by using the nvm3_defaultHandle provided in nvm3_default.h as the nvm3_Handle_t pointer.\n","instantiable":false,"label":"NVM3 back-end for default instance in flash","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-NVM3|studiocomproot-Services-NVM3-nvm3_default_flash_backend","isEditable":false,"isEnabled":true,"name":"nvm3_default_flash_backend","isSelected":true,"id":"studiocomproot-Services-NVM3-nvm3_default_flash_backend"},{"keyWords":"nvm3_optimization_disable","componentId":"nvm3_optimization_disable","isConfigurable":false,"documentation":"","description":"This component disables NVM3 init and cache lookup time optimization.\n","instantiable":false,"label":"NVM3 disable optimization","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-NVM3|studiocomproot-Services-NVM3-nvm3_optimization_disable","isEditable":false,"isEnabled":true,"name":"nvm3_optimization_disable","isSelected":true,"id":"studiocomproot-Services-NVM3-nvm3_optimization_disable"},{"keyWords":"nvm3_optimization_enable","componentId":"nvm3_optimization_enable","isConfigurable":false,"documentation":"","description":"Enabling this component improves the NVM3 init time and object lookup time. Code size increases ~1248 bytes with NVM3 optimization enabled.\n","instantiable":false,"label":"NVM3 enable optimization","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-NVM3|studiocomproot-Services-NVM3-nvm3_optimization_enable","isEditable":false,"isEnabled":true,"name":"nvm3_optimization_enable","isSelected":false,"id":"studiocomproot-Services-NVM3-nvm3_optimization_enable"}],"isEnabled":true,"name":"NVM3","id":"studiocomproot-Services-NVM3","label":"NVM3","type":"category"},{"children":[{"keyWords":"power_manager","componentId":"power_manager","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service-power-manager-overview","description":"Instantiate the Power Manager (PM) component for managing the power consumption of the MCU. The PM will shut down the high-frequency clock and put the system in lower Energy Modes (EM) when possible. The PM also allows the user to register certain callback that will be executed when going into/out of certain EM. This allows the user to carry out any bookkeeping following EM transition events.\n","instantiable":false,"label":"Power Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Power_Manager|studiocomproot-Services-Power_Manager-power_manager","isEditable":true,"isEnabled":true,"name":"power_manager","isSelected":true,"id":"studiocomproot-Services-Power_Manager-power_manager"},{"keyWords":"power_manager_deepsleep","componentId":"power_manager_deepsleep","isConfigurable":false,"documentation":"","description":"Power Manager default configuration supporting deepsleep (EM2/EM3),\nunless the project requires power_manager_no_deepsleep thus signifying\ndeepsleep is not required.\n","instantiable":false,"label":"Power Manager: Deepsleep","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Power_Manager|studiocomproot-Services-Power_Manager-power_manager_deepsleep","isEditable":false,"isEnabled":true,"name":"power_manager_deepsleep","isSelected":true,"id":"studiocomproot-Services-Power_Manager-power_manager_deepsleep"},{"keyWords":"power_manager_no_deepsleep","componentId":"power_manager_no_deepsleep","isConfigurable":false,"documentation":"","description":"Power Manager when a project\u2019s configuration specifies EM1 as the lowest \nenergy mode. Therefore, deepsleep (EM2/EM3) is not supported meaning \nHFXO Manager is not required and can be excluded in order to reduce code size.\n","instantiable":false,"label":"Power Manager: No Deepsleep","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Power_Manager|studiocomproot-Services-Power_Manager-power_manager_no_deepsleep","isEditable":false,"isEnabled":true,"name":"power_manager_no_deepsleep","isSelected":false,"id":"studiocomproot-Services-Power_Manager-power_manager_no_deepsleep"}],"isEnabled":true,"name":"Power Manager","id":"studiocomproot-Services-Power_Manager","label":"Power Manager","type":"category"},{"children":[{"keyWords":"sl_system","componentId":"sl_system","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/system","description":"The System Setup component provides a set of events that can be used by\nother components to register handlers that should be run when the system\nis initialized and is running. For a detailed list of the handlers that can be\nregistered using the Event Handler API and a usage example, please refer to \nthe documentation.","instantiable":false,"label":"System Setup","type":"component","quality":"PRODUCTION","isUserSelected":true,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-System_Setup|studiocomproot-Services-System_Setup-sl_system","isEditable":false,"isEnabled":true,"name":"sl_system","isSelected":true,"id":"studiocomproot-Services-System_Setup-sl_system"}],"isEnabled":true,"name":"System Setup","id":"studiocomproot-Services-System_Setup","label":"System Setup","type":"category"},{"children":[{"keyWords":"sleeptimer","componentId":"sleeptimer","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/sleeptimer","description":"The Sleeptimer driver provides software timers, delays, timekeeping and date functionalities using a low-frequency real-time clock peripheral. Sleep Timer uses one Hardware Timer and creates multiple software timer instances. Sleep Timer can be used for creating timers which are tightly integrated with power management. The Power Manager requires precision timing to have all clocks ready on time, so that wakeup happens a little bit earlier to prepare the system to be ready at the right time. If SYSRTC is chosen as the Timer Peripheral used by Sleeptimer, the Peripheral Reflex System (PRS) channel 1 and 2 will be used by Sleeptimer and become unavailable.\n","instantiable":false,"label":"Sleep Timer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Timers|studiocomproot-Services-Timers-sleeptimer","isEditable":true,"isEnabled":true,"name":"sleeptimer","isSelected":true,"id":"studiocomproot-Services-Timers-sleeptimer"}],"isEnabled":true,"name":"Timers","id":"studiocomproot-Services-Timers","label":"Timers","type":"category"},{"children":[{"keyWords":"token_manager","componentId":"token_manager","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/token-manager","description":"Token Manager. This component requires a compatible stack which are ZigBee or Connect.","instantiable":false,"label":"Token Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Token_Manager|studiocomproot-Services-Token_Manager-token_manager","isEditable":false,"isEnabled":true,"name":"token_manager","isSelected":false,"id":"studiocomproot-Services-Token_Manager-token_manager"},{"keyWords":"token_manager_test","componentId":"token_manager_test","isConfigurable":false,"documentation":"","description":"Tester component to satisfy the required compatible stack.","instantiable":false,"label":"Token Manager Test","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Token_Manager|studiocomproot-Services-Token_Manager-token_manager_test","isEditable":false,"isEnabled":true,"name":"token_manager_test","isSelected":false,"id":"studiocomproot-Services-Token_Manager-token_manager_test"},{"keyWords":"token_manager_nvm3","componentId":"token_manager_nvm3","isConfigurable":false,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/platform-service/token-manager","description":"Token Manager using NVM3 for storage.","instantiable":false,"label":"Token Manager using NVM3","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Services|studiocomproot-Services-Token_Manager|studiocomproot-Services-Token_Manager-token_manager_nvm3","isEditable":false,"isEnabled":true,"name":"token_manager_nvm3","isSelected":false,"id":"studiocomproot-Services-Token_Manager-token_manager_nvm3"}],"isEnabled":true,"name":"Token Manager","id":"studiocomproot-Services-Token_Manager","label":"Token Manager","type":"category"}],"isEnabled":true,"name":"Services","id":"studiocomproot-Services","label":"Services","type":"category"},{"children":[{"children":[{"children":[{"keyWords":"iot_ble","componentId":"iot_ble","isConfigurable":true,"documentation":"","description":"Silicon Labs' HAL Implementation of FreeRTOS Bluetooth Low Energy API","instantiable":false,"label":"IoT BLE","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Bluetooth_Low_Energy|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Bluetooth_Low_Energy-iot_ble","isEditable":false,"isEnabled":true,"name":"iot_ble","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Bluetooth_Low_Energy-iot_ble"}],"isEnabled":true,"name":"Bluetooth Low Energy","id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Bluetooth_Low_Energy","label":"Bluetooth Low Energy","type":"category"},{"children":[{"keyWords":"iot_appversion32","componentId":"iot_appversion32","isConfigurable":false,"documentation":"","description":"C SDK App Version Headers.","instantiable":false,"label":"IoT App Version 32","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_appversion32","isEditable":false,"isEnabled":true,"name":"iot_appversion32","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_appversion32"},{"keyWords":"iot_atomic","componentId":"iot_atomic","isConfigurable":false,"documentation":"","description":"C SDK Atomic Operations Library.","instantiable":false,"label":"IoT Atomic","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_atomic","isEditable":false,"isEnabled":true,"name":"iot_atomic","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_atomic"},{"keyWords":"iot_config_common","componentId":"iot_config_common","isConfigurable":false,"documentation":"","description":"Common configurations for Iot components.","instantiable":false,"label":"IoT Config Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_config_common","isEditable":false,"isEnabled":true,"name":"iot_config_common","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_config_common"},{"keyWords":"iot_default_root_certificates","componentId":"iot_default_root_certificates","isConfigurable":false,"documentation":"","description":"C SDK Default Root Certificates Headers.","instantiable":false,"label":"IoT Default Root Certificates","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_default_root_certificates","isEditable":false,"isEnabled":true,"name":"iot_default_root_certificates","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_default_root_certificates"},{"keyWords":"iot_device_metrics","componentId":"iot_device_metrics","isConfigurable":false,"documentation":"","description":"C SDK Device Metrics Utility.","instantiable":false,"label":"IoT Device Metrics","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_device_metrics","isEditable":false,"isEnabled":true,"name":"iot_device_metrics","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_device_metrics"},{"keyWords":"iot_doubly_linked_list","componentId":"iot_doubly_linked_list","isConfigurable":false,"documentation":"","description":"C SDK Doubly Linked List Library.","instantiable":false,"label":"IoT Doubly Linked List","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_doubly_linked_list","isEditable":false,"isEnabled":true,"name":"iot_doubly_linked_list","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_doubly_linked_list"},{"keyWords":"iot_error","componentId":"iot_error","isConfigurable":false,"documentation":"","description":"C SDK Error Definitions.","instantiable":false,"label":"IoT Error","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_error","isEditable":false,"isEnabled":true,"name":"iot_error","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_error"},{"keyWords":"iot_https_client","componentId":"iot_https_client","isConfigurable":false,"documentation":"","description":"C SDK HTTPS client library","instantiable":false,"label":"IoT HTTPS Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_https_client","isEditable":false,"isEnabled":true,"name":"iot_https_client","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_https_client"},{"keyWords":"iot_init","componentId":"iot_init","isConfigurable":false,"documentation":"","description":"C SDK Init Helper","instantiable":false,"label":"IoT Init","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_init","isEditable":false,"isEnabled":true,"name":"iot_init","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_init"},{"keyWords":"iot_lib_init","componentId":"iot_lib_init","isConfigurable":false,"documentation":"","description":"C SDK Libraries Init Helper","instantiable":false,"label":"IoT Lib Init","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_lib_init","isEditable":false,"isEnabled":true,"name":"iot_lib_init","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_lib_init"},{"keyWords":"iot_linear_containers","componentId":"iot_linear_containers","isConfigurable":false,"documentation":"","description":"C SDK Linear Containers Library.","instantiable":false,"label":"IoT Linear Containers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_linear_containers","isEditable":false,"isEnabled":true,"name":"iot_linear_containers","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_linear_containers"},{"keyWords":"iot_logging_headers","componentId":"iot_logging_headers","isConfigurable":false,"documentation":"","description":"C SDK Logging Headers for IoT Logging Component.","instantiable":false,"label":"IoT Logging Headers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_logging_headers","isEditable":false,"isEnabled":true,"name":"iot_logging_headers","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_logging_headers"},{"keyWords":"iot_mqtt","componentId":"iot_mqtt","isConfigurable":false,"documentation":"","description":"C SDK for MQTT Note: The version provided with Simplicity SDK is present for running aws_test and validate the  low-level implementation of IoT API. This module is not used internally by any Silicon Labs  component. Be aware that The MQTT used by aws_test contains the following security vulnerability:  CVE-2019-13120 - \"Amazon FreeRTOS up to and including v1.4.8 lacks length checking in  prvProcessReceivedPublish, resulting in untargetable leakage of arbitrary memory contents  on a device to an attacker. If an attacker has the authorization to send a malformed MQTT  publish packet to an Amazon IoT Thing, which interacts with an associated vulnerable MQTT  message in the application, specific circumstances could trigger this vulnerability.\"\n","instantiable":false,"label":"IoT MQTT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_mqtt","isEditable":false,"isEnabled":true,"name":"iot_mqtt","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_mqtt"},{"keyWords":"lib_abstract_backoff_algorithm","componentId":"lib_abstract_backoff_algorithm","isConfigurable":false,"documentation":"","description":"C SDK for MQTT Note: The version provided with Simplicity SDK is present for running aws_test and validate the  low-level implementation of IoT API. This module is not used internally by any Silicon Labs  component. Be aware that The MQTT used by aws_test contains the following security vulnerability:  CVE-2019-13120 - \"Amazon FreeRTOS up to and including v1.4.8 lacks length checking in  prvProcessReceivedPublish, resulting in untargetable leakage of arbitrary memory contents  on a device to an attacker. If an attacker has the authorization to send a malformed MQTT  publish packet to an Amazon IoT Thing, which interacts with an associated vulnerable MQTT  message in the application, specific circumstances could trigger this vulnerability.\"\n","instantiable":false,"label":"IoT MQTT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-lib_abstract_backoff_algorithm","isEditable":false,"isEnabled":true,"name":"lib_abstract_backoff_algorithm","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-lib_abstract_backoff_algorithm"},{"keyWords":"iot_network_types","componentId":"iot_network_types","isConfigurable":false,"documentation":"","description":"C SDK Definitions for Network Types.","instantiable":false,"label":"IoT Network Types","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_network_types","isEditable":false,"isEnabled":true,"name":"iot_network_types","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_network_types"},{"keyWords":"iot_static_memory","componentId":"iot_static_memory","isConfigurable":false,"documentation":"","description":"C SDK Static Memory Helper.","instantiable":false,"label":"IoT Static Memory","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_static_memory","isEditable":false,"isEnabled":true,"name":"iot_static_memory","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_static_memory"},{"keyWords":"iot_taskpool","componentId":"iot_taskpool","isConfigurable":false,"documentation":"","description":"C SDK Task Pool Utility.","instantiable":false,"label":"IoT Task Pool","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_taskpool","isEditable":false,"isEnabled":true,"name":"iot_taskpool","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK-iot_taskpool"}],"isEnabled":true,"name":"C SDK","id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-C_SDK","label":"C SDK","type":"category"},{"children":[{"keyWords":"iot_adc","componentId":"iot_adc","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O ADC API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":true,"label":"IoT ADC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_adc","isEditable":false,"isEnabled":true,"name":"iot_adc","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_adc"},{"keyWords":"iot_flash","componentId":"iot_flash","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O Flash API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":true,"label":"IoT Flash","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_flash","isEditable":false,"isEnabled":true,"name":"iot_flash","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_flash"},{"keyWords":"iot_gpio","componentId":"iot_gpio","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O GPIO API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":true,"label":"IoT GPIO","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_gpio","isEditable":false,"isEnabled":true,"name":"iot_gpio","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_gpio"},{"keyWords":"iot_i2c","componentId":"iot_i2c","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O I2C API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":true,"label":"IoT I2C","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_i2c","isEditable":false,"isEnabled":true,"name":"iot_i2c","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_i2c"},{"keyWords":"iot_pwm","componentId":"iot_pwm","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O PWM API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":true,"label":"IoT PWM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_pwm","isEditable":false,"isEnabled":true,"name":"iot_pwm","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_pwm"},{"keyWords":"iot_power","componentId":"iot_power","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O Power API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":false,"label":"IoT Power","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_power","isEditable":false,"isEnabled":true,"name":"iot_power","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_power"},{"keyWords":"iot_rtc","componentId":"iot_rtc","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O RTC API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":true,"label":"IoT RTC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_rtc","isEditable":false,"isEnabled":true,"name":"iot_rtc","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_rtc"},{"keyWords":"iot_reset","componentId":"iot_reset","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O Reset API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":false,"label":"IoT Reset","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_reset","isEditable":false,"isEnabled":true,"name":"iot_reset","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_reset"},{"keyWords":"iot_spi","componentId":"iot_spi","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O SPI API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":true,"label":"IoT SPI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_spi","isEditable":false,"isEnabled":true,"name":"iot_spi","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_spi"},{"keyWords":"iot_tsensor","componentId":"iot_tsensor","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O TempSensor API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":false,"label":"IoT Temp. Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_tsensor","isEditable":false,"isEnabled":true,"name":"iot_tsensor","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_tsensor"},{"keyWords":"iot_timer","componentId":"iot_timer","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O Timer API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":true,"label":"IoT Timer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_timer","isEditable":false,"isEnabled":true,"name":"iot_timer","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_timer"},{"keyWords":"iot_uart","componentId":"iot_uart","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O UART API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":true,"label":"IoT UART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_uart","isEditable":false,"isEnabled":true,"name":"iot_uart","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_uart"},{"keyWords":"iot_watchdog","componentId":"iot_watchdog","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O Watchdog API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":true,"label":"IoT Watchdog","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_watchdog","isEditable":false,"isEnabled":true,"name":"iot_watchdog","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_watchdog"},{"keyWords":"iot_efuse","componentId":"iot_efuse","isConfigurable":true,"documentation":"","description":"Silicon Labs' Implementation of Amazon Common I/O eFUSE API Doc: https://docs.aws.amazon.com/freertos/latest/lib-ref/common-io/files.html\n","instantiable":false,"label":"IoT eFUSE","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_efuse","isEditable":false,"isEnabled":true,"name":"iot_efuse","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O-iot_efuse"}],"isEnabled":true,"name":"Common I/O","id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Common_I/O","label":"Common I/O","type":"category"},{"children":[{"keyWords":"core_http","componentId":"core_http","isConfigurable":false,"documentation":"","description":"Lightweight HTTP client library for embedded devices.","instantiable":false,"label":"CoreHTTP Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-core_http","isEditable":false,"isEnabled":true,"name":"core_http","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-core_http"},{"keyWords":"core_mqtt","componentId":"core_mqtt","isConfigurable":false,"documentation":"","description":"Lightweight MQTT client library for embedded devices.","instantiable":false,"label":"CoreMQTT Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-core_mqtt","isEditable":false,"isEnabled":true,"name":"core_mqtt","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-core_mqtt"},{"keyWords":"lib_mbedtls_utils","componentId":"lib_mbedtls_utils","isConfigurable":false,"documentation":"","description":"This component fetches PKCS11 and mbedTLS with AWS related configs.","instantiable":false,"label":"CorePKCS11 Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-lib_mbedtls_utils","isEditable":false,"isEnabled":true,"name":"lib_mbedtls_utils","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-lib_mbedtls_utils"},{"keyWords":"core_pkcs11","componentId":"core_pkcs11","isConfigurable":false,"documentation":"","description":"This component fetches PKCS11 and mbedTLS with AWS related configs.","instantiable":false,"label":"CorePKCS11 Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-core_pkcs11","isEditable":false,"isEnabled":true,"name":"core_pkcs11","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-core_pkcs11"},{"keyWords":"lib_abstraction_pkcs11_test","componentId":"lib_abstraction_pkcs11_test","isConfigurable":false,"documentation":"","description":"This component fetches PKCS11 and mbedTLS with AWS related configs.","instantiable":false,"label":"CorePKCS11 Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-lib_abstraction_pkcs11_test","isEditable":false,"isEnabled":true,"name":"lib_abstraction_pkcs11_test","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-lib_abstraction_pkcs11_test"},{"keyWords":"lib_3rdparty_pkcs11","componentId":"lib_3rdparty_pkcs11","isConfigurable":false,"documentation":"","description":"This component fetches PKCS11 and mbedTLS with AWS related configs.","instantiable":false,"label":"CorePKCS11 Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-lib_3rdparty_pkcs11","isEditable":false,"isEnabled":true,"name":"lib_3rdparty_pkcs11","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries-lib_3rdparty_pkcs11"}],"isEnabled":true,"name":"Core Libraries","id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Core_Libraries","label":"Core Libraries","type":"category"},{"children":[{"keyWords":"freertos_cli","componentId":"freertos_cli","isConfigurable":false,"documentation":"","description":"FreeRTOS Plus CLI Utility.","instantiable":false,"label":"FreeRTOS+ CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-freertos_cli","isEditable":false,"isEnabled":true,"name":"freertos_cli","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-freertos_cli"},{"keyWords":"freertos_posix","componentId":"freertos_posix","isConfigurable":false,"documentation":"","description":"FreeRTOS Plus POSIX implementation.","instantiable":false,"label":"FreeRTOS+ POSIX","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-freertos_posix","isEditable":false,"isEnabled":true,"name":"freertos_posix","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-freertos_posix"},{"keyWords":"freertos_tcpip","componentId":"freertos_tcpip","isConfigurable":false,"documentation":"","description":"FreeRTOS Plus TCP/IP Stack.\nNote: The version provided with Simplicity SDK is present for running aws_test and validate the  low-level implementation of IoT API. This module is not used internally by any Silicon Labs  component. Be aware that The FreeRTOS + TCPIP used by aws_test contains the following security vulnerability:\nCVE-2018-16523 - \"Amazon Web Services (AWS) FreeRTOS through 1.3.1, FreeRTOS up to  V10.0.1 (with FreeRTOS+TCP), and WITTENSTEIN WHIS Connect middleware TCP/IP component  allow division by zero in prvCheckOptions.\"\nCVE-2018-16524 - \"Amazon Web Services (AWS) FreeRTOS through 1.3.1, FreeRTOS up to  V10.0.1 (with FreeRTOS+TCP), and WITTENSTEIN WHIS Connect middleware TCP/IP component  allow information disclosure during parsing of TCP options in prvCheckOptions.\"\nCVE-2018-16525 - \"Amazon Web Services (AWS) FreeRTOS through 1.3.1, FreeRTOS up to  V10.0.1 (with FreeRTOS+TCP), and WITTENSTEIN WHIS Connect middleware TCP/IP component  allow remote attackers to execute arbitrary code or leak information because of a Buffer  Overflow during parsing of DNS\\LLMNR packets in prvParseDNSReply.\"\nCVE-2018-16526 - \"Amazon Web Services (AWS) FreeRTOS through 1.3.1, FreeRTOS up to  V10.0.1 (with FreeRTOS+TCP), and WITTENSTEIN WHIS Connect middleware TCP/IP component  allow remote attackers to leak information or execute arbitrary code because of a  Buffer Overflow during generation of a protocol checksum in usGenerateProtocolChecksum  and prvProcessIPPacket.\"\nCVE-2018-16527 - \"Amazon Web Services (AWS) FreeRTOS through 1.3.1, FreeRTOS up to  V10.0.1 (with FreeRTOS+TCP), and WITTENSTEIN WHIS Connect middleware TCP/IP component  allow information disclosure during parsing of ICMP packets in prvProcessICMPPacket.\"\nCVE-2018-16598 - \"An issue was discovered in Amazon Web Services (AWS) FreeRTOS through  1.3.1, FreeRTOS up to V10.0.1 (with FreeRTOS+TCP), and WITTENSTEIN WHIS Connect middleware  TCP/IP component. In xProcessReceivedUDPPacket and prvParseDNSReply, any received DNS  response is accepted, without confirming it matches a sent DNS request.\"\nCVE-2018-16599 - \"An issue was discovered in Amazon Web Services (AWS) FreeRTOS through  1.3.1, FreeRTOS up to V10.0.1 (with FreeRTOS+TCP), and WITTENSTEIN WHIS Connect middleware  TCP/IP component. Out of bounds memory access during parsing of NBNS packets in prvTreatNBNS  can be used for information disclosure.\"\nCVE-2018-16600 - \"An issue was discovered in Amazon Web Services (AWS) FreeRTOS through 1.3.1,  FreeRTOS up to V10.0.1 (with FreeRTOS+TCP), and WITTENSTEIN WHIS Connect middleware TCP/IP  component. Out of bounds memory access during parsing of ARP packets in eARPProcessPacket  can be used for information disclosure.\"\nCVE-2018-16601 - \"An issue was discovered in Amazon Web Services (AWS) FreeRTOS through  1.3.1, FreeRTOS up to V10.0.1 (with FreeRTOS+TCP), and WITTENSTEIN WHIS Connect middleware  TCP/IP component. A crafted IP header triggers a full memory space copy in prvProcessIPPacket,  leading to denial of service and possibly remote code execution.\"\nCVE-2018-16602 - \"An issue was discovered in Amazon Web Services (AWS) FreeRTOS through  1.3.1, FreeRTOS up to V10.0.1 (with FreeRTOS+TCP), and WITTENSTEIN WHIS Connect middleware  TCP/IP component. Out of bounds memory access during parsing of DHCP responses in  prvProcessDHCPReplies can be used for information disclosure.\"\nCVE-2018-16603 - \"\tAn issue was discovered in Amazon Web Services (AWS) FreeRTOS through  1.3.1, FreeRTOS up to V10.0.1 (with FreeRTOS+TCP), and WITTENSTEIN WHIS Connect middleware  TCP/IP component. Out of bounds access to TCP source and destination port fields in  xProcessReceivedTCPPacket can leak data back to an attacker.\"\nCVE-2021-31571 - \"The kernel in Amazon Web Services FreeRTOS before 10.4.3 has an integer  overflow in queue.c for queue creation.\"\nCVE-2021-31572 - \"The kernel in Amazon Web Services FreeRTOS before 10.4.3 has an integer  overflow in stream_buffer.c for a stream buffer.\"\nCVE-2021-32020 - \"The kernel in Amazon Web Services FreeRTOS before 10.4.3 has insufficient  bounds checking during management of heap memory.\"\n","instantiable":false,"label":"FreeRTOS+ TCP/IP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-freertos_tcpip","isEditable":false,"isEnabled":true,"name":"freertos_tcpip","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-freertos_tcpip"},{"keyWords":"iot_crypto","componentId":"iot_crypto","isConfigurable":false,"documentation":"","description":"FreeRTOS Plus Crypto Tools.","instantiable":false,"label":"IoT Crypto","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-iot_crypto","isEditable":false,"isEnabled":true,"name":"iot_crypto","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-iot_crypto"},{"keyWords":"iot_system_init","componentId":"iot_system_init","isConfigurable":false,"documentation":"","description":"FreeRTOS Plus Utilities - System Initialization","instantiable":false,"label":"IoT System Init","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-iot_system_init","isEditable":false,"isEnabled":true,"name":"iot_system_init","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-iot_system_init"},{"keyWords":"iot_tls","componentId":"iot_tls","isConfigurable":false,"documentation":"","description":"FreeRTOS Plus TLS Layer.","instantiable":false,"label":"IoT TLS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-iot_tls","isEditable":false,"isEnabled":true,"name":"iot_tls","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-iot_tls"},{"keyWords":"iot_transport_secure_sockets","componentId":"iot_transport_secure_sockets","isConfigurable":false,"documentation":"","description":"FreeRTOS Plus Transport Secure Sockets.","instantiable":false,"label":"IoT Transport Secure Sockets","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-iot_transport_secure_sockets","isEditable":false,"isEnabled":true,"name":"iot_transport_secure_sockets","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus-iot_transport_secure_sockets"}],"isEnabled":true,"name":"FreeRTOS Plus","id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-FreeRTOS_Plus","label":"FreeRTOS Plus","type":"category"},{"children":[{"keyWords":"iot_logging","componentId":"iot_logging","isConfigurable":false,"documentation":"","description":"Task for IoT Logging on FreeRTOS","instantiable":false,"label":"IoT Logging","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Logging|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Logging-iot_logging","isEditable":false,"isEnabled":true,"name":"iot_logging","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Logging-iot_logging"}],"isEnabled":true,"name":"Logging","id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Logging","label":"Logging","type":"category"},{"children":[{"keyWords":"iot_clock","componentId":"iot_clock","isConfigurable":false,"documentation":"","description":"IoT Platform - Clock implementation for FreeRTOS.","instantiable":false,"label":"IoT Clock","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_clock","isEditable":false,"isEnabled":true,"name":"iot_clock","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_clock"},{"keyWords":"iot_metrics","componentId":"iot_metrics","isConfigurable":false,"documentation":"","description":"IoT Platform - Metrics API for FreeRTOS.","instantiable":false,"label":"IoT Metrics","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_metrics","isEditable":false,"isEnabled":true,"name":"iot_metrics","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_metrics"},{"keyWords":"iot_network","componentId":"iot_network","isConfigurable":false,"documentation":"","description":"IoT Platform - Networking API for FreeRTOS.","instantiable":false,"label":"IoT Network","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_network","isEditable":false,"isEnabled":true,"name":"iot_network","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_network"},{"keyWords":"iot_platform_types","componentId":"iot_platform_types","isConfigurable":false,"documentation":"","description":"IoT Platform - Types for FreeRTOS.","instantiable":false,"label":"IoT Platform Types","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_platform_types","isEditable":false,"isEnabled":true,"name":"iot_platform_types","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_platform_types"},{"keyWords":"iot_platform_secure_sockets","componentId":"iot_platform_secure_sockets","isConfigurable":false,"documentation":"","description":"IoT Platform - Types for FreeRTOS.","instantiable":false,"label":"IoT Platform Types","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_platform_secure_sockets","isEditable":false,"isEnabled":true,"name":"iot_platform_secure_sockets","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_platform_secure_sockets"},{"keyWords":"iot_threads","componentId":"iot_threads","isConfigurable":false,"documentation":"","description":"IoT Platform - Threads API for FreeRTOS.","instantiable":false,"label":"IoT Threads","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform|studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_threads","isEditable":false,"isEnabled":true,"name":"iot_threads","isSelected":false,"id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform-iot_threads"}],"isEnabled":true,"name":"Platform","id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries-Platform","label":"Platform","type":"category"}],"isEnabled":true,"name":"Amazon FreeRTOS - AWS Libraries","id":"studiocomproot-Third_Party-Amazon_FreeRTOS_-_AWS_Libraries","label":"Amazon FreeRTOS - AWS Libraries","type":"category"},{"children":[{"children":[{"keyWords":"lwip_addons_ip6_static_routing","componentId":"lwip_addons_ip6_static_routing","isConfigurable":false,"documentation":"","description":"The IPv6 static routing component can be used for simple routing table implementation for addition, deletion and lookup of IPv6 routes. For route lookup from the table, The LWIP_HOOK_IP6_ROUTE hook in ip6_route(..) of ip6.c could be assigned to the ip6_static_route() API of this implementation to return the appropriate netif.\n","instantiable":false,"label":"IPv6 Static Routing","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-Addons|studiocomproot-Third_Party-LwIP-Addons-lwip_addons_ip6_static_routing","isEditable":false,"isEnabled":true,"name":"lwip_addons_ip6_static_routing","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-Addons-lwip_addons_ip6_static_routing"},{"keyWords":"lwip_addons_netconn","componentId":"lwip_addons_netconn","isConfigurable":false,"documentation":"","description":"The netconn component can be used for getting the host by name. It implements the dnssd for embedded devices, the Domain Name System (DNS) is a system for associating various types of information such as IP addresses with easy-to-remember names, it retrieves host information corresponding to a host name from a host database.\n","instantiable":false,"label":"Netconn","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-Addons|studiocomproot-Third_Party-LwIP-Addons-lwip_addons_netconn","isEditable":false,"isEnabled":true,"name":"lwip_addons_netconn","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-Addons-lwip_addons_netconn"},{"keyWords":"lwip_addons_tcp_isn","componentId":"lwip_addons_tcp_isn","isConfigurable":false,"documentation":"","description":"The TCP Initial Sequence Numbers component can be used to generate Initial Sequence Numbers add-on for a new TCP connection. Initial sequence numbers (ISN) refers to the unique 32-bit sequence number assigned to each new connection on a Transmission Control Protocol (TCP)-based data communication. It helps with the allocation of a sequence number that does not conflict with other data bytes transmitted over a TCP connection.\n","instantiable":false,"label":"TCP Initial Sequence Numbers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-Addons|studiocomproot-Third_Party-LwIP-Addons-lwip_addons_tcp_isn","isEditable":false,"isEnabled":true,"name":"lwip_addons_tcp_isn","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-Addons-lwip_addons_tcp_isn"},{"keyWords":"lwip_addons_tcp_md5","componentId":"lwip_addons_tcp_md5","isConfigurable":false,"documentation":"","description":"The TCP md5 component can be used for adding custom TCP header options and custom socket options. It does this by implementing the (seldom used) tcp md5 signature, sockets application, enable md5 signature on a socket after that, your connection (client) or all incoming connections (server) require tcp md5 signatures. The md5sum is designed to verify data integrity using MD5 (Message Digest Algorithm 5), The TCP MD5 option allows BGP to protect itself against the introduction of spoofed TCP segments into the connection stream. To spoof a connection using MD5 signed sessions, the attacker not only has to guess TCP sequence numbers, but also the password included in the MD5 digest.\n","instantiable":false,"label":"TCP MD5","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-Addons|studiocomproot-Third_Party-LwIP-Addons-lwip_addons_tcp_md5","isEditable":false,"isEnabled":true,"name":"lwip_addons_tcp_md5","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-Addons-lwip_addons_tcp_md5"}],"isEnabled":true,"name":"Addons","id":"studiocomproot-Third_Party-LwIP-Addons","label":"Addons","type":"category"},{"children":[{"keyWords":"lwip_port_freertos","componentId":"lwip_port_freertos","isConfigurable":false,"documentation":"","description":"The LwIP FreeRTOS port component can be used for LwIP port contribution for FreeRTOS.\n","instantiable":false,"label":"LwIP FreeRTOS port ","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-OS|studiocomproot-Third_Party-LwIP-OS-lwip_port_freertos","isEditable":false,"isEnabled":true,"name":"lwip_port_freertos","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-OS-lwip_port_freertos"},{"keyWords":"lwip_port_micriumos","componentId":"lwip_port_micriumos","isConfigurable":false,"documentation":"","description":"The LwIP MicriumOS port component can be used for LwIP port contribution for MicriumOS.\n","instantiable":false,"label":"LwIP MicriumOS port ","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-OS|studiocomproot-Third_Party-LwIP-OS-lwip_port_micriumos","isEditable":false,"isEnabled":true,"name":"lwip_port_micriumos","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-OS-lwip_port_micriumos"}],"isEnabled":true,"name":"OS","id":"studiocomproot-Third_Party-LwIP-OS","label":"OS","type":"category"},{"children":[{"keyWords":"lwip_app_altcp_tls","componentId":"lwip_app_altcp_tls","isConfigurable":false,"documentation":"","description":"The LWIP altcp TLS high layer application component implements the LWIP altcp TLS high layer application specifically programmed with the lwIP low-level raw API, altcp (application layered TCP connection API to be used from TCPIP thread) is an abstraction layer that prevents applications linking hard against the tcp.h functions while providing the same functionality. It is used to e.g. add SSL/TLS (see LWIP_ALTCP_TLS) or proxy-connect support to an application written for the tcp callback API without that application knowing the protocol details.\n","instantiable":false,"label":"LWIP ALTCP TLS High Layer Application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-apps|studiocomproot-Third_Party-LwIP-apps-lwip_app_altcp_tls","isEditable":false,"isEnabled":true,"name":"lwip_app_altcp_tls","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-apps-lwip_app_altcp_tls"},{"keyWords":"lwip_app_mqtt","componentId":"lwip_app_mqtt","isConfigurable":false,"documentation":"","description":"The LWIP mqtt high layer application specifically programmed with the lwIP low-level raw API, MQTT is a MQ Telemetry Transport is a lightweight publish-subscribe machine to machine network protocol. It is designed for connections with remote locations that have devices with resource constraints or limited network bandwidth. It must run over a transport protocol that provides ordered, lossless, bi-directional connections typically, TCP/IP. It is an open OASIS standard and an ISO recommendation (ISO/IEC 20922).\n","instantiable":false,"label":"LWIP MQTT High Layer Application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-apps|studiocomproot-Third_Party-LwIP-apps-lwip_app_mqtt","isEditable":false,"isEnabled":true,"name":"lwip_app_mqtt","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-apps-lwip_app_mqtt"},{"keyWords":"lwip_app_netbiosns","componentId":"lwip_app_netbiosns","isConfigurable":false,"documentation":"","description":"The LWIP NetBIOS-NS high layer application specifically programmed with the lwIP low-level raw API, this is an example implementation of a NetBIOS name server. It responds to name queries for a configurable name. Name resolving is not supported. Note: Device doesn't broadcast it's own name so can't detect duplicate names.\n","instantiable":false,"label":"LWIP NetBIOS-NS High Layer Application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-apps|studiocomproot-Third_Party-LwIP-apps-lwip_app_netbiosns","isEditable":false,"isEnabled":true,"name":"lwip_app_netbiosns","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-apps-lwip_app_netbiosns"},{"keyWords":"lwip_app_smtp","componentId":"lwip_app_smtp","isConfigurable":false,"documentation":"","description":"The LWIP smtp high layer application specifically programmed with the lwIP low-level raw API, this is simple SMTP client for raw API. It is a minimal implementation of SMTP as specified in RFC 5321.\n","instantiable":false,"label":"LWIP SMTP High Layer Application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-apps|studiocomproot-Third_Party-LwIP-apps-lwip_app_smtp","isEditable":false,"isEnabled":true,"name":"lwip_app_smtp","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-apps-lwip_app_smtp"},{"keyWords":"lwip_app_snmp","componentId":"lwip_app_snmp","isConfigurable":false,"documentation":"","description":"The LWIP snmp high layer application specifically programmed with the lwIP low-level raw API, SNMPv2c and SNMPv3 compatible agent there is also a MIB compiler and a MIB viewer in lwIP contrib repository (lwip-contrib/apps/LwipMibCompiler). The agent implements the most important MIB2 MIBs including IPv6 support (interfaces, UDP, TCP, SNMP, ICMP, SYSTEM).\n","instantiable":false,"label":"LWIP SNMP High Layer Application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-apps|studiocomproot-Third_Party-LwIP-apps-lwip_app_snmp","isEditable":false,"isEnabled":true,"name":"lwip_app_snmp","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-apps-lwip_app_snmp"},{"keyWords":"lwip_app_sntp","componentId":"lwip_app_sntp","isConfigurable":false,"documentation":"","description":"The LWIP sntp high layer application specifically programmed with the lwIP low-level raw API, this is simple \"SNTP\" client for the lwIP raw API. It is a minimal implementation of SNTPv4 as specified in RFC 4330.\n","instantiable":false,"label":"LWIP SNTP high layer application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-apps|studiocomproot-Third_Party-LwIP-apps-lwip_app_sntp","isEditable":false,"isEnabled":true,"name":"lwip_app_sntp","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-apps-lwip_app_sntp"},{"keyWords":"lwip_app_tftp","componentId":"lwip_app_tftp","isConfigurable":false,"documentation":"","description":"The LWIP tftp high layer application specifically programmed with the lwIP low-level raw API. Trivial File Transfer Protocol, is a simple high-level protocol for transferring data servers use to boot diskless workstations, X-terminals, and routers by using User Data Protocol (UDP).\n","instantiable":false,"label":"LWIP TFTP High Layer Application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-apps|studiocomproot-Third_Party-LwIP-apps-lwip_app_tftp","isEditable":false,"isEnabled":true,"name":"lwip_app_tftp","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-apps-lwip_app_tftp"},{"keyWords":"lwip_app_http","componentId":"lwip_app_http","isConfigurable":false,"documentation":"","description":"The LWIP http high layer application component can be used for LWIP http high layer application specifically programmed with the lwIP low-level raw API, this httpd supports for a rudimentary server-side-include facility which will replace tags of the form in any file whose extension is .shtml, .shtm or .ssi with strings provided by an include handler whose pointer is provided to the module via function http_set_ssi_handler(). Additionally, a simple common gateway interface (CGI) handling mechanism has been added to allow clients to hook functions to particular request URIs.\n","instantiable":false,"label":"LWIP http High Layer Application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-apps|studiocomproot-Third_Party-LwIP-apps-lwip_app_http","isEditable":false,"isEnabled":true,"name":"lwip_app_http","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-apps-lwip_app_http"},{"keyWords":"lwip_app_lwiperf","componentId":"lwip_app_lwiperf","isConfigurable":false,"documentation":"","description":"The LWIP lightweight iperf high layer application specifically programmed with the lwIP low-level raw API, this is a simple performance measuring client/server to check your bandwidth using iPerf2 on a PC as server/client. It is currently a minimal implementation providing a TCP client/server only.\n","instantiable":false,"label":"LWIP lightweight iPerf High Layer Application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-apps|studiocomproot-Third_Party-LwIP-apps-lwip_app_lwiperf","isEditable":false,"isEnabled":true,"name":"lwip_app_lwiperf","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-apps-lwip_app_lwiperf"},{"keyWords":"lwip_app_mdns","componentId":"lwip_app_mdns","isConfigurable":false,"documentation":"","description":"The LWIP mDNS high layer application specifically programmed with the lwIP low-level raw API, multicast DNS lwip the MDNS responder does not have all features required by the standards. It is however usable in normal cases - but watch out if many devices on the same network try to use the same host/service instance names.\n","instantiable":false,"label":"LWIP mDNS High Layer Application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-apps|studiocomproot-Third_Party-LwIP-apps-lwip_app_mdns","isEditable":false,"isEnabled":true,"name":"lwip_app_mdns","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-apps-lwip_app_mdns"}],"isEnabled":true,"name":"apps","id":"studiocomproot-Third_Party-LwIP-apps","label":"apps","type":"category"},{"children":[{"keyWords":"lwip_netif_ppp","componentId":"lwip_netif_ppp","isConfigurable":false,"documentation":"","description":"The LWIP generic network interface device drivers for PP component can be used for the LWIP PPP support. It is based from pppd (http://ppp.samba.org) with huge changes to match code size and memory requirements for embedded devices. Please read /doc/ppp.txt and ppp/PPPD_FOLLOWUP for a detailed explanation.\n","instantiable":false,"label":"LWIP generic network interface device drivers for PPP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-netif|studiocomproot-Third_Party-LwIP-netif-lwip_netif_ppp","isEditable":false,"isEnabled":true,"name":"lwip_netif_ppp","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-netif-lwip_netif_ppp"},{"keyWords":"lwip_netif_bridgeif","componentId":"lwip_netif_bridgeif","isConfigurable":false,"documentation":"","description":"The LWIP generic network interface device drivers for bridgeif. LWIP netif implementing an IEEE 802.1D MAC Bridge.\n","instantiable":false,"label":"LWIP generic network interface device drivers for bridgeif","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-netif|studiocomproot-Third_Party-LwIP-netif-lwip_netif_bridgeif","isEditable":false,"isEnabled":true,"name":"lwip_netif_bridgeif","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-netif-lwip_netif_bridgeif"},{"keyWords":"lwip_netif_ethernet","componentId":"lwip_netif_ethernet","isConfigurable":false,"documentation":"","description":"The LWIP generic network interface device drivers for ethernet. Shared code for Ethernet based interfaces.\n","instantiable":false,"label":"LWIP generic network interface device drivers for ethernet","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-netif|studiocomproot-Third_Party-LwIP-netif-lwip_netif_ethernet","isEditable":false,"isEnabled":true,"name":"lwip_netif_ethernet","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-netif-lwip_netif_ethernet"},{"keyWords":"lwip_netif_lowpan6","componentId":"lwip_netif_lowpan6","isConfigurable":false,"documentation":"","description":"The LWIP generic network interface device drivers for lowpan6. A 6LowPAN output for IPv6. Uses ND tables for link-layer addressing. Fragments packets to 6LowPAN units. This implementation aims to conform to IEEE 802.15.4(-2015), RFC 4944 and RFC 6282.\n","instantiable":false,"label":"LWIP generic network interface device drivers for lowpan6","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-netif|studiocomproot-Third_Party-LwIP-netif-lwip_netif_lowpan6","isEditable":false,"isEnabled":true,"name":"lwip_netif_lowpan6","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-netif-lwip_netif_lowpan6"},{"keyWords":"lwip_netif_lowpan6_ble","componentId":"lwip_netif_lowpan6_ble","isConfigurable":false,"documentation":"","description":"The LWIP generic network interface device drivers for lowpan6_ble can be used for LWIP generic network interface device drivers for ethernet. A 6LoWPAN over Bluetooth Low Energy (BLE) implementation as netif, according to RFC-7668.\n","instantiable":false,"label":"LWIP generic network interface device drivers for lowpan6_ble","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-netif|studiocomproot-Third_Party-LwIP-netif-lwip_netif_lowpan6_ble","isEditable":false,"isEnabled":true,"name":"lwip_netif_lowpan6_ble","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-netif-lwip_netif_lowpan6_ble"},{"keyWords":"lwip_netif_slipif","componentId":"lwip_netif_slipif","isConfigurable":false,"documentation":"","description":"The LWIP generic network interface device drivers for slipif. A generic implementation of the SLIP (Serial Line IP) protocol. It requires a sio (serial I/O) module to work.\n","instantiable":false,"label":"LWIP generic network interface device drivers for slipif","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-netif|studiocomproot-Third_Party-LwIP-netif-lwip_netif_slipif","isEditable":false,"isEnabled":true,"name":"lwip_netif_slipif","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-netif-lwip_netif_slipif"}],"isEnabled":true,"name":"netif","id":"studiocomproot-Third_Party-LwIP-netif","label":"netif","type":"category"},{"keyWords":"lwip_api","componentId":"lwip_api","isConfigurable":false,"documentation":"","description":"The LightWeight IP (LWIP) API component implements the code for the high-level wrapper API. Not needed if you use the low-level call-back/raw API.\n","instantiable":false,"label":"LightWeight IP (LWIP) API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-lwip_api","isEditable":false,"isEnabled":true,"name":"lwip_api","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-lwip_api"},{"keyWords":"lwip_core","componentId":"lwip_core","isConfigurable":false,"documentation":"","description":"The LightWeight IP (LWIP) core stack component provides the core LWIP. LWIP (lightweight IP) is a widely used open-source TCP/IP stack designed for embedded systems. LWIP was originally developed by Adam Dunkels at the Swedish Institute of Computer Science and is now developed and maintained by a worldwide network of developers, the focus of the LWIP TCP/IP implementation is to reduce the RAM usage while still having a full scale TCP. This making lwIP suitable for use in embedded systems with tens of kilobytes of free RAM and room for around 40 kilobytes of code ROM.\n","instantiable":false,"label":"LightWeight IP (LWIP) core stack","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-LwIP|studiocomproot-Third_Party-LwIP-lwip_core","isEditable":false,"isEnabled":true,"name":"lwip_core","isSelected":false,"id":"studiocomproot-Third_Party-LwIP-lwip_core"}],"isEnabled":true,"name":"LwIP","id":"studiocomproot-Third_Party-LwIP","label":"LwIP","type":"category"},{"children":[{"children":[{"keyWords":"segger_rtt","componentId":"segger_rtt","isConfigurable":true,"documentation":"","description":"SEGGER RTT","instantiable":false,"label":"SEGGER RTT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Segger|studiocomproot-Third_Party-Segger-RTT|studiocomproot-Third_Party-Segger-RTT-segger_rtt","isEditable":false,"isEnabled":true,"name":"segger_rtt","isSelected":false,"id":"studiocomproot-Third_Party-Segger-RTT-segger_rtt"},{"keyWords":"segger_rtt_printf","componentId":"segger_rtt_printf","isConfigurable":false,"documentation":"","description":"SEGGER RTT with printf feature","instantiable":false,"label":"SEGGER RTT printf","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Segger|studiocomproot-Third_Party-Segger-RTT|studiocomproot-Third_Party-Segger-RTT-segger_rtt_printf","isEditable":false,"isEnabled":true,"name":"segger_rtt_printf","isSelected":false,"id":"studiocomproot-Third_Party-Segger-RTT-segger_rtt_printf"}],"isEnabled":true,"name":"RTT","id":"studiocomproot-Third_Party-Segger-RTT","label":"RTT","type":"category"},{"children":[{"keyWords":"segger_systemview","componentId":"segger_systemview","isConfigurable":true,"documentation":"","description":"SEGGER SystemView","instantiable":false,"label":"SEGGER SystemView","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Segger|studiocomproot-Third_Party-Segger-System_View|studiocomproot-Third_Party-Segger-System_View-segger_systemview","isEditable":false,"isEnabled":true,"name":"segger_systemview","isSelected":false,"id":"studiocomproot-Third_Party-Segger-System_View-segger_systemview"},{"keyWords":"segger_systemview_uart_recorder","componentId":"segger_systemview_uart_recorder","isConfigurable":true,"documentation":"http://docs.silabs.com/gecko-platform/5.1.0/service/api/group-uart_recorder","description":"SEGGER SystemView UART Recorder. Allows to record events via UART when RTT cannot be used (that is when an application sleeps to EM2 or EM3 energy mode).","instantiable":false,"label":"SEGGER SystemView UART Recorder","type":"component","quality":"INTERNAL","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Segger|studiocomproot-Third_Party-Segger-System_View|studiocomproot-Third_Party-Segger-System_View-segger_systemview_uart_recorder","isEditable":false,"isEnabled":true,"name":"segger_systemview_uart_recorder","isSelected":false,"id":"studiocomproot-Third_Party-Segger-System_View-segger_systemview_uart_recorder"}],"isEnabled":true,"name":"System View","id":"studiocomproot-Third_Party-Segger-System_View","label":"System View","type":"category"}],"isEnabled":true,"name":"Segger","id":"studiocomproot-Third_Party-Segger","label":"Segger","type":"category"},{"children":[{"keyWords":"test_framework_unity","componentId":"test_framework_unity","isConfigurable":true,"documentation":"","description":"Unity test framework","instantiable":false,"label":"Unity test framework component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Unity|studiocomproot-Third_Party-Unity-test_framework_unity","isEditable":false,"isEnabled":true,"name":"test_framework_unity","isSelected":false,"id":"studiocomproot-Third_Party-Unity-test_framework_unity"},{"keyWords":"test_framework_unity_fixture","componentId":"test_framework_unity_fixture","isConfigurable":false,"documentation":"","description":"Unity unit test framework - fixture component","instantiable":false,"label":"Unity test framework fixture component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Unity|studiocomproot-Third_Party-Unity-test_framework_unity_fixture","isEditable":false,"isEnabled":true,"name":"test_framework_unity_fixture","isSelected":false,"id":"studiocomproot-Third_Party-Unity-test_framework_unity_fixture"},{"keyWords":"test_framework_unity_memory","componentId":"test_framework_unity_memory","isConfigurable":false,"documentation":"","description":"Unity test framework - memory component","instantiable":false,"label":"Unity test framework memory component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Unity|studiocomproot-Third_Party-Unity-test_framework_unity_memory","isEditable":false,"isEnabled":true,"name":"test_framework_unity_memory","isSelected":false,"id":"studiocomproot-Third_Party-Unity-test_framework_unity_memory"},{"keyWords":"test_framework_unity_iostream","componentId":"test_framework_unity_iostream","isConfigurable":false,"documentation":"","description":"Unity test framework with IOStream","instantiable":false,"label":"Unity test framework with IOStream","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-Unity|studiocomproot-Third_Party-Unity-test_framework_unity_iostream","isEditable":false,"isEnabled":true,"name":"test_framework_unity_iostream","isSelected":false,"id":"studiocomproot-Third_Party-Unity-test_framework_unity_iostream"}],"isEnabled":true,"name":"Unity","id":"studiocomproot-Third_Party-Unity","label":"Unity","type":"category"},{"keyWords":"printf","componentId":"printf","isConfigurable":false,"documentation":"","description":"Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on embedded systems with a very limited resources.\n","instantiable":false,"label":"Tiny printf","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Third_Party|studiocomproot-Third_Party-printf","isEditable":false,"isEnabled":true,"name":"printf","isSelected":false,"id":"studiocomproot-Third_Party-printf"}],"isEnabled":true,"name":"Third Party","id":"studiocomproot-Third_Party","label":"Third Party","type":"category"},{"children":[{"keyWords":"wfx_bus_spi","componentId":"wfx_bus_spi","isConfigurable":true,"documentation":"","description":"SPI bus support","instantiable":false,"label":"WFx Bus SPI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-Fi|studiocomproot-Wi-Fi-wfx_bus_spi","isEditable":false,"isEnabled":true,"name":"wfx_bus_spi","isSelected":false,"id":"studiocomproot-Wi-Fi-wfx_bus_spi"},{"keyWords":"wfx_fmac_driver","componentId":"wfx_fmac_driver","isConfigurable":true,"documentation":"http://docs.silabs.com/wifi/wf200/rtos/3.6.2/group-f-u-l-l-m-a-c-d-r-i-v-e-r-a-p-i","description":"Driver for WFx Wi-Fi transceiver.","instantiable":false,"label":"WFx FMAC driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-Fi|studiocomproot-Wi-Fi-wfx_fmac_driver","isEditable":false,"isEnabled":true,"name":"wfx_fmac_driver","isSelected":false,"id":"studiocomproot-Wi-Fi-wfx_fmac_driver"},{"keyWords":"wfx_secure_link","componentId":"wfx_secure_link","isConfigurable":true,"documentation":"http://docs.silabs.com/wifi/wf200/rtos/3.6.2/group-secure-link","description":"Secure Link host interface support","instantiable":false,"label":"WFx Secure Link","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-Fi|studiocomproot-Wi-Fi-wfx_secure_link","isEditable":false,"isEnabled":true,"name":"wfx_secure_link","isSelected":false,"id":"studiocomproot-Wi-Fi-wfx_secure_link"}],"isEnabled":true,"name":"Wi-Fi","id":"studiocomproot-Wi-Fi","label":"Wi-Fi","type":"category"},{"children":[{"children":[{"children":[{"keyWords":"wisun_br_dhcpv6_relay","componentId":"wisun_br_dhcpv6_relay","isConfigurable":false,"documentation":"","description":"Creates a bridge between WAN and FAN interfaces using DHCPv6 Relay Agent/Server messages.\n","instantiable":false,"label":"DHCPv6 Relay for Wi-SUN Border Router","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Application|studiocomproot-Wi-SUN-Application-Wi-SUN_BR_CLI|studiocomproot-Wi-SUN-Application-Wi-SUN_BR_CLI-wisun_br_dhcpv6_relay","isEditable":false,"isEnabled":true,"name":"wisun_br_dhcpv6_relay","isSelected":false,"id":"studiocomproot-Wi-SUN-Application-Wi-SUN_BR_CLI-wisun_br_dhcpv6_relay"},{"keyWords":"wisun_br_dhcpv6_server","componentId":"wisun_br_dhcpv6_server","isConfigurable":false,"documentation":"","description":"Implements a DHCPv6 server for WI-SUN SoC Border Router.\n","instantiable":false,"label":"DHCPv6 Server for Wi-SUN Border Router","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Application|studiocomproot-Wi-SUN-Application-Wi-SUN_BR_CLI|studiocomproot-Wi-SUN-Application-Wi-SUN_BR_CLI-wisun_br_dhcpv6_server","isEditable":false,"isEnabled":true,"name":"wisun_br_dhcpv6_server","isSelected":false,"id":"studiocomproot-Wi-SUN-Application-Wi-SUN_BR_CLI-wisun_br_dhcpv6_server"},{"keyWords":"wisun_br_lwip","componentId":"wisun_br_lwip","isConfigurable":false,"documentation":"","description":"Creates WAN and PAN network interfaces to route IPv6 messages between the Wi-SUN network and Internet.\n","instantiable":false,"label":"Integrate lwIP to Wi-SUN Border Router","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Application|studiocomproot-Wi-SUN-Application-Wi-SUN_BR_CLI|studiocomproot-Wi-SUN-Application-Wi-SUN_BR_CLI-wisun_br_lwip","isEditable":false,"isEnabled":true,"name":"wisun_br_lwip","isSelected":false,"id":"studiocomproot-Wi-SUN-Application-Wi-SUN_BR_CLI-wisun_br_lwip"}],"isEnabled":true,"name":"Wi-SUN BR CLI","id":"studiocomproot-Wi-SUN-Application-Wi-SUN_BR_CLI","label":"Wi-SUN BR CLI","type":"category"},{"children":[{"keyWords":"wisun_fan_certification","componentId":"wisun_fan_certification","isConfigurable":false,"documentation":"","description":"Adds FAN certification support to Wi-SUN SoC CLI application. Provides all the CLI commands and the test certificates required to run Wi-SUN FAN certification test suite. Can only be used in Wi-SUN SoC CLI application.\n","instantiable":false,"label":"Wi-SUN CLI - FAN Certification","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Application|studiocomproot-Wi-SUN-Application-Wi-SUN_CLI|studiocomproot-Wi-SUN-Application-Wi-SUN_CLI-wisun_fan_certification","isEditable":false,"isEnabled":true,"name":"wisun_fan_certification","isSelected":false,"id":"studiocomproot-Wi-SUN-Application-Wi-SUN_CLI-wisun_fan_certification"}],"isEnabled":true,"name":"Wi-SUN CLI","id":"studiocomproot-Wi-SUN-Application-Wi-SUN_CLI","label":"Wi-SUN CLI","type":"category"},{"children":[{"keyWords":"wisun_rcp_cpc","componentId":"wisun_rcp_cpc","isConfigurable":false,"documentation":"","description":"Provides Wi-SUN Border Router RCP CPC interface. UART and CPC interfaces are mutually exclusive. It installs CPC secondary UART driver by default. Can only be used in Wi-SUN Border Router RCP application\n","instantiable":false,"label":"Wi-SUN Border Router RCP - CPC interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Application|studiocomproot-Wi-SUN-Application-Wi-SUN_RCP|studiocomproot-Wi-SUN-Application-Wi-SUN_RCP-wisun_rcp_cpc","isEditable":false,"isEnabled":true,"name":"wisun_rcp_cpc","isSelected":false,"id":"studiocomproot-Wi-SUN-Application-Wi-SUN_RCP-wisun_rcp_cpc"},{"keyWords":"wisun_rcp_uart_plt","componentId":"wisun_rcp_uart_plt","isConfigurable":false,"documentation":"","description":"Provides Wi-SUN Border Router RCP UART interface using the platform driver. UART and CPC interfaces are mutually exclusive. Can only be used in Wi-SUN Border Router RCP application.\n","instantiable":false,"label":"Wi-SUN Border Router RCP - UART (platform) interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Application|studiocomproot-Wi-SUN-Application-Wi-SUN_RCP|studiocomproot-Wi-SUN-Application-Wi-SUN_RCP-wisun_rcp_uart_plt","isEditable":false,"isEnabled":true,"name":"wisun_rcp_uart_plt","isSelected":false,"id":"studiocomproot-Wi-SUN-Application-Wi-SUN_RCP-wisun_rcp_uart_plt"},{"keyWords":"wisun_rcp_uart","componentId":"wisun_rcp_uart","isConfigurable":true,"documentation":"","description":"Provides Wi-SUN Border Router RCP UART interface. It is used by default if CPC is not installed. UART and CPC interfaces are mutually exclusive. Can only be used in Wi-SUN Border Router RCP application.\n","instantiable":false,"label":"Wi-SUN Border Router RCP - UART interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Application|studiocomproot-Wi-SUN-Application-Wi-SUN_RCP|studiocomproot-Wi-SUN-Application-Wi-SUN_RCP-wisun_rcp_uart","isEditable":false,"isEnabled":true,"name":"wisun_rcp_uart","isSelected":false,"id":"studiocomproot-Wi-SUN-Application-Wi-SUN_RCP-wisun_rcp_uart"}],"isEnabled":true,"name":"Wi-SUN RCP","id":"studiocomproot-Wi-SUN-Application-Wi-SUN_RCP","label":"Wi-SUN RCP","type":"category"},{"keyWords":"wisun_config","componentId":"wisun_config","isConfigurable":true,"documentation":"","description":"When initiating a new Wi-SUN project, a Wi-SUN Configurator is automatically included. This Configurator serves as an interface to the main settings of the Wi-SUN application, comprising three panels: Application, Security and Radio. For some examples, the Wi-SUN Configurator only displays the Radio panel. These examples do not have the application and security infrastructure.\n","instantiable":false,"label":"Wi-SUN Configurator","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Application|studiocomproot-Wi-SUN-Application-wisun_config","isEditable":false,"isEnabled":true,"name":"wisun_config","isSelected":false,"id":"studiocomproot-Wi-SUN-Application-wisun_config"}],"isEnabled":true,"name":"Application","id":"studiocomproot-Wi-SUN-Application","label":"Application","type":"category"},{"children":[{"keyWords":"app_project_info","componentId":"app_project_info","isConfigurable":true,"documentation":"","description":"The component offers a comprehensive compilation of project-related information, with a particular focus on software layer versions and toolchains.\n","instantiable":false,"label":"Application Project Info","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-app_project_info","isEditable":false,"isEnabled":true,"name":"app_project_info","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-app_project_info"},{"keyWords":"app_os_stat","componentId":"app_os_stat","isConfigurable":true,"documentation":"","description":"The service systematically collects heap and stack usage data from active threads across various configurations involving FreeRTOS, MicriumOS, and different toolchains such as GCC and IAR. This critical information is then relayed to the Real-Time Transfer (RTT) console. To ensure accurate reporting, proper RTT setup is essential. The component includes a warning mechanism that provides hints about missing or incorrect configurations. Within the component configuration, you can set the service thread parameters, the update period time, the maximum count of trackable threads, and enable heap usage statistics. A common scenario involves increasing the measurable thread stack size and the application heap size before beginning testing. Based on the measurement results, adjustments can be made to the appropriate thread's stack and the application heap size. Stack size is calculated using the highest watermarks, and the last result always displays the maximum values.\n","instantiable":false,"label":"Application memory statistic","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-app_os_stat","isEditable":false,"isEnabled":true,"name":"app_os_stat","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-app_os_stat"},{"keyWords":"sl_ftp","componentId":"sl_ftp","isConfigurable":true,"documentation":"","description":"FTP (File Transfer Protocol) and TFTP (Trivial File Transfer Protocol) implementation. The FTP Client facilitates file exchange between a client and any remote host over TCP. The TFTP Client facilitates file exchange between a client and any remote host over UDP.  This component provides an easy-to-use solution for downloading and uploading files from a remote host.  The TFTP client can be initialized with sl_tftp_clnt_init(), and the functions sl_tftp_clnt_get()  and sl_tftp_clnt_put() can be used to download and upload files, respectively.  Additionally, the block size and timeout options can be configured to negotiate between the server and the client,  optimizing the transmission. The component implements the TFTP protocol as specified in RFC 1350.  To ensure proper functionality, a TFTP server, such as tftpd-hpa, must be prepared on the remote host.\n","instantiable":false,"label":"File Transfer Protocol","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-sl_ftp","isEditable":false,"isEnabled":true,"name":"sl_ftp","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-sl_ftp"},{"keyWords":"sl_wisun_app_core","componentId":"sl_wisun_app_core","isConfigurable":true,"documentation":"http://docs.silabs.com/wisun/2.3.0/wisun-stack-api/sl-wisun-app-core-api","description":"The Application Core component is designed to offer essential utilities commonly used in Wi-SUN applications. The sl_wisun_app_core_util_connect_and_wait() function configures the network size setting, the TX output power, the certificates and keys.  The function is waiting for the connected state. Its final action is to initiate the Wi-SUN connection process.  The sl_wisun_app_core_network_connect() and sl_wisun_app_core_util_network_is_connected() functions also provide  an easy way to establish a connection and wait for it to be ready. Event handlers for basic Wi-SUN network events include the basic event handler implementations. The sl_wisun_app_core_get_current_addresses() function retrieves known IPv6 addresses. Use sl_wisun_app_core_get_state() function to get the status of the Stack API calls.  The sl_wisun_app_core_get_time_stat() function retrives the connection time, disconnection time stamps and total elapsed time in those states. Use sl_wisun_app_core_get_device_type() to get the selected device type for the project.  The device type can be changed in the Wi-SUN configurator interface.  sl_wisun_app_core_get_lfn_profile() and sl_wisun_app_core_get_lfn_params() provide an interface to access the selected LFN profile and its parameters.\n","instantiable":false,"label":"Wi-SUN Application Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_app_core","isEditable":false,"isEnabled":true,"name":"sl_wisun_app_core","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_app_core"},{"keyWords":"sl_wisun_app_status","componentId":"sl_wisun_app_status","isConfigurable":true,"documentation":"","description":"The component implements status notifications over CoAP.  It can be used in any application to gather runtime information about devices.  The component should be initialized with the sl_wisun_app_status_init() function.  Conditional sending can be customized by implementing the sl_wisun_app_status_condition_cb() function.  Server and notification parameters can be configured in the sl_wisun_app_status_config.h file  or at runtime using the appropriate setters/getters.  When the application starts, the component is initialized automatically with the default values from the configuration header. The configuration interface provides options to enable or disable the expected statistics data from the nodes,  such as device information, execution time statistics, and neighbor information.  Notifications can be received on any CoAP server, such as the [libcoap](https://libcoap.net) server application. Over the prebuilt binaries, any custom library can be used to implement a CoAP server that receives the notifications from the Wi-SUN node.\n","instantiable":false,"label":"Wi-SUN Application status over CoAP","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_app_status","isEditable":false,"isEnabled":true,"name":"sl_wisun_app_status","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_app_status"},{"keyWords":"sl_wisun_cli","componentId":"sl_wisun_cli","isConfigurable":true,"documentation":"","description":"The Wi-SUN CLI component offers command-line interface handlers for managing Wi-SUN network connections, settings, and various utility commands. It includes handlers for connecting to Wi-SUN networks using different configurations (FAN1.0, FAN1.1, explicit PHY settings), managing OTA DFU processes, performing network measurements, and interacting with TCP/UDP clients. Users can configure various aspects such as host addresses, ports, and measurement parameters. The component also supports commands for managing sockets, retrieving app status, and setting application-specific variables. This component features a configuration interface, allowing each CLI related to a component to be enabled or disabled individually. Additionally, there is a configuration option to enable or disable all CLI functionalities related to components with a single switch. The CLI commands are organized into logical groups, making it easy for users to find and use the commands they need.\n","instantiable":false,"label":"Wi-SUN CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_cli","isEditable":false,"isEnabled":true,"name":"sl_wisun_cli","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_cli"},{"keyWords":"sl_wisun_coap","componentId":"sl_wisun_coap","isConfigurable":true,"documentation":"http://docs.silabs.com/wisun/2.3.0/wisun-stack-api/sl-wisun-coap-api","description":"The Wi-SUN CoAP component offers an application layer implementation built on top of the Wi-SUN stack and its socket API. The CoAP protocol is specifically designed as an Internet Application Protocol for constrained devices operating in lossy networks (as defined in RFC 7252). Wi-SUN FAN networks precisely fit this definition. The CoAP implementation relies on the UDP transport layer for sending and receiving packets. Within the component, you'll find a set of helper functions that assist in building CoAP payloads, parsing CoAP packets, and freeing CoAP packets. Additionally, the CoAP Resource Handler service manages registered resources. For resource discovery, the Resource Discovery request provides an interface to retrieve information about available resources. These resources have additional attributes beyond the URI (Uniform Resource Identifier) path, which can be selectively filtered using specific Resource Discovery requests. Furthermore, the CoAP Notification service allows the creation and schedule  of notifications for the remote host.  The schedule time and send conditions can be customized based on the application requirements. To incorporate the CoAP component into the application, simply add it to the project and initialize it using sl_wisun_coap_init(). The CoAP component is compatible with third-party implementations, such as the  [libcoap](https://libcoap.net) server and client binaries.\n","instantiable":false,"label":"Wi-SUN CoAP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_coap","isEditable":false,"isEnabled":true,"name":"sl_wisun_coap","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_coap"},{"keyWords":"sl_wisun_ota_dfu","componentId":"sl_wisun_ota_dfu","isConfigurable":true,"documentation":"http://docs.silabs.com/wisun/2.3.0/wisun-stack-api/sl-wisun-ota-dfu-api","description":"The Wi-SUN Over-The-Air Device Firmware Upgrade (OTA DFU) service is implemented to facilitate the updating of Wi-SUN device firmware. This component requires the Gecko Bootloader API to execute firmware writing, verification, and bootload operations. To obtain a new Gecko Bootloader File (GBL) file from a remote host Over-The-Air, a Trivial File Transfer Protocol (TFTP) client is employed, leveraging the Wi-SUN network. The entire firmware upgrade session is manageable over CoAP, with the service offering remote host connection settings, firmware file selection, notification, and status request capabilities. Configuration of the connection to the TFTP remote host can be accomplished  within the component configuration file. To use this component, a bootloader must be flashed onto the device. The component relies on functions that reside within the bootloader. To choose the appropriate bootloader, consider factors such as flash location (internal or external) and size.  To save on download time, we recommend applying compression on both the bootloader and device projects.\n","instantiable":false,"label":"Wi-SUN Over-The-Air Device Firmware Upgrade (OTA DFU)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_ota_dfu","isEditable":false,"isEnabled":true,"name":"sl_wisun_ota_dfu","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_ota_dfu"},{"keyWords":"sl_wisun_ping","componentId":"sl_wisun_ping","isConfigurable":true,"documentation":"http://docs.silabs.com/wisun/2.3.0/wisun-stack-api/sl-wisun-ping-api","description":"The Ping component implements a ping service using the ICMPv6 protocol. It can send ICMPv6 packets, receive corresponding responses, and calculate round-trip latency. Applications can emit a single ping packet using the sl_wisun_ping_request() API. To receive the pong response, the sl_wisun_ping_response() API is called. The sl_wisun_ping() function offers a straightforward solution for periodic ping packet transmission and reception. To halt the process, use the sl_wisun_ping_stop() function. Ping test parameters such as size, number of pings sent, and timeout for response absence are configurable. Initialization of the component is done by calling the sl_wisun_ping_init() function.\n","instantiable":false,"label":"Wi-SUN Ping","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_ping","isEditable":false,"isEnabled":true,"name":"sl_wisun_ping","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_ping"},{"keyWords":"sl_wisun_app_setting","componentId":"sl_wisun_app_setting","isConfigurable":false,"documentation":"","description":"The Application Settings component provides the fundamental API for getting and setting Wi-SUN related settings within the application code.  After initializing with the app_wisun_setting_init() function, the setters and getters can be used in the application to interface  with runtime settings such as network name, network size, TX power, and PHY configuration.  A notification mechanism is implemented and is triggered by the appropriate settings changes.\n","instantiable":false,"label":"Wi-SUN Setting","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_app_setting","isEditable":false,"isEnabled":true,"name":"sl_wisun_app_setting","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-sl_wisun_app_setting"},{"keyWords":"wisun_silabs_certificates","componentId":"wisun_silabs_certificates","isConfigurable":false,"documentation":"","description":"Adds Wi-SUN Silabs Demo Certificates. These certificates are intended for development-time use and must not be utilized in a production device.\n","instantiable":false,"label":"Wi-SUN Silabs Demo Certificates","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-wisun_silabs_certificates","isEditable":false,"isEnabled":true,"name":"wisun_silabs_certificates","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-wisun_silabs_certificates"},{"keyWords":"sl_iperf","componentId":"sl_iperf","isConfigurable":true,"documentation":"http://docs.silabs.com/wisun/2.3.0/wisun-stack-api/sl-iperf","description":"The iPerf component offers a solution compatible with [iPerf2] (https://sourceforge.net/projects/iperf2/) for measuring UDP throughput. It provides comprehensive UDP support and implements both server and client modes, enabling the exchange of packets to assess bandwidth performance, inter-arrival jitter, and packet loss. The component relies on various functions, to configure and execute your iPerf test.  Parameters such as the server and client ports, preferred bandwidth, packet count, and remote peer address can be customized.  Upon completion of each iPerf test, an iPerf report is generated.   To integrate the iPerf component into the application, simply add it to the project and initialize it using sl_iperf_service_init().\n","instantiable":false,"label":"iPerf2","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-Wi-SUN_Services|studiocomproot-Wi-SUN-Wi-SUN_Services-sl_iperf","isEditable":false,"isEnabled":true,"name":"sl_iperf","isSelected":false,"id":"studiocomproot-Wi-SUN-Wi-SUN_Services-sl_iperf"}],"isEnabled":true,"name":"Wi-SUN Services","id":"studiocomproot-Wi-SUN-Wi-SUN_Services","label":"Wi-SUN Services","type":"category"},{"keyWords":"wisun_ddp_generate_csr","componentId":"wisun_ddp_generate_csr","isConfigurable":false,"documentation":"","description":"This component provides a Dynamic Data Provisioning (DDP) command for\ngenerating a Wi-SUN Certificate Signing Request (CSR).\n","instantiable":false,"label":"DDP generate Wi-SUN CSR","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-wisun_ddp_generate_csr","isEditable":false,"isEnabled":true,"name":"wisun_ddp_generate_csr","isSelected":false,"id":"studiocomproot-Wi-SUN-wisun_ddp_generate_csr"},{"keyWords":"wisun_ddp_generate_key_pair","componentId":"wisun_ddp_generate_key_pair","isConfigurable":false,"documentation":"","description":"This component provides a Dynamic Data Provisioning (DDP) command for\ngenerating a Wi-SUN device key pair.\n","instantiable":false,"label":"DDP generate Wi-SUN device key pair","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-wisun_ddp_generate_key_pair","isEditable":false,"isEnabled":true,"name":"wisun_ddp_generate_key_pair","isSelected":false,"id":"studiocomproot-Wi-SUN-wisun_ddp_generate_key_pair"},{"keyWords":"wisun_ddp_inject_key","componentId":"wisun_ddp_inject_key","isConfigurable":false,"documentation":"","description":"This component provides a Dynamic Data Provisioning (DDP) command for\ninjecting a Wi-SUN device key pair.\n","instantiable":false,"label":"DDP inject Wi-SUN device key pair","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-wisun_ddp_inject_key","isEditable":false,"isEnabled":true,"name":"wisun_ddp_inject_key","isSelected":false,"id":"studiocomproot-Wi-SUN-wisun_ddp_inject_key"},{"keyWords":"wisun_br_common_library","componentId":"wisun_br_common_library","isConfigurable":false,"documentation":"","description":"Provide Wi-SUN Border Router stack library","instantiable":false,"label":"Wi-SUN Border Router Stack (Library)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Wi-SUN|studiocomproot-Wi-SUN-wisun_br_common_library","isEditable":false,"isEnabled":true,"name":"wisun_br_common_library","isSelected":false,"id":"studiocomproot-Wi-SUN-wisun_br_common_library"}],"isEnabled":true,"name":"Wi-SUN","id":"studiocomproot-Wi-SUN","label":"Wi-SUN","type":"category"},{"children":[{"children":[{"keyWords":"zw_appshw_serialapi","componentId":"zw_appshw_serialapi","isConfigurable":true,"documentation":"","description":"This component provides basic hardware mapping and hardware initialization for the SerialAPI application. The component makes sure that both Series 1 and Series 2 devices have the right USART pin configuration. Interrupt and deep sleep functionalities are also handled for the SerialAPI application.\n","instantiable":false,"label":"SerialAPI AppsHw","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-AppsHw|studiocomproot-Z-Wave-AppsHw-zw_appshw_serialapi","isEditable":false,"isEnabled":true,"name":"zw_appshw_serialapi","isSelected":false,"id":"studiocomproot-Z-Wave-AppsHw-zw_appshw_serialapi"},{"keyWords":"zw_appshw_zniffer","componentId":"zw_appshw_zniffer","isConfigurable":true,"documentation":"","description":"This SLC component provides support for Z-Wave Zniffer (beta) Application. The Z-Wave Zniffer Application provides functionality for capturing and analyzing Z-Wave network traffic and sends it through a Serial connection. The Z-Wave PTI appliction is supported in the PC Zniffer application out of the box.\n","instantiable":false,"label":"Zniffer AppsHw","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-AppsHw|studiocomproot-Z-Wave-AppsHw-zw_appshw_zniffer","isEditable":false,"isEnabled":true,"name":"zw_appshw_zniffer","isSelected":false,"id":"studiocomproot-Z-Wave-AppsHw-zw_appshw_zniffer"}],"isEnabled":true,"name":"AppsHw","id":"studiocomproot-Z-Wave-AppsHw","label":"AppsHw","type":"category"},{"children":[{"keyWords":"zw_cli_common","componentId":"zw_cli_common","isConfigurable":false,"documentation":"","description":"This component provides common CLI (Command Line Interface), that can be used to send commands to the Z-wave device,  instead of using the buttons, e.g initiating learn mode on a device or performing a factory reset. This component also provides functionalities for getting DSK and current region of the device.\n","instantiable":false,"label":"Z-Wave CLI Common Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-CLI|studiocomproot-Z-Wave-CLI-zw_cli_common","isEditable":false,"isEnabled":true,"name":"zw_cli_common","isSelected":false,"id":"studiocomproot-Z-Wave-CLI-zw_cli_common"},{"keyWords":"zw_cli_sleeping","componentId":"zw_cli_sleeping","isConfigurable":true,"documentation":"","description":"This component extends the zw_cli_common component with the ability to enable or disable sleeping, because the UART peripheral is not available by default in the sleeping applications. If the user presses the reset button on the device (or using `commander reset`), the device will wake up and the UART will be available for a short period  of time, which allows to disable sleeping with the 'sleeping' CLI commands provided by this component.\n","instantiable":false,"label":"Z-Wave CLI Sleeping Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-CLI|studiocomproot-Z-Wave-CLI-zw_cli_sleeping","isEditable":false,"isEnabled":true,"name":"zw_cli_sleeping","isSelected":false,"id":"studiocomproot-Z-Wave-CLI-zw_cli_sleeping"}],"isEnabled":true,"name":"CLI","id":"studiocomproot-Z-Wave-CLI","label":"CLI","type":"category"},{"children":[{"keyWords":"zw_cc_basiccontroller","componentId":"zw_cc_basiccontroller","isConfigurable":false,"documentation":"","description":"Basic Command Class allows a controlling device to operate the primary functionality of another device without any further knowledge. Basic Command Class ensures a basic interoperability if no other Command Class is shared by two devices.\nBasic Controller component provides control of other devices using Basic Command Class.\n","instantiable":false,"label":"Basic Command Class Control","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_basiccontroller","isEditable":false,"isEnabled":true,"name":"zw_cc_basiccontroller","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_basiccontroller"},{"keyWords":"zw_cc_binary_switch","componentId":"zw_cc_binary_switch","isConfigurable":true,"documentation":"","description":"Binary Switch Command Class is used to control the On/Off state of supporting nodes. The GET command is used to request the current On/Off state from a node. The SET command is used to set the On/Off state at the receiving node. Note that this Command Class supports advanced configuration. To use it, please make sure that configuration related to your project is added to cc_config file located in <app_location>/config/cc_config/<app_name>.cc_config. See protocol/z-wave/DevTools/cc_configurator/README.md for more details.\n","instantiable":false,"label":"Binary Switch Command Class","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_binary_switch","isEditable":false,"isEnabled":true,"name":"zw_cc_binary_switch","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_binary_switch"},{"keyWords":"zw_cc_central_scene","componentId":"zw_cc_central_scene","isConfigurable":false,"documentation":"","description":"The Central Scene Command Class is used to communicate central scene activations to the controller using the lifeline concept. The central scene controller must configure lifeline association in relevant nodes before the home control application can take action in the central scene controller. Note that this Command Class supports advanced configuration. To use it, please make sure that configuration related to your project is added to cc_config file located in <app_location>/config/cc_config/<app_name>.cc_config. See protocol/z-wave/DevTools/cc_configurator/README.md for more details.\n","instantiable":false,"label":"Central Scene Command Class","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_central_scene","isEditable":false,"isEnabled":true,"name":"zw_cc_central_scene","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_central_scene"},{"keyWords":"zw_cc_color_switch","componentId":"zw_cc_color_switch","isConfigurable":true,"documentation":"","description":"The Color Switch Command Class is used to control color-capable devices, and to manipulate the color components of a device. Each color component is scaled by the brightness level previously set by the Multilevel Switch Set, Binary Switch Set or Basic Set Command. Note that this Command Class supports advanced configuration. To use it, please make sure that configuration related to your project is added to cc_config file located in <app_location>/config/cc_config/<app_name>.cc_config. See protocol/z-wave/DevTools/cc_configurator/README.md for more details.\n","instantiable":false,"label":"Color Switch Command Class","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_color_switch","isEditable":false,"isEnabled":true,"name":"zw_cc_color_switch","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_color_switch"},{"keyWords":"zw_cc_configuration","componentId":"zw_cc_configuration","isConfigurable":false,"documentation":"","description":"The Configuration Command Class allows product-specific configuration parameters to be changed. One example is the default dimming rate of a light dimmer. Configuration parameters MUST be specified in the product documentation. Configuration parameters accessed via this command class MUST NOT replace similar commands provided by other existing Command Classes.\n","instantiable":false,"label":"Configuration Command Class","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_configuration","isEditable":false,"isEnabled":true,"name":"zw_cc_configuration","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_configuration"},{"keyWords":"zw_cc_deviceresetlocally","componentId":"zw_cc_deviceresetlocally","isConfigurable":false,"documentation":"","description":"The Device Reset Locally Command Class is used to notify lifeline associations, i.e. central controller, that a Z-Wave device is resetting its network-specific parameters. Any node should support this Command Class if it can be reset to factory default. The reset operation MUST reset protocol data (HomeID, NodeID, and so on). For Z-Wave Plus nodes, additional requirements upon node reset are provided in documentation.\n","instantiable":false,"label":"DeviceResetLocally Command Class","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_deviceresetlocally","isEditable":false,"isEnabled":true,"name":"zw_cc_deviceresetlocally","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_deviceresetlocally"},{"keyWords":"zw_cc_firmwareupdate","componentId":"zw_cc_firmwareupdate","isConfigurable":true,"documentation":"","description":"The Firmware Update Meta Data Command Class may be used to transfer a firmware image to a Z-Wave device.\nA device which supports the Firmware Update CC must support the Version CC and the Manufacturer-Specific CC to enable other devices to select the correct firmware for a specific target. The Version Command Class may be used to verify that the intended firmware version is installed.\n","instantiable":false,"label":"FirmwareUpdate Command Class","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_firmwareupdate","isEditable":false,"isEnabled":true,"name":"zw_cc_firmwareupdate","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_firmwareupdate"},{"keyWords":"zw_cc_manufacturerspecific","componentId":"zw_cc_manufacturerspecific","isConfigurable":false,"documentation":"","description":"The Manufacturer Specific Command Class is used to advertize Manufacturer-Specific and Device-specific information.\nThe data content MUST be vendor-specific and MUST be non-value added with respect to the Home Automation application in general. Manufacturer ID, Product Type ID, and Product ID can be sent with the command class\n","instantiable":false,"label":"Manufacturer Specific Command Class","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_manufacturerspecific","isEditable":false,"isEnabled":true,"name":"zw_cc_manufacturerspecific","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_manufacturerspecific"},{"keyWords":"zw_cc_multi_channel_control","componentId":"zw_cc_multi_channel_control","isConfigurable":false,"documentation":"","description":"The Multi Channel Command Class is used to manage associations to Multi Channel End Point destinations as well as to NodeID destinations. An association group sends an unsolicited command to the configured destinations when triggered by an event. The parameters of the command may be dynamic, e.g. the temperature of a sensor reading or the light level for a dimmer.\n","instantiable":false,"label":"Multi Channel Command Class Control","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_multi_channel_control","isEditable":false,"isEnabled":true,"name":"zw_cc_multi_channel_control","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_multi_channel_control"},{"keyWords":"zw_cc_multi_channel_support","componentId":"zw_cc_multi_channel_support","isConfigurable":true,"documentation":"","description":"The Multi Channel command class is used to address one or more endpoints in a Multi Channel device.\nThis component provides functionality for supporting devices with multiple endpoints that can be controlled directly by the Multi Channel Command Class. One device can have multiple unique endpoints, but the Root device itself can be addressed as well.\n","instantiable":false,"label":"Multi Channel Command Class Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_multi_channel_support","isEditable":false,"isEnabled":true,"name":"zw_cc_multi_channel_support","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_multi_channel_support"},{"keyWords":"zw_cc_multilevel_sensor","componentId":"zw_cc_multilevel_sensor","isConfigurable":true,"documentation":"","description":"The Multilevel Sensor Command Class is used to advertize numerical sensor readings. The Multilevel Sensor Get Supported Sensor Command is used to request the supported Sensor Types from a supporting node. The Multilevel Sensor Supported Sensor Report Command is used to advertize the supported Sensor Types by a supporting node. A controlling node MUST always show the sensor reading values even if the Sensor Type and/or Scale is unknown. Note that this Command Class supports advanced configuration. To use it, please make sure that configuration related to your project is added to cc_config file located in <app_location>/config/cc_config/<app_name>.cc_config. See protocol/z-wave/DevTools/cc_configurator/README.md for more details.\n","instantiable":false,"label":"Multilevel Sensor Command Class","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_multilevel_sensor","isEditable":false,"isEnabled":true,"name":"zw_cc_multilevel_sensor","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_multilevel_sensor"},{"keyWords":"zw_cc_multilevelswitchcontrol","componentId":"zw_cc_multilevelswitchcontrol","isConfigurable":false,"documentation":"","description":"The Mulitilevel Switch Command Class is used to request the supported Switch Types of a supporting devices, such as a wall controller or a wall switch. Devices with multilevel capability can be controlled by the Command Class, for example dimming lights.\n","instantiable":false,"label":"Multilevel Switch Command Class Control","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_multilevelswitchcontrol","isEditable":false,"isEnabled":true,"name":"zw_cc_multilevelswitchcontrol","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_multilevelswitchcontrol"},{"keyWords":"zw_cc_multilevel_switch_support","componentId":"zw_cc_multilevel_switch_support","isConfigurable":true,"documentation":"","description":"This component provides support for the Multilevel Switch Command Class commands, controlled by another device. The Multilevel Switch Command Class is used to control devices with multilevel capability. This command is used to request the supported Switch Types of a supporting device. Note that this Command Class supports advanced configuration. To use it, please make sure that configuration related to your project is added to cc_config file located in <app_location>/config/cc_config/<app_name>.cc_config. See protocol/z-wave/DevTools/cc_configurator/README.md for more details.\n","instantiable":false,"label":"Multilevel Switch Command Class Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_multilevel_switch_support","isEditable":false,"isEnabled":true,"name":"zw_cc_multilevel_switch_support","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_multilevel_switch_support"},{"keyWords":"zw_cc_security","componentId":"zw_cc_security","isConfigurable":false,"documentation":"","description":"Z-Wave security is provided by the Security Command Class, which provides end-to-end application-layer security. The Security Command Class is a framework for allowing nodes to communicate securely in a Z-Wave network.\nThe supported security levels are: NONE, S0, S2_ACCESS, S2_AUTHENTICATED, S2_UNAUTHENTICATED\n","instantiable":false,"label":"Security Command Class","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_security","isEditable":false,"isEnabled":true,"name":"zw_cc_security","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_security"},{"keyWords":"zw_cc_wakeup","componentId":"zw_cc_wakeup","isConfigurable":true,"documentation":"","description":"The Wake Up Command Class allows a battery-powered device to notify another device (always listening) that it is awake and ready to receive any queued commands, or has detected a local event. The wakeup period can be set from 20 seconds to 1 day, the default period is 5 minutes.\n","instantiable":false,"label":"Wakeup Command Class","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_wakeup","isEditable":false,"isEnabled":true,"name":"zw_cc_wakeup","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_wakeup"},{"keyWords":"zw_cc_zwaveplusinfo","componentId":"zw_cc_zwaveplusinfo","isConfigurable":false,"documentation":"","description":"The Z-Wave Plus Info Command Class is used to differentiate between Z-Wave Plus, Z-Wave for IP and Z-Wave devices. Furthermore this command class provides additional information about the Z-Wave Plus device in question. The Z-Wave Plus Info Command Class defines two icon types. Icon types allow for a meaningful, homogeneous representation in user and installer Graphical User Interfaces (GUI), respectively.\n","instantiable":false,"label":"ZWavePlusInfo Command Class","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Command_Classes|studiocomproot-Z-Wave-Command_Classes-zw_cc_zwaveplusinfo","isEditable":false,"isEnabled":true,"name":"zw_cc_zwaveplusinfo","isSelected":false,"id":"studiocomproot-Z-Wave-Command_Classes-zw_cc_zwaveplusinfo"}],"isEnabled":true,"name":"Command Classes","id":"studiocomproot-Z-Wave-Command_Classes","label":"Command Classes","type":"category"},{"children":[{"keyWords":"ZW_MIGRATION_FROM_7_20","componentId":"ZW_MIGRATION_FROM_7_20","isConfigurable":false,"documentation":"","description":"This component enables the migration code introduced in the 7.21 gsdk release by providing a define ZW_MIGRATION_FROM_7_20. This define can be used to trigger a migration code block. Migration code is a block of code that is introduced when there is an incompatible change in certain file structures between two minor GSDK versions. Then this migration code block is enabled to transform the file structures from the older GSDK version to the newer GSDK version.\n\nIt is applicable only when the developer is on an older GSDK version and wants to port the application to the newer GSDK version. This component can be uninstalled if the user is already on a later GSDK version.\nNOTE: Only Serial API is affected.\n","instantiable":false,"label":"Migration from V7.20 (to V7.21)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Migration|studiocomproot-Z-Wave-Migration-ZW_MIGRATION_FROM_7_20","isEditable":false,"isEnabled":true,"name":"ZW_MIGRATION_FROM_7_20","isSelected":false,"id":"studiocomproot-Z-Wave-Migration-ZW_MIGRATION_FROM_7_20"},{"keyWords":"ZW_MIGRATION_TO_7_19","componentId":"ZW_MIGRATION_TO_7_19","isConfigurable":false,"documentation":"","description":"This component enables the migration code introduced in the 7.19 gsdk release by providing a define  ZW_MIGRATION_TO_7_19. This define can be used to trigger a migration code block. Migration code is a block of code that is introduced when there is an incompatible change in certain file structures between two minor GSDK versions. Then this migration code block is enabled to transform the file structures from the older GSDK version to the newer  GSDK version.\n\nIt is applicable only when the developer is on an older GSDK version and would like to port the application to the newer GSDK version. This component can be uninstalled if the user is already on  a later version of the GSDK.\n","instantiable":false,"label":"V7.19","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Migration|studiocomproot-Z-Wave-Migration-ZW_MIGRATION_TO_7_19","isEditable":false,"isEnabled":true,"name":"ZW_MIGRATION_TO_7_19","isSelected":false,"id":"studiocomproot-Z-Wave-Migration-ZW_MIGRATION_TO_7_19"},{"keyWords":"ZW_MIGRATION_TO_7_20","componentId":"ZW_MIGRATION_TO_7_20","isConfigurable":false,"documentation":"","description":"This component enables the migration code introduced in the 7.20 gsdk release by providing a define  ZW_MIGRATION_TO_7_20. This define can be used to trigger a migration code block. Migration code is a block of code that is introduced when there is an incompatible change in certain file structures between two minor GSDK versions. Then this migration code block is enabled to transform the file structures from the older GSDK version to the newer  GSDK version.\n\nIt is applicable only when the developer is on an older GSDK version and would like to port the application to the newer GSDK version. This component can be uninstalled if the user is already on  a later version of the GSDK.\n","instantiable":false,"label":"V7.20","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Migration|studiocomproot-Z-Wave-Migration-ZW_MIGRATION_TO_7_20","isEditable":false,"isEnabled":true,"name":"ZW_MIGRATION_TO_7_20","isSelected":false,"id":"studiocomproot-Z-Wave-Migration-ZW_MIGRATION_TO_7_20"}],"isEnabled":true,"name":"Migration","id":"studiocomproot-Z-Wave-Migration","label":"Migration","type":"category"},{"children":[{"keyWords":"zw_role_type_central_static_controller","componentId":"zw_role_type_central_static_controller","isConfigurable":false,"documentation":"","description":"The Central Static Controller Role Type is intended for always-on devices that are capable of operating as a central controller.\nThese are typically routers, central gateways or some types of central communication panel. Note: The actual role type and device option mask is controlled by the application.\nDefine ZAF_CONFIG_DEVICE_OPTION_MASK is automatically set by this component.\n","instantiable":false,"label":"Z-Wave Central Static Controller","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Role_Types|studiocomproot-Z-Wave-Role_Types-zw_role_type_central_static_controller","isEditable":false,"isEnabled":true,"name":"zw_role_type_central_static_controller","isSelected":false,"id":"studiocomproot-Z-Wave-Role_Types-zw_role_type_central_static_controller"},{"keyWords":"zw_role_type_always_on","componentId":"zw_role_type_always_on","isConfigurable":false,"documentation":"","description":"The Z-Wave Always On End Device (AOS) Role Type is intended for mains powered devices that are always reachable, for example light switches. Always On End Devices are capable of repeat routing the z-wave messages.\nDefines ZAF_CONFIG_DEVICE_OPTION_MASK and ZAF_CONFIG_APP_ROLE_TYPE are automatically set by this component.\n","instantiable":false,"label":"Z-Wave Role Type Always On","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Role_Types|studiocomproot-Z-Wave-Role_Types-zw_role_type_always_on","isEditable":false,"isEnabled":true,"name":"zw_role_type_always_on","isSelected":false,"id":"studiocomproot-Z-Wave-Role_Types-zw_role_type_always_on"},{"keyWords":"zw_role_type_sleeping_listening","componentId":"zw_role_type_sleeping_listening","isConfigurable":false,"documentation":"","description":"The Listening Sleeping End Device Role Type (LSS) is intended for battery-operated devices that can be reached even though they are sleeping thanks to Beaming (FLiRS devices). Examples include Door Locks and Battery-Operated Thermostats.\nDefine ZAF_CONFIG_APP_ROLE_TYPE is automatically set by this component.\n","instantiable":false,"label":"Z-Wave Role Type Listening Sleeping","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Role_Types|studiocomproot-Z-Wave-Role_Types-zw_role_type_sleeping_listening","isEditable":false,"isEnabled":true,"name":"zw_role_type_sleeping_listening","isSelected":false,"id":"studiocomproot-Z-Wave-Role_Types-zw_role_type_sleeping_listening"},{"keyWords":"zw_role_type_sleeping_listening_1000ms","componentId":"zw_role_type_sleeping_listening_1000ms","isConfigurable":false,"documentation":"","description":"The Listening Sleeping End Device Role Type (LSS) is intended for battery-operated devices that can be reached even though they are sleeping thanks to Beaming (FLiRS devices). Examples include Door Locks and Battery-Operated Thermostats. It listens every  1000 ms\nDefine ZAF_CONFIG_DEVICE_OPTION_MASK is automatically set by this component.\n","instantiable":false,"label":"Z-Wave Role Type Listening Sleeping 1000ms","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Role_Types|studiocomproot-Z-Wave-Role_Types-zw_role_type_sleeping_listening_1000ms","isEditable":false,"isEnabled":true,"name":"zw_role_type_sleeping_listening_1000ms","isSelected":false,"id":"studiocomproot-Z-Wave-Role_Types-zw_role_type_sleeping_listening_1000ms"},{"keyWords":"zw_role_type_sleeping_listening_250ms","componentId":"zw_role_type_sleeping_listening_250ms","isConfigurable":false,"documentation":"","description":"The Listening Sleeping End Device Role Type (LSS) is intended for battery-operated devices that can be reached even though they are sleeping thanks to Beaming (FLiRS devices). Examples include Door Locks and Battery-Operated Thermostats. It listens every  250 ms\nDefine ZAF_CONFIG_DEVICE_OPTION_MASK is automatically set by this component.\n","instantiable":false,"label":"Z-Wave Role Type Listening Sleeping 250ms","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Role_Types|studiocomproot-Z-Wave-Role_Types-zw_role_type_sleeping_listening_250ms","isEditable":false,"isEnabled":true,"name":"zw_role_type_sleeping_listening_250ms","isSelected":false,"id":"studiocomproot-Z-Wave-Role_Types-zw_role_type_sleeping_listening_250ms"},{"keyWords":"zw_role_type_sleeping_reporting","componentId":"zw_role_type_sleeping_reporting","isConfigurable":false,"documentation":"","description":"The Reporting Sleeping End Device Role Type (RSS) is intended for battery-powered devices that only wake up to inform a controller they are available to receive commands or have detected a local event.\nDefines ZAF_CONFIG_DEVICE_OPTION_MASK and ZAF_CONFIG_APP_ROLE_TYPE are automatically set by this component.\n","instantiable":false,"label":"Z-Wave Role Type Sleeping Reporting","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-Role_Types|studiocomproot-Z-Wave-Role_Types-zw_role_type_sleeping_reporting","isEditable":false,"isEnabled":true,"name":"zw_role_type_sleeping_reporting","isSelected":false,"id":"studiocomproot-Z-Wave-Role_Types-zw_role_type_sleeping_reporting"}],"isEnabled":true,"name":"Role Types","id":"studiocomproot-Z-Wave-Role_Types","label":"Role Types","type":"category"},{"children":[{"children":[{"keyWords":"zaf_ncp","componentId":"zaf_ncp","isConfigurable":false,"documentation":"","description":"It includes the event distributor needed by NCP Applications.\nEvery sample application uses the event distributor component. It contains the core code shared between the Event Distributor types (NCP, SOC).\nBoth the NCP and SOC variations must implement their own event distributor table; the only difference in the usage is whether the application allows for polling the event distributor table, or is fully event-driven.\n","instantiable":false,"label":"ZAF NCP Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-ZAF|studiocomproot-Z-Wave-ZAF-Application_Type|studiocomproot-Z-Wave-ZAF-Application_Type-zaf_ncp","isEditable":false,"isEnabled":true,"name":"zaf_ncp","isSelected":false,"id":"studiocomproot-Z-Wave-ZAF-Application_Type-zaf_ncp"},{"keyWords":"zaf_soc","componentId":"zaf_soc","isConfigurable":false,"documentation":"","description":"It includes the event distributor and NVM handling needed by SOC Applications. Every sample application uses the event distributor component. It contains the core code shared between the Event Distributor types (NCP, SOC).   Both the NCP and SOC variations must implement their own event distributor table; the only difference in usage is whether the application allows for polling the event distributor table, or is fully event-driven.\n","instantiable":false,"label":"ZAF SOC Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-ZAF|studiocomproot-Z-Wave-ZAF-Application_Type|studiocomproot-Z-Wave-ZAF-Application_Type-zaf_soc","isEditable":false,"isEnabled":true,"name":"zaf_soc","isSelected":false,"id":"studiocomproot-Z-Wave-ZAF-Application_Type-zaf_soc"}],"isEnabled":true,"name":"Application Type","id":"studiocomproot-Z-Wave-ZAF-Application_Type","label":"Application Type","type":"category"},{"children":[{"keyWords":"zaf_cc_list_generator","componentId":"zaf_cc_list_generator","isConfigurable":false,"documentation":"","description":"This component contains the functionality to generate the Command Class lists from the linked Command Classes. It can collect all endpoints and is used during the ZAF initialization phase. It also collects the secure and not secure command classes. It is possible to get the list through the get function.\n","instantiable":false,"label":"ZAF Command Class List Generator Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-ZAF|studiocomproot-Z-Wave-ZAF-CC_List_Generator|studiocomproot-Z-Wave-ZAF-CC_List_Generator-zaf_cc_list_generator","isEditable":false,"isEnabled":true,"name":"zaf_cc_list_generator","isSelected":false,"id":"studiocomproot-Z-Wave-ZAF-CC_List_Generator-zaf_cc_list_generator"}],"isEnabled":true,"name":"CC List Generator","id":"studiocomproot-Z-Wave-ZAF-CC_List_Generator","label":"CC List Generator","type":"category"},{"children":[{"keyWords":"zaf_event_distributor_core","componentId":"zaf_event_distributor_core","isConfigurable":true,"documentation":"","description":"Every sample application uses the event distributor component. It contains the core code shared between the Event Distributor types (NCP, SOC).\nBoth the NCP and SOC variations must implement their own event distributor table; the only difference in the usage is whether the application allows for polling the event distributor table, or is fully event-driven.\n","instantiable":false,"label":"ZAF Event Distributor Core Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-ZAF|studiocomproot-Z-Wave-ZAF-Event_Distributor|studiocomproot-Z-Wave-ZAF-Event_Distributor-zaf_event_distributor_core","isEditable":false,"isEnabled":true,"name":"zaf_event_distributor_core","isSelected":false,"id":"studiocomproot-Z-Wave-ZAF-Event_Distributor-zaf_event_distributor_core"},{"keyWords":"zaf_event_distributor_ncp","componentId":"zaf_event_distributor_ncp","isConfigurable":false,"documentation":"","description":"This component implements the event distributor needed by NCP (Network Co-Processor) Applications. It can handle invalid states, such as maximum node inclusion reached, as well as different process flows such as learn mode or reset. It initializes some subsystems at system start, such as the EventQueue.\n","instantiable":false,"label":"ZAF Event Distributor NCP Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-ZAF|studiocomproot-Z-Wave-ZAF-Event_Distributor|studiocomproot-Z-Wave-ZAF-Event_Distributor-zaf_event_distributor_ncp","isEditable":false,"isEnabled":true,"name":"zaf_event_distributor_ncp","isSelected":false,"id":"studiocomproot-Z-Wave-ZAF-Event_Distributor-zaf_event_distributor_ncp"},{"keyWords":"zaf_event_distributor_soc","componentId":"zaf_event_distributor_soc","isConfigurable":true,"documentation":"","description":"It includes the event distributor needed by System on a Chip (SOC) Applications. It can handle invalid states (e.g. maximum node inclusion reached), as well as different process flows (e.g. learn mode or reset). It initializes some subsystems at system start, such as the EventQueue.\n","instantiable":false,"label":"ZAF Event Distributor SOC Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-ZAF|studiocomproot-Z-Wave-ZAF-Event_Distributor|studiocomproot-Z-Wave-ZAF-Event_Distributor-zaf_event_distributor_soc","isEditable":false,"isEnabled":true,"name":"zaf_event_distributor_soc","isSelected":false,"id":"studiocomproot-Z-Wave-ZAF-Event_Distributor-zaf_event_distributor_soc"}],"isEnabled":true,"name":"Event Distributor","id":"studiocomproot-Z-Wave-ZAF-Event_Distributor","label":"Event Distributor","type":"category"},{"children":[{"keyWords":"zaf_nvm_soc","componentId":"zaf_nvm_soc","isConfigurable":false,"documentation":"","description":"This component implements the non-volatile memory (NVM) handling, which is needed by SoC applications. This type of memory can preserve the stored information even in EM4 (the lowest power energy mode) or in case of shutdown. This component also provides API for default configuration.\n","instantiable":false,"label":"ZAF NVM SOC Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-ZAF|studiocomproot-Z-Wave-ZAF-NVM|studiocomproot-Z-Wave-ZAF-NVM-zaf_nvm_soc","isEditable":false,"isEnabled":true,"name":"zaf_nvm_soc","isSelected":false,"id":"studiocomproot-Z-Wave-ZAF-NVM-zaf_nvm_soc"}],"isEnabled":true,"name":"NVM","id":"studiocomproot-Z-Wave-ZAF-NVM","label":"NVM","type":"category"},{"children":[{"keyWords":"zaf_protocol_config","componentId":"zaf_protocol_config","isConfigurable":false,"documentation":"","description":"This component contains the functionality to generate based on the configurations provided in the application the Application Node Info, Radio Configuration and Protocol Configuration. This component can be used by NCP and SOC applications and it is mandatory for all applications.\n","instantiable":false,"label":"ZAF Protocol Configuration Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-ZAF|studiocomproot-Z-Wave-ZAF-Protocol_Config|studiocomproot-Z-Wave-ZAF-Protocol_Config-zaf_protocol_config","isEditable":false,"isEnabled":true,"name":"zaf_protocol_config","isSelected":false,"id":"studiocomproot-Z-Wave-ZAF-Protocol_Config-zaf_protocol_config"}],"isEnabled":true,"name":"Protocol Config","id":"studiocomproot-Z-Wave-ZAF-Protocol_Config","label":"Protocol Config","type":"category"},{"children":[{"keyWords":"zaf_transport","componentId":"zaf_transport","isConfigurable":true,"documentation":"","description":"This component contains the functionality to send frames from the application to the protocol. It has a FIFO to ensure determinism in the process. The queue size is configurable since it is heavily dependent on the use case of the application. The default size is set to 2 since this is the minimum for our sample  applications. The user must configure it for optimal memory usage.\n","instantiable":false,"label":"ZAF Transport Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-ZAF|studiocomproot-Z-Wave-ZAF-Transport|studiocomproot-Z-Wave-ZAF-Transport-zaf_transport","isEditable":false,"isEnabled":true,"name":"zaf_transport","isSelected":false,"id":"studiocomproot-Z-Wave-ZAF-Transport-zaf_transport"}],"isEnabled":true,"name":"Transport","id":"studiocomproot-Z-Wave-ZAF-Transport","label":"Transport","type":"category"}],"isEnabled":true,"name":"ZAF","id":"studiocomproot-Z-Wave-ZAF","label":"ZAF","type":"category"},{"keyWords":"zw_true_status","componentId":"zw_true_status","isConfigurable":true,"documentation":"","description":"The True Status Engine is used by the application framework. This module is used to notify the Lifeline (or any other association groups) of state changes for any Command Class. A state change can be triggered by a command from a remote note, or by a local change such as a button press.\n","instantiable":false,"label":"True Status Engine","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-zw_true_status","isEditable":false,"isEnabled":true,"name":"zw_true_status","isSelected":false,"id":"studiocomproot-Z-Wave-zw_true_status"},{"keyWords":"zw_app_timer_deep_sleep","componentId":"zw_app_timer_deep_sleep","isConfigurable":false,"documentation":"","description":"This component ensures that timer callbacks are efficiently performed in the Z-Wave application task. This module wraps a Z-Wave SwTimerLiaison and presents it as a \"singleton\", easing its  availability among the Application modules. For detailed documentation see SwTimerLiaison.h under `protocol/z-wave/Componets/SwTimer`.\n","instantiable":false,"label":"Z-Wave App Timer Deep Sleep","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-zw_app_timer_deep_sleep","isEditable":false,"isEnabled":true,"name":"zw_app_timer_deep_sleep","isSelected":false,"id":"studiocomproot-Z-Wave-zw_app_timer_deep_sleep"},{"keyWords":"zw_debug","componentId":"zw_debug","isConfigurable":false,"documentation":"","description":"This component, which offers zw_debug and zw_build_mode, is a crucial tool for debugging and development.  If this component is installed, the firmware will be compiled with increased flash memory usage,  providing invaluable insights into application behavior and aiding in efficient troubleshooting and optimization.\n","instantiable":false,"label":"Z-Wave Debug","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-zw_debug","isEditable":false,"isEnabled":true,"name":"zw_debug","isSelected":false,"id":"studiocomproot-Z-Wave-zw_debug"},{"keyWords":"zw_debug_print","componentId":"zw_debug_print","isConfigurable":false,"documentation":"","description":"This component is designed to enable debug printing within a Z-Wave application. If this component is installed, then the users are able to print debug logs through  SL IOStream component, which is using UART by default, except zwave_ncp_serial_api(s) firmware  which are using SWO debug.\n","instantiable":false,"label":"Z-Wave Debug Print","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-zw_debug_print","isEditable":false,"isEnabled":true,"name":"zw_debug_print","isSelected":false,"id":"studiocomproot-Z-Wave-zw_debug_print"},{"keyWords":"zaf_job_helper","componentId":"zaf_job_helper","isConfigurable":false,"documentation":"","description":"This component contains the legacy job helper. It allows applications to enqueue events in a sequential way. For example, upon event A, two new events are enqueued B and C as jobs. Event C will only be handled once event B is done.\nThis component should be replaced by using the zaf transport queue which removed the need for jobs in the applications because now it is possible to \"send and forget\" a frame.\n","instantiable":false,"label":"Z-Wave Job Helper Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-zaf_job_helper","isEditable":false,"isEnabled":true,"name":"zaf_job_helper","isSelected":false,"id":"studiocomproot-Z-Wave-zaf_job_helper"},{"keyWords":"zw_ota","componentId":"zw_ota","isConfigurable":false,"documentation":"","description":"The Z-Wave OTA SLC component, which is a crucial component for embedded devices, can be used by applications that  support OTA (Over The Air Firmware Update). This component defines custom bootloader  storage size in flash for Z-Wave applications. NOTE: Bootloader size are differenet in Release and Debug mode.\n","instantiable":false,"label":"Z-Wave OTA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-zw_ota","isEditable":false,"isEnabled":true,"name":"zw_ota","isSelected":false,"id":"studiocomproot-Z-Wave-zw_ota"},{"keyWords":"zw_release","componentId":"zw_release","isConfigurable":false,"documentation":"","description":"This component disables the debug print functionality by defining the NO_DEBUGPRINT and NDEBUG macros. It is used to optimize the code for production by removing unnecessary debug output.  By reducing the code size and eliminating debug statements, it helps improve performance and shrink memory usage.\n","instantiable":false,"label":"Z-Wave Release","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-zw_release","isEditable":false,"isEnabled":true,"name":"zw_release","isSelected":false,"id":"studiocomproot-Z-Wave-zw_release"},{"keyWords":"zw_versions","componentId":"zw_versions","isConfigurable":true,"documentation":"","description":"This component provides the Protocol-specific, Application Framework-specific, and SDK-related version numbers (in the form of MINOR - MAJOR - PATH). The application developer can freely alter the ZAF_VERSION_* version numbers according to their needs. This can be done in this component. Application version, which is generated during release of SDK, the application developer can freely alter the version numbers according to his needs.\n","instantiable":false,"label":"Z-Wave Version Numbers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-zw_versions","isEditable":false,"isEnabled":true,"name":"zw_versions","isSelected":false,"id":"studiocomproot-Z-Wave-zw_versions"},{"keyWords":"zw_zpal_zniffer_app","componentId":"zw_zpal_zniffer_app","isConfigurable":false,"documentation":"","description":"This component contains ZPAL libraries used for the Z-wave Zniffer (beta) Application build. Z-Wave Zniffer Application provides functionality for capturing and analyzing Z-Wave network traffic and send it through Serial. Z-Wave PTI appliction is supported in PC Zniffer application out of the box.\n","instantiable":false,"label":"Z-Wave ZPAL Zniffer Application","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-zw_zpal_zniffer_app","isEditable":false,"isEnabled":true,"name":"zw_zpal_zniffer_app","isSelected":false,"id":"studiocomproot-Z-Wave-zw_zpal_zniffer_app"},{"keyWords":"zw_zniffer_dependency","componentId":"zw_zniffer_dependency","isConfigurable":false,"documentation":"","description":"This component contains header files that are required for the proper functioning of the Z-Wave Zniffer application. These files are dependencies of the zniffer component and must be included for the application to work correctly. Including these files ensures full compability with the PC Zniffer application.\n","instantiable":false,"label":"Z-Wave Zniffer Application Dependency","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-zw_zniffer_dependency","isEditable":false,"isEnabled":true,"name":"zw_zniffer_dependency","isSelected":false,"id":"studiocomproot-Z-Wave-zw_zniffer_dependency"},{"keyWords":"zw_dcdc_override","componentId":"zw_dcdc_override","isConfigurable":false,"documentation":"","description":"This component changes the DC-DC configuration when the controller enters a lower energy usage state (EM2 or EM4 mode). It also handles voltage monitoring during the boot operation. The possible configuration values that can be set are: AUTO, BYPASS, and DCDC_LOW_NOISE.\n","instantiable":false,"label":"Z-Wave dcdc Override Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Z-Wave|studiocomproot-Z-Wave-zw_dcdc_override","isEditable":false,"isEnabled":true,"name":"zw_dcdc_override","isSelected":false,"id":"studiocomproot-Z-Wave-zw_dcdc_override"}],"isEnabled":true,"name":"Z-Wave","id":"studiocomproot-Z-Wave","label":"Z-Wave","type":"category"},{"children":[{"children":[{"keyWords":"zigbee_standalone_bootloader_common","componentId":"zigbee_standalone_bootloader_common","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/standalone-bootloader-common","description":"Code common to both the client and server of the Silicon Labs standalone bootload protocol.","instantiable":false,"label":"Standalone Bootloader Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Bootloader|studiocomproot-Zigbee-Bootloader-zigbee_standalone_bootloader_common","isEditable":false,"isEnabled":true,"name":"zigbee_standalone_bootloader_common","isSelected":false,"id":"studiocomproot-Zigbee-Bootloader-zigbee_standalone_bootloader_common"},{"keyWords":"zigbee_standalone_bootloader_server","componentId":"zigbee_standalone_bootloader_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/standalone-bootloader-server","description":"This component implements the legacy Ember over-the-air, 1-hop, bootload protocol. This can bootload a target node that has a standalone bootloader client running on it. It first scans for neighboring devices supporting the protocol. Once a client target has been identified, it sends the request to bootload, answers the challenge using the configured encryption key, and then transfers a new EBL file via Xmodem using 802.15.4 MAC data frames. It utilizes the OTA Storage code to retrieve the EBL file for sending to the target node. This is not a Zigbee-certifiable protocol.","instantiable":false,"label":"Standalone Bootloader Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Bootloader|studiocomproot-Zigbee-Bootloader-zigbee_standalone_bootloader_server","isEditable":false,"isEnabled":true,"name":"zigbee_standalone_bootloader_server","isSelected":false,"id":"studiocomproot-Zigbee-Bootloader-zigbee_standalone_bootloader_server"},{"keyWords":"zigbee_application_bootloader","componentId":"zigbee_application_bootloader","isConfigurable":false,"documentation":"","description":"This component should be added in order to use the Gecko Bootloader for Zigbee applications. Refer to the \"Bootloader Application Interface\" for more details.\n","instantiable":false,"label":"Zigbee Application Bootloader","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Bootloader|studiocomproot-Zigbee-Bootloader-zigbee_application_bootloader","isEditable":false,"isEnabled":true,"name":"zigbee_application_bootloader","isSelected":false,"id":"studiocomproot-Zigbee-Bootloader-zigbee_application_bootloader"}],"isEnabled":true,"name":"Bootloader","id":"studiocomproot-Zigbee-Bootloader","label":"Bootloader","type":"category"},{"children":[{"children":[{"keyWords":"zigbee_basic","componentId":"zigbee_basic","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/basic","description":"Silicon Labs implementation of the Basic server cluster.  This component implements the optional ResetToFactoryDefaults command, which allows any remote device in the network to reset the local device.  When the application receives this command, the component resets attributes managed by the framework to their default values and then calls a callback so that the application can perform any other necessary reset-related operations. The command is disruptive and not required, so Silicon Labs recommends disabling this component for most production applications.","instantiable":false,"label":"Basic Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Common|studiocomproot-Zigbee-Cluster_Library-Common-zigbee_basic","isEditable":false,"isEnabled":true,"name":"zigbee_basic","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Common-zigbee_basic"},{"keyWords":"zigbee_groups_client","componentId":"zigbee_groups_client","isConfigurable":false,"documentation":"","description":"Silicon Labs implementation of Groups client cluster.  The component is only intended to assist with debugging, as the implemented callbacks simply parse responses from the Group server and print the results. Before production, this component should be replaced with code that acts on the responses in an appropriate way.","instantiable":false,"label":"Groups Client Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Common|studiocomproot-Zigbee-Cluster_Library-Common-zigbee_groups_client","isEditable":false,"isEnabled":true,"name":"zigbee_groups_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Common-zigbee_groups_client"},{"keyWords":"zigbee_groups_server","componentId":"zigbee_groups_server","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/groups-server","description":"Silicon Labs implementation of Groups server cluster. This component supports receiving commands to add, retrieve, or modify the APS multicast group membership. Each group requires a binding table entry, so the binding table should be large enough to accommodate groups as well as any other bindings created during normal operation.","instantiable":false,"label":"Groups Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Common|studiocomproot-Zigbee-Cluster_Library-Common-zigbee_groups_server","isEditable":false,"isEnabled":true,"name":"zigbee_groups_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Common-zigbee_groups_server"},{"keyWords":"zigbee_identify","componentId":"zigbee_identify","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/identify","description":"Silicon Labs implementation of Identify cluster.  It requires extending in order to integrate the code with the hardware, for example to make a light blink during identify.","instantiable":false,"label":"Identify Cluster","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Common|studiocomproot-Zigbee-Cluster_Library-Common-zigbee_identify","isEditable":false,"isEnabled":true,"name":"zigbee_identify","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Common-zigbee_identify"},{"keyWords":"zigbee_identify_feedback","componentId":"zigbee_identify_feedback","isConfigurable":true,"documentation":"","description":"Silicon Labs implementation of the feedback component of the Identify cluster. During identification, the host prints an identification message for the identifying endpoint. If the requisite options are enabled, a device may also use either its LEDs, its buzzer, or both for feedback mechanisms. This component is only useful for dev boards.","instantiable":false,"label":"Identify Feedback","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Common|studiocomproot-Zigbee-Cluster_Library-Common-zigbee_identify_feedback","isEditable":false,"isEnabled":true,"name":"zigbee_identify_feedback","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Common-zigbee_identify_feedback"},{"keyWords":"zigbee_level_control","componentId":"zigbee_level_control","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/level-control","description":"Silicon Labs implementation of the Level Control server cluster.  If the ZLL Level Control server cluster component is also enabled, this component uses it to handle ZLL enhancements. Otherwise, all ZLL extensions are disabled. It is not intended for production but provides sample code to show how the cluster could be implemented.","instantiable":false,"label":"Level Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Common|studiocomproot-Zigbee-Cluster_Library-Common-zigbee_level_control","isEditable":false,"isEnabled":true,"name":"zigbee_level_control","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Common-zigbee_level_control"},{"keyWords":"zigbee_reporting","componentId":"zigbee_reporting","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/reporting","description":"Silicon Labs implementation of reporting. Reports are asynchronous messages sent out when a ZCL attribute has changed. This component supports both requesting reports from another device and sending out attribute reports when the device has been configured to do so. If the application will receive reports from multiple sources, Silicon Labs recommends configuring it as a concentrator. Note: This component only supports the binding-based interpretation of reporting in which reports are sent to corresponding entries in the binding table. Either the node sending the reports, the node receiving the reports, or another third-party configuration device may create the binding table entry(s) on the reporting node. For more details,  refer to the Application Framework Developers Guide for the current SDK version.\n","instantiable":false,"label":"Reporting","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Common|studiocomproot-Zigbee-Cluster_Library-Common-zigbee_reporting","isEditable":false,"isEnabled":true,"name":"zigbee_reporting","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Common-zigbee_reporting"},{"keyWords":"zigbee_scenes_client","componentId":"zigbee_scenes_client","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/scenes-client","description":"Silicon Labs implementation of the Scenes client cluster.  The component is only intended to assist with debugging, as the implemented callbacks simply parse responses from the Scenes server and print the results. Before production, this component should be replaced with code that acts on the responses in an appropriate way.","instantiable":false,"label":"Scenes Client Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Common|studiocomproot-Zigbee-Cluster_Library-Common-zigbee_scenes_client","isEditable":false,"isEnabled":true,"name":"zigbee_scenes_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Common-zigbee_scenes_client"},{"keyWords":"zigbee_scenes","componentId":"zigbee_scenes","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/scenes-server","description":"Silicon Labs implementation of the Scenes server cluster.  This component supports commands for setting up and recalling scenes.  Scenes are stored in a table and each scene consists of a set of values for attributes in other clusters. Clusters that extend the scene table do so through extension field sets. This component supports extensions for the On/Off, Level Control, Thermostat, Color Control, Door Lock, and Window Covering clusters. If the application includes any of these clusters, the component automatically includes and manages the attributes in those clusters. For example, if the application includes the On/Off server cluster, the component saves and recalls the On/Off attribute as part of saving or recalling scenes. Some ZLL extensions are implemented in this component and will be included automatically for ZLL applications. If the ZLL Scenes server cluster component is also enabled, this component uses it for handling some additional ZLL enhancements. Otherwise, these ZLL extensions are disabled.  This component requires extending in order to interact with the actual hardware.","instantiable":false,"label":"Scenes Server Cluster","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Common|studiocomproot-Zigbee-Cluster_Library-Common-zigbee_scenes","isEditable":false,"isEnabled":true,"name":"zigbee_scenes","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Common-zigbee_scenes"},{"keyWords":"zigbee_time_server","componentId":"zigbee_time_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/time-server","description":"Silicon Labs implementation of Time server cluster. This component is not recommended for production because it uses a software system to keep track of time. Instead the user should hook the cluster callbacks into a set of hardware routines to maintain the device's system clock. This software implementation is inappropriate for sleepy devices since it prevents them from sleeping for longer than one second. During initialization, the Time Server component writes the TimeStatus attribute based on the component options, overriding any attribute default that may have been configured.","instantiable":false,"label":"Time Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Common|studiocomproot-Zigbee-Cluster_Library-Common-zigbee_time_server","isEditable":false,"isEnabled":true,"name":"zigbee_time_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Common-zigbee_time_server"}],"isEnabled":true,"name":"Common","id":"studiocomproot-Zigbee-Cluster_Library-Common","label":"Common","type":"category"},{"children":[{"keyWords":"zigbee_hc_11073_tunnel","componentId":"zigbee_hc_11073_tunnel","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/hc-11073-tunnel","description":"Silicon Labs implementation of the Health Care 11073 protocol tunnel. This component handles the life cycle of the 11073 tunnel, which is used by health care devices to transmit 11073 data over the Zigbee protocol.","instantiable":false,"label":"Health Care 11073 Protocol Tunnel","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Health_Care|studiocomproot-Zigbee-Cluster_Library-Health_Care-zigbee_hc_11073_tunnel","isEditable":false,"isEnabled":true,"name":"zigbee_hc_11073_tunnel","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Health_Care-zigbee_hc_11073_tunnel"}],"isEnabled":true,"name":"Health Care","id":"studiocomproot-Zigbee-Cluster_Library-Health_Care","label":"Health Care","type":"category"},{"children":[{"keyWords":"zigbee_barrier_control_server","componentId":"zigbee_barrier_control_server","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/barrier-control-server","description":"Silicon Labs implementation of the Barrier Control server cluster.","instantiable":false,"label":"Barrier Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_barrier_control_server","isEditable":false,"isEnabled":true,"name":"zigbee_barrier_control_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_barrier_control_server"},{"keyWords":"zigbee_color_control","componentId":"zigbee_color_control","isConfigurable":false,"documentation":"","description":"Legacy Ember implementation of color control cluster.  This only implements manipulation of HUE and saturation, and does not implement the CIE 1931 color standard.","instantiable":false,"label":"Color Control Cluster (deprecated)","type":"component","quality":"DEPRECATED","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_color_control","isEditable":false,"isEnabled":true,"name":"zigbee_color_control","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_color_control"},{"keyWords":"zigbee_color_control_server","componentId":"zigbee_color_control_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/color-control-server","description":"This component is an implementation of the color server.  It supports color temperature, CIE 1931, and hue/saturation.  It also supports smooth transitions within a particular color mode.","instantiable":false,"label":"Color Control Cluster Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_color_control_server","isEditable":false,"isEnabled":true,"name":"zigbee_color_control_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_color_control_server"},{"keyWords":"zigbee_diagnostic_server","componentId":"zigbee_diagnostic_server","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/diagnostic-server","description":"This component handles the retrieval of diagnostic information from the stack through the diagnostic cluster. Implement the component as follows. 1. Mark all diagnostic attributes you wish to track as external. 2. Add a call to sl_zigbee_af_read_diagnostic_attribute(attributeMetadata, buffer); from sl_zigbee_af_external_attribute_read_cb().","instantiable":false,"label":"Diagnostic Server","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_diagnostic_server","isEditable":false,"isEnabled":true,"name":"zigbee_diagnostic_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_diagnostic_server"},{"keyWords":"zigbee_door_lock_server","componentId":"zigbee_door_lock_server","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/door-lock-server","description":"Silicon Labs implementation of the Door Lock server cluster. This is an incomplete component implementation. It does all of the mandatory and optional behavior in the Door Lock cluster needed to pass the Door Lock cluster tests. It does NOT store user and schedule tables in persistent memory, check user pin activation against user status or user schedule, or offer callbacks and component options to the application for further customization of functionality.","instantiable":false,"label":"Door Lock Server Cluster","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_door_lock_server","isEditable":false,"isEnabled":true,"name":"zigbee_door_lock_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_door_lock_server"},{"keyWords":"zigbee_ezmode_commissioning","componentId":"zigbee_ezmode_commissioning","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ez-mode","description":"This comopnent provides a function set for implementing EZ-Mode commissioning.","instantiable":false,"label":"EZ-Mode Commissioning","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_ezmode_commissioning","isEditable":false,"isEnabled":true,"name":"zigbee_ezmode_commissioning","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_ezmode_commissioning"},{"keyWords":"zigbee_ias_zone_client","componentId":"zigbee_ias_zone_client","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ias-zone-client","description":"An implementation of a client for IAS Zone that configures and keeps track of IAS Zone Servers.  This requires extending to handle server notifications that might actually trigger some behavior on the client (e.g., alarm).","instantiable":false,"label":"IAS Zone Client","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_ias_zone_client","isEditable":false,"isEnabled":true,"name":"zigbee_ias_zone_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_ias_zone_client"},{"keyWords":"zigbee_ias_zone_server","componentId":"zigbee_ias_zone_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ias-zone-server","description":"An IAS Server implementation that reports notifications to the client that has configured it.  This requires extending to trigger alarms. The component must store the client IEEE address attribute to flash. This means, for the IAS CIE address attribute (0x0010) of the IAS Zone cluster (0x500), the user must select the checkbox that stores that attribute to flash.","instantiable":false,"label":"IAS Zone Server","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_ias_zone_server","isEditable":false,"isEnabled":true,"name":"zigbee_ias_zone_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_ias_zone_server"},{"keyWords":"zigbee_on_off","componentId":"zigbee_on_off","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/on-off","description":"Silicon Labs implementation of the On/Off server cluster. If the ZLL On/Off server cluster component is also enabled, this component uses it for handling ZLL enhancements. Otherwise, all ZLL extensions are disabled. This component requires extending to integrate the software into the hardware that the on/off signals will control.","instantiable":false,"label":"On/Off Server Cluster","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_on_off","isEditable":false,"isEnabled":true,"name":"zigbee_on_off","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_on_off"},{"keyWords":"zigbee_poll_control_client","componentId":"zigbee_poll_control_client","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/poll-control-client","description":"Silicon Labs implementation of Poll Control client cluster.  The component responds in kind to check-in commands from the paired Poll Control server.","instantiable":false,"label":"Poll Control Client Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_poll_control_client","isEditable":false,"isEnabled":true,"name":"zigbee_poll_control_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_poll_control_client"},{"keyWords":"zigbee_poll_control_server","componentId":"zigbee_poll_control_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/poll-control-server","description":"Silicon Labs implementation of Poll Control server cluster.  The component periodically checks in with Poll Control clients to see if any client wants to manage the poll period of the server. Any device listed in the binding table for the Poll Control cluster is assumed to be a client. At startup, this component sets the long and short poll intervals of the device to the values of the long and short poll interval attributes.","instantiable":false,"label":"Poll Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_poll_control_server","isEditable":false,"isEnabled":true,"name":"zigbee_poll_control_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_poll_control_server"},{"keyWords":"zigbee_power_consumption_model","componentId":"zigbee_power_consumption_model","isConfigurable":true,"documentation":"","description":"This component implements the lightbulb electrical measurement server cluster.","instantiable":false,"label":"Power Consumption Model","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Home_Automation|studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_power_consumption_model","isEditable":false,"isEnabled":true,"name":"zigbee_power_consumption_model","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation-zigbee_power_consumption_model"}],"isEnabled":true,"name":"Home Automation","id":"studiocomproot-Zigbee-Cluster_Library-Home_Automation","label":"Home Automation","type":"category"},{"children":[{"keyWords":"zigbee_calendar_client","componentId":"zigbee_calendar_client","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/calendar-client","description":"Silicon Labs implementation of the Calendar client cluster.  This component is capable of receiving calendars published by a server, but does not make requests on its own.","instantiable":false,"label":"Calendar Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_calendar_client","isEditable":false,"isEnabled":true,"name":"zigbee_calendar_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_calendar_client"},{"keyWords":"zigbee_calendar_common","componentId":"zigbee_calendar_common","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/calendar-common","description":"This component provides common utility functions that are used by the client and server of the Calendar Cluster.","instantiable":false,"label":"Calendar Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_calendar_common","isEditable":false,"isEnabled":true,"name":"zigbee_calendar_common","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_calendar_common"},{"keyWords":"zigbee_calendar_server","componentId":"zigbee_calendar_server","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/calendar-server","description":"This component is an implementation of the calendar server cluster.  It responds to requests for the calendar data using data from the Calendar Common component.","instantiable":false,"label":"Calendar Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_calendar_server","isEditable":false,"isEnabled":true,"name":"zigbee_calendar_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_calendar_server"},{"keyWords":"zigbee_drlc","componentId":"zigbee_drlc","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/drlc-client","description":"Silicon Labs implementation of the demand response load control cluster including the load control event table for scheduling and triggering load control events. This component contains the client side of the DRLC cluster only.  It requires extending to integrate the software and hardware pieces that will reduce load.","instantiable":false,"label":"Demand Response Load Control Cluster Client","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_drlc","isEditable":false,"isEnabled":true,"name":"zigbee_drlc","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_drlc"},{"keyWords":"zigbee_drlc_server","componentId":"zigbee_drlc_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/drlc-server","description":"Silicon Labs implementation of the Demand Response Load Control (DRLC) cluster server. For more information about the component code, see the comments in app/framework/plugin/drlc-server/drlc-server.h.  This component requires extending in order to manage the event table (adding/removing events).  It simply serves up the events that are entered into the table.","instantiable":false,"label":"Demand Response Load Control Cluster Server","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_drlc_server","isEditable":false,"isEnabled":true,"name":"zigbee_drlc_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_drlc_server"},{"keyWords":"zigbee_device_management_client","componentId":"zigbee_device_management_client","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/device-management-client","description":"This component implements the client-side functionality of the Smart Energy 1.2 Device Management cluster.","instantiable":false,"label":"Device Management Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_device_management_client","isEditable":false,"isEnabled":true,"name":"zigbee_device_management_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_device_management_client"},{"keyWords":"zigbee_device_management_server","componentId":"zigbee_device_management_server","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/device-management-server","description":"This component implements the server-side functionality of the Smart Energy 1.2 Device Management cluster.","instantiable":false,"label":"Device Management Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_device_management_server","isEditable":false,"isEnabled":true,"name":"zigbee_device_management_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_device_management_server"},{"keyWords":"zigbee_esi_management","componentId":"zigbee_esi_management","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/esi-management","description":"This component maintains a table of ESIs that can be queried by other components.  This is used by all Smart Energy client devices.","instantiable":false,"label":"ESI Management","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_esi_management","isEditable":false,"isEnabled":true,"name":"zigbee_esi_management","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_esi_management"},{"keyWords":"zigbee_events_client","componentId":"zigbee_events_client","isConfigurable":false,"documentation":"","description":"A component implementing the client-side functionality of the Smart Energy 1.2 Events cluster. The component is only intended to assist with debugging as the implemented callbacks simply parse responses from the Events server and print the results.  Before production, this component should be replaced with code that acts on the responses in an appropriate way.","instantiable":false,"label":"Events Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_events_client","isEditable":false,"isEnabled":true,"name":"zigbee_events_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_events_client"},{"keyWords":"zigbee_events_server","componentId":"zigbee_events_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/events-server","description":"A component implementing the server-side functionality of the Smart Energy 1.2 Events cluster. Once the event log is full, new events will start overwriting old events at the beginning of the table.","instantiable":false,"label":"Events Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_events_server","isEditable":false,"isEnabled":true,"name":"zigbee_events_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_events_server"},{"keyWords":"zigbee_key_establishment","componentId":"zigbee_key_establishment","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/key-establishment","description":"Silicon Labs implementation of the Smart Energy Key Establishment cluster. The key establishment cluster is used by the Smart Energy profile to perform certificate- based key establishment (CBKE), which performs mutual authentication and establishes a symmetric APS link key. Direct CBKE between any two non-Trust Center devices is supported once the two devices have completed partner link key exchange via Trust Center. This component defaults to using CBKE functions with the 163k ECC curve support, but users can also choose the 283k1 ECC curve by selecting 'CBKE 283k1' component.","instantiable":false,"label":"Key Establishment","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_key_establishment","isEditable":false,"isEnabled":true,"name":"zigbee_key_establishment","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_key_establishment"},{"keyWords":"zigbee_messaging_client","componentId":"zigbee_messaging_client","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/messaging-client","description":"Silicon Labs implementation of the Messaging client cluster. This component requires extending to display the message on the hardware display.","instantiable":false,"label":"Messaging Client Cluster","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_messaging_client","isEditable":false,"isEnabled":true,"name":"zigbee_messaging_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_messaging_client"},{"keyWords":"zigbee_messaging_server","componentId":"zigbee_messaging_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/messaging-server","description":"Silicon Labs implementation of the Messaging server cluster.  This component serves up messages in its table to clients that request them. This component requires extending to populate the message table with messages.","instantiable":false,"label":"Messaging Server Cluster","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_messaging_server","isEditable":false,"isEnabled":true,"name":"zigbee_messaging_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_messaging_server"},{"keyWords":"zigbee_meter_mirror","componentId":"zigbee_meter_mirror","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/meter-mirror","description":"A component for mirroring attributes of a sleepy meter in a Smart Energy network.  The device is expected to be a configured as mirror server on as many endpoints as are allocated as meters.  Those endpoints must be contiguous.","instantiable":false,"label":"Meter Mirror","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_meter_mirror","isEditable":false,"isEnabled":true,"name":"zigbee_meter_mirror","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_meter_mirror"},{"keyWords":"zigbee_meter_snapshot_client","componentId":"zigbee_meter_snapshot_client","isConfigurable":false,"documentation":"","description":"A component for processing snapshots of the meter state in a Smart Energy network. The component is only intended to assist with debugging, as the implemented callbacks simply parse responses and print the results.","instantiable":false,"label":"Meter Snapshot Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_meter_snapshot_client","isEditable":false,"isEnabled":true,"name":"zigbee_meter_snapshot_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_meter_snapshot_client"},{"keyWords":"zigbee_meter_snapshot_server","componentId":"zigbee_meter_snapshot_server","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/meter-snapshot-server","description":"A component for handling snapshots of the meter state in a Smart Energy network.","instantiable":false,"label":"Meter Snapshot Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_meter_snapshot_server","isEditable":false,"isEnabled":true,"name":"zigbee_meter_snapshot_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_meter_snapshot_server"},{"keyWords":"zigbee_meter_snapshot_storage","componentId":"zigbee_meter_snapshot_storage","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/meter-snapshot-storage","description":"A component to demonstrate handling scheduling, storage, and publishing snapshots of the meter state in a Smart Energy network. The memory requirements for this component can be very large, and it is therefore recommended only for use in host applications or with few summation and block tiers supported.","instantiable":false,"label":"Meter Snapshot Storage","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_meter_snapshot_storage","isEditable":false,"isEnabled":true,"name":"zigbee_meter_snapshot_storage","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_meter_snapshot_storage"},{"keyWords":"zigbee_mn_price_passthrough","componentId":"zigbee_mn_price_passthrough","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/mn-price-passthrough","description":"This component demonstrates the capabilities of multi-network support.  The component acts as a Price cluster client on one network and a Price cluster server on another network.  As a client, it periodically polls a remote server for pricing information and then stores the data locally.  As a server, it makes that pricing information available to clients, thereby proxying the data between networks.","instantiable":false,"label":"Multi-Network Price Passthrough","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_mn_price_passthrough","isEditable":false,"isEnabled":true,"name":"zigbee_mn_price_passthrough","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_mn_price_passthrough"},{"keyWords":"zigbee_partner_link_key_exchange","componentId":"zigbee_partner_link_key_exchange","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/partner-link-key-exchange","description":"Silicon Labs implementation of Partner Link Key Exchange. Partner Link Key Exchange is a feature in Smart Energy where a device may obtain an APS link key with another, non-trust center device. This code handles the necessary process to request a link key with a partner device, then contact the trust center and ask it to generate a new link key and send it securely to both devices.","instantiable":false,"label":"Partner Link Key Exchange","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_partner_link_key_exchange","isEditable":false,"isEnabled":true,"name":"zigbee_partner_link_key_exchange","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_partner_link_key_exchange"},{"keyWords":"zigbee_prepayment_client","componentId":"zigbee_prepayment_client","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/prepayment-client","description":"This component implements the client-side functionality of the Smart Energy 1.2 Prepayment cluster.","instantiable":false,"label":"Prepayment Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_prepayment_client","isEditable":false,"isEnabled":true,"name":"zigbee_prepayment_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_prepayment_client"},{"keyWords":"zigbee_prepayment_server","componentId":"zigbee_prepayment_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/prepayment-server","description":"This component implements the server-side functionality of the Smart Energy 1.2 Prepayment cluster.","instantiable":false,"label":"Prepayment Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_prepayment_server","isEditable":false,"isEnabled":true,"name":"zigbee_prepayment_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_prepayment_server"},{"keyWords":"zigbee_prepayment_snapshot_storage","componentId":"zigbee_prepayment_snapshot_storage","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/prepayment-snapshot-storage","description":"This component implements storage for the prepayment snapshots.","instantiable":false,"label":"Prepayment Snapshot Storage","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_prepayment_snapshot_storage","isEditable":false,"isEnabled":true,"name":"zigbee_prepayment_snapshot_storage","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_prepayment_snapshot_storage"},{"keyWords":"zigbee_price_client","componentId":"zigbee_price_client","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/price-client","description":"This component provides an implementation of a Price client. It simply stores the prices received over-the-air. This component requires extending to act on the price changes.","instantiable":false,"label":"Price Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_price_client","isEditable":false,"isEnabled":true,"name":"zigbee_price_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_price_client"},{"keyWords":"zigbee_price_common","componentId":"zigbee_price_common","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/price-common","description":"This component provides common utility functions used by both the Price Server and Price Client components.","instantiable":false,"label":"Price Common","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_price_common","isEditable":false,"isEnabled":true,"name":"zigbee_price_common","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_price_common"},{"keyWords":"zigbee_price_server","componentId":"zigbee_price_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/price-server","description":"This component provides an implementation of a Smart Energy price server.  The price server holds a table of prices locally and answers requests to retrieve the list of commodity prices.  It requires extension to add / remove prices from the table and to send out new prices to those devices that have subscribed to the ESI for price updates.","instantiable":false,"label":"Price Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_price_server","isEditable":false,"isEnabled":true,"name":"zigbee_price_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_price_server"},{"keyWords":"zigbee_price_server_tariff_matrix","componentId":"zigbee_price_server_tariff_matrix","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/price-server","description":"This component provides an implementation of a Smart Energy price server tariff matrix.","instantiable":false,"label":"Price Server Tariff Matrix","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_price_server_tariff_matrix","isEditable":false,"isEnabled":true,"name":"zigbee_price_server_tariff_matrix","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_price_server_tariff_matrix"},{"keyWords":"zigbee_simple_metering_client","componentId":"zigbee_simple_metering_client","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/simple-metering-client","description":"Silicon Labs implementation of the Simple Metering client cluster.  This component is a sample that implements the simple metering client callbacks and prints the results.","instantiable":false,"label":"Simple Metering Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_simple_metering_client","isEditable":false,"isEnabled":true,"name":"zigbee_simple_metering_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_simple_metering_client"},{"keyWords":"zigbee_simple_metering_server","componentId":"zigbee_simple_metering_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/simple-metering-server","description":"This is a test implementation of the simple metering server. This component should only be used for testing but is helpful to test devices that require inter-operation with a working meter. It supports the required current summation delivered attribute (0x0000), but optionally the following attributes as well, if they are selected in the project - current tier 1 summation delivered (0x0100), battery life remaining (0x0201), hours in operation (0x0202), and instantaneous demand (0x0400).","instantiable":false,"label":"Simple Metering Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_simple_metering_server","isEditable":false,"isEnabled":true,"name":"zigbee_simple_metering_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_simple_metering_server"},{"keyWords":"zigbee_simple_metering_server_test_meter","componentId":"zigbee_simple_metering_server_test_meter","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/simple-metering-server","description":"This component provides the test code for the simple metering server. It enables the code that pretends it is a meter and also supports meter error along with CLI implementation. It should be only used for testing purposes.","instantiable":false,"label":"Simple Metering Server Test Meter","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_simple_metering_server_test_meter","isEditable":false,"isEnabled":true,"name":"zigbee_simple_metering_server_test_meter","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_simple_metering_server_test_meter"},{"keyWords":"zigbee_smart_energy_registration","componentId":"zigbee_smart_energy_registration","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/smart-energy-registration","description":"Silicon Labs implementation of Smart Energy Registration. The component performs key establishment with the trust center when the node joins a network. If the application implements Messaging, Price, or DRLC client clusters, the component also discovers ESIs on the network and performs partner link key exchange and binding with each ESI it discovers. ESI discovery requires the ESI Management component, in which the number of supported ESIs can be configured. The frequency with which ESIs are rediscovered is configurable. These options are ignored if the application does not implement Messaging, Price, or DRLC client clusters. Registration is not required for trust centers, so this component should be disabled if the device is acting as the trust center.","instantiable":false,"label":"Smart Energy Registration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_smart_energy_registration","isEditable":false,"isEnabled":true,"name":"zigbee_smart_energy_registration","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_smart_energy_registration"},{"keyWords":"zigbee_sub_ghz_client","componentId":"zigbee_sub_ghz_client","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/sub-ghz-client","description":"The Smart Energy Sub-GHz client suspends the transmission of any ZCL messages for a given period when instructed so by the Sub-GHz server.","instantiable":false,"label":"Sub-GHz Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_sub_ghz_client","isEditable":false,"isEnabled":true,"name":"zigbee_sub_ghz_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_sub_ghz_client"},{"keyWords":"zigbee_sub_ghz_server","componentId":"zigbee_sub_ghz_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/sub-ghz-server","description":"The Smart Energy Sub-GHz server monitors clients' and its own duty cycles. Once a Limited threshold is reached, the Sub-GHz server instructs the offending client to suspend sending any more ZCL messages for a certain period. On reaching the Critical threshold, the suspend ZCL messages command is broadcast to all clients.","instantiable":false,"label":"Sub-GHz Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_sub_ghz_server","isEditable":false,"isEnabled":true,"name":"zigbee_sub_ghz_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_sub_ghz_server"},{"keyWords":"zigbee_tunneling_client","componentId":"zigbee_tunneling_client","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/tunneling-client","description":"Silicon Labs implementation of Tunneling client cluster.  This component requires extending to integrate the software that processes the tunneled data.  Note if the maximum transfer size requires fragmentation, manually include the Fragmentation component and configure it to support the tunnel data size.  Additionally, the component uses the address table to communicate with the server, so you must manually configure the address table size so that it accommodates active tunnels managed by this component as well as any other entries created during normal operation.","instantiable":false,"label":"Tunneling Client Cluster","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_tunneling_client","isEditable":false,"isEnabled":true,"name":"zigbee_tunneling_client","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_tunneling_client"},{"keyWords":"zigbee_tunneling_server","componentId":"zigbee_tunneling_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/tunneling-server","description":"Silicon Labs implementation of Tunneling server cluster.  This component requires extending to integrate the software that processes the tunneled data.  Note if the maximum transfer size requires fragmentation, manually include the Fragmentation component and configure it to support the tunnel data size.  Additionally, the component uses the address table to communicate with clients, so you must manually configure the address table size so that it accommodates active tunnels managed by this component as well as any other entries created during normal operation. The Tunneling cluster test specification suggests that implementations support the test protocol (protocol id 199, manufacturer code 0xFFFF). If you do not support it, you need some other means of proving two-way communications works and is verifiable. If test protocol support is enabled, the component automatically handles requests for the test protocol and these messages will not fall through to the application.","instantiable":false,"label":"Tunneling Server Cluster","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-Smart_Energy|studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_tunneling_server","isEditable":false,"isEnabled":true,"name":"zigbee_tunneling_server","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy-zigbee_tunneling_server"}],"isEnabled":true,"name":"Smart Energy","id":"studiocomproot-Zigbee-Cluster_Library-Smart_Energy","label":"Smart Energy","type":"category"},{"keyWords":"zigbee_zcl_framework_core","componentId":"zigbee_zcl_framework_core","isConfigurable":true,"documentation":"","description":"This component contains all the core functionality to build ZCL applications.","instantiable":false,"label":"ZCL Framework Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Cluster_Library|studiocomproot-Zigbee-Cluster_Library-zigbee_zcl_framework_core","isEditable":false,"isEnabled":true,"name":"zigbee_zcl_framework_core","isSelected":false,"id":"studiocomproot-Zigbee-Cluster_Library-zigbee_zcl_framework_core"}],"isEnabled":true,"name":"Cluster Library","id":"studiocomproot-Zigbee-Cluster_Library","label":"Cluster Library","type":"category"},{"children":[{"keyWords":"zigbee_comms_hub_function","componentId":"zigbee_comms_hub_function","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/comms-hub-function","description":"Silicon Labs implementation of the Comms Hub Function (CHF).","instantiable":false,"label":"Comms Hub Function (CHF)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Great_Britain_Companion_Specification|studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_comms_hub_function","isEditable":false,"isEnabled":true,"name":"zigbee_comms_hub_function","isSelected":false,"id":"studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_comms_hub_function"},{"keyWords":"zigbee_gbcs_compatibility","componentId":"zigbee_gbcs_compatibility","isConfigurable":false,"documentation":"","description":"This is a dummy component that is a precondition to building a GBCS-compatible application. It does not provide any code of its own. Instead, it a) allows other components to add conditional code base on the presence of this component, in cases where GBCS contradicts the Smart Energy specification, and b) enables the inclusion of other GBCS-related components.","instantiable":false,"label":"GBCS Compatibility","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Great_Britain_Companion_Specification|studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_gbcs_compatibility","isEditable":false,"isEnabled":true,"name":"zigbee_gbcs_compatibility","isSelected":false,"id":"studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_gbcs_compatibility"},{"keyWords":"zigbee_gbcs_device_log","componentId":"zigbee_gbcs_device_log","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/gbcs-device-log","description":"Silicon Labs implementation of the GBCS Device Log. Note that, although this supports populating the device log with a set of devices, this is only intended for testing purposes and should not be thought of as a complete provisioning solution. The real provisioning solution should use the API provided by this component to add and remove items from the device log.","instantiable":false,"label":"GBCS Device Log","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Great_Britain_Companion_Specification|studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_gbcs_device_log","isEditable":false,"isEnabled":true,"name":"zigbee_gbcs_device_log","isSelected":false,"id":"studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_gbcs_device_log"},{"keyWords":"zigbee_gbcs_gas_meter","componentId":"zigbee_gbcs_gas_meter","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/gbcs-gas-meter","description":"Silicon Labs implementation of Gas Smart Metering Equipment (GSME).","instantiable":false,"label":"GBCS Gas Smart Metering Equipment (GSME)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Great_Britain_Companion_Specification|studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_gbcs_gas_meter","isEditable":false,"isEnabled":true,"name":"zigbee_gbcs_gas_meter","isSelected":false,"id":"studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_gbcs_gas_meter"},{"keyWords":"zigbee_gbz_message_controller","componentId":"zigbee_gbz_message_controller","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/gbz-message-controller","description":"Silicon Labs implementation of a GBZ message controller. This component extracts ZCL commands by parsing the elemental GBZ components of the GBZ message. Processing of encrypted GBZ message is not supported.","instantiable":false,"label":"GBZ Message Controller","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Great_Britain_Companion_Specification|studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_gbz_message_controller","isEditable":false,"isEnabled":true,"name":"zigbee_gbz_message_controller","isSelected":false,"id":"studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_gbz_message_controller"},{"keyWords":"zigbee_gas_proxy_function","componentId":"zigbee_gas_proxy_function","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/gas-proxy-function","description":"Silicon Labs implementation of the Gas Proxy Function (GPF). This component receives and processes GBZ Top Off Messages. NOTE This component uses malloc and should only be used in a non-SoC setup.","instantiable":false,"label":"Gas Proxy Function (GPF)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Great_Britain_Companion_Specification|studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_gas_proxy_function","isEditable":false,"isEnabled":true,"name":"zigbee_gas_proxy_function","isSelected":false,"id":"studiocomproot-Zigbee-Great_Britain_Companion_Specification-zigbee_gas_proxy_function"}],"isEnabled":true,"name":"Great Britain Companion Specification","id":"studiocomproot-Zigbee-Great_Britain_Companion_Specification","label":"Great Britain Companion Specification","type":"category"},{"children":[{"keyWords":"zigbee_af_support","componentId":"zigbee_af_support","isConfigurable":true,"documentation":"","description":"This component provides AF implementation which can be used on NCP applications","instantiable":false,"label":"Application Framework Support Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_af_support","isEditable":false,"isEnabled":true,"name":"zigbee_af_support","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_af_support"},{"keyWords":"zigbee_green_power_adapter","componentId":"zigbee_green_power_adapter","isConfigurable":true,"documentation":"","description":"This component provides the green power cluster user with all the in/out function interfaces. The customer should be able to use their framework.","instantiable":false,"label":"Green Power Adapter","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_green_power_adapter","isEditable":false,"isEnabled":true,"name":"zigbee_green_power_adapter","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_green_power_adapter"},{"keyWords":"zigbee_green_power_client","componentId":"zigbee_green_power_client","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/green-power-client","description":"A component implementing the client-side functionality of the Green Power cluster.","instantiable":false,"label":"Green Power Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_green_power_client","isEditable":false,"isEnabled":true,"name":"zigbee_green_power_client","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_green_power_client"},{"keyWords":"zigbee_green_power_client_cli","componentId":"zigbee_green_power_client_cli","isConfigurable":false,"documentation":"","description":"A component implementing the client-side CLI functionality of the Green Power cluster.","instantiable":false,"label":"Green Power Client CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_green_power_client_cli","isEditable":false,"isEnabled":true,"name":"zigbee_green_power_client_cli","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_green_power_client_cli"},{"keyWords":"zigbee_green_power_combo_zap_config","componentId":"zigbee_green_power_combo_zap_config","isConfigurable":true,"documentation":"","description":"This component provides Green Power Combo zap config file which can be used on NCP applications","instantiable":false,"label":"Green Power Combo Zap Config","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_green_power_combo_zap_config","isEditable":false,"isEnabled":true,"name":"zigbee_green_power_combo_zap_config","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_green_power_combo_zap_config"},{"keyWords":"zigbee_green_power_common","componentId":"zigbee_green_power_common","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/green-power-common","description":"A component that provides common functionalities between client and server sides of the Green Power components.","instantiable":false,"label":"Green Power Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_green_power_common","isEditable":false,"isEnabled":true,"name":"zigbee_green_power_common","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_green_power_common"},{"keyWords":"zigbee_gpd_af_cli","componentId":"zigbee_gpd_af_cli","isConfigurable":false,"documentation":"","description":"A component implementing a CLI for the Green Power device application framework.","instantiable":false,"label":"Green Power Device AF CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_gpd_af_cli","isEditable":false,"isEnabled":true,"name":"zigbee_gpd_af_cli","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_gpd_af_cli"},{"keyWords":"zigbee_gpd_application_support","componentId":"zigbee_gpd_application_support","isConfigurable":true,"documentation":"","description":"A component implementing the application support functionality of the Green Power device.","instantiable":false,"label":"Green Power Device Application Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_gpd_application_support","isEditable":false,"isEnabled":true,"name":"zigbee_gpd_application_support","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_gpd_application_support"},{"keyWords":"zigbee_gpd_network_support","componentId":"zigbee_gpd_network_support","isConfigurable":false,"documentation":"","description":"A component implementing the network support functionality of the Green Power device.","instantiable":false,"label":"Green Power Device Network Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_gpd_network_support","isEditable":false,"isEnabled":true,"name":"zigbee_gpd_network_support","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_gpd_network_support"},{"keyWords":"zigbee_green_power_proxy_zap_config","componentId":"zigbee_green_power_proxy_zap_config","isConfigurable":true,"documentation":"","description":"This component provides Green Power Proxy zap config file which can be used on NCP applications","instantiable":false,"label":"Green Power Proxy Zap Config","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_green_power_proxy_zap_config","isEditable":false,"isEnabled":true,"name":"zigbee_green_power_proxy_zap_config","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_green_power_proxy_zap_config"},{"keyWords":"zigbee_green_power_server","componentId":"zigbee_green_power_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/green-power-server","description":"A component implementing the server-side functionality of the Green Power cluster.","instantiable":false,"label":"Green Power Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_green_power_server","isEditable":false,"isEnabled":true,"name":"zigbee_green_power_server","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_green_power_server"},{"keyWords":"zigbee_green_power_server_cli","componentId":"zigbee_green_power_server_cli","isConfigurable":false,"documentation":"","description":"A component implementing the server-side CLI functionality of the Green Power cluster.","instantiable":false,"label":"Green Power Server CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_green_power_server_cli","isEditable":false,"isEnabled":true,"name":"zigbee_green_power_server_cli","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_green_power_server_cli"},{"keyWords":"zigbee_green_power_translation_table","componentId":"zigbee_green_power_translation_table","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/green-power-translation-table","description":"A component implementing the translation table functionality of the Green Power cluster.","instantiable":false,"label":"Green Power Translation Table","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_green_power_translation_table","isEditable":false,"isEnabled":true,"name":"zigbee_green_power_translation_table","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_green_power_translation_table"},{"keyWords":"zigbee_green_power_translation_table_cli","componentId":"zigbee_green_power_translation_table_cli","isConfigurable":false,"documentation":"","description":"A component implementing the translation table CLI functionality of the Green Power cluster.","instantiable":false,"label":"Green Power Translation Table CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Green_Power|studiocomproot-Zigbee-Green_Power-zigbee_green_power_translation_table_cli","isEditable":false,"isEnabled":true,"name":"zigbee_green_power_translation_table_cli","isSelected":false,"id":"studiocomproot-Zigbee-Green_Power-zigbee_green_power_translation_table_cli"}],"isEnabled":true,"name":"Green Power","id":"studiocomproot-Zigbee-Green_Power","label":"Green Power","type":"category"},{"children":[{"keyWords":"zigbee_ncp_cpc","componentId":"zigbee_ncp_cpc","isConfigurable":false,"documentation":"","description":"This component provides Co-Processor Communication (CPC) support for the Zigbee stack.","instantiable":false,"label":"NCP CPC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-NCP|studiocomproot-Zigbee-NCP-zigbee_ncp_cpc","isEditable":false,"isEnabled":true,"name":"zigbee_ncp_cpc","isSelected":false,"id":"studiocomproot-Zigbee-NCP-zigbee_ncp_cpc"},{"keyWords":"zigbee_ncp_spi","componentId":"zigbee_ncp_spi","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ncp-spi","description":"Provides the functionality for a network coprocessor (NCP) application to communicate with a host over SPI.","instantiable":false,"label":"NCP SPI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-NCP|studiocomproot-Zigbee-NCP-zigbee_ncp_spi","isEditable":false,"isEnabled":true,"name":"zigbee_ncp_spi","isSelected":false,"id":"studiocomproot-Zigbee-NCP-zigbee_ncp_spi"},{"keyWords":"zigbee_ncp_uart_hardware","componentId":"zigbee_ncp_uart_hardware","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ncp-uart-hardware","description":"Provides the functionality for an NCP application to communicate with a host over a UART using hardware flow control.","instantiable":false,"label":"NCP UART Hardware Flow Control","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-NCP|studiocomproot-Zigbee-NCP-zigbee_ncp_uart_hardware","isEditable":false,"isEnabled":true,"name":"zigbee_ncp_uart_hardware","isSelected":false,"id":"studiocomproot-Zigbee-NCP-zigbee_ncp_uart_hardware"},{"keyWords":"zigbee_xncp","componentId":"zigbee_xncp","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/xncp","description":"Provides the functionality for an NCP device to communicate custom EZSP frames with a host.","instantiable":false,"label":"XNCP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-NCP|studiocomproot-Zigbee-NCP-zigbee_xncp","isEditable":false,"isEnabled":true,"name":"zigbee_xncp","isSelected":false,"id":"studiocomproot-Zigbee-NCP-zigbee_xncp"},{"keyWords":"zigbee_xncp_test_harness","componentId":"zigbee_xncp_test_harness","isConfigurable":false,"documentation":"","description":"Allows a test harness running on a host to control non-standard behavior on the NCP.","instantiable":false,"label":"XNCP Test Harness","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-NCP|studiocomproot-Zigbee-NCP-zigbee_xncp_test_harness","isEditable":false,"isEnabled":true,"name":"zigbee_xncp_test_harness","isSelected":false,"id":"studiocomproot-Zigbee-NCP-zigbee_xncp_test_harness"}],"isEnabled":true,"name":"NCP","id":"studiocomproot-Zigbee-NCP","label":"NCP","type":"category"},{"children":[{"keyWords":"zigbee_form_and_join","componentId":"zigbee_form_and_join","isConfigurable":false,"documentation":"","description":"This is the original Form and Join library (given as source code) that provides a simple approach to form on an unused pan ID, or find any open network that can be joined to.  This functionality can be paired with the network-find plugin.  However both are superseded by the Network Steering component, which provides a more robust and complete solution.","instantiable":false,"label":"Form and Join Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Network_Form_and_Join|studiocomproot-Zigbee-Network_Form_and_Join-zigbee_form_and_join","isEditable":false,"isEnabled":true,"name":"zigbee_form_and_join","isSelected":false,"id":"studiocomproot-Zigbee-Network_Form_and_Join-zigbee_form_and_join"},{"keyWords":"zigbee_network_find","componentId":"zigbee_network_find","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/network-find","description":"NOTE This component is deprecated in Zigbee 3.0, but is still used for Zigbee Smart Energy requirements. See the Network Creator and Network Steering components instead for Zigbee 3.0-compliant implementations of this behavior. This component provides legacy Zigbee Home Automation (pre-3.0) implementation of routines for finding and joining any viable network via scanning, rather than joining a specific network. If the application will be deployed in an environment with potentially a lot of open networks, consider implementing a mechanism for network deny listing. Network deny listing may be accomplished by implementing the sl_zigbee_af_network_find_join_cb. To extend the functionality to sub-GHz channels, also enable the Network Find (Sub-GHz) component.","instantiable":false,"label":"Network Find","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Network_Form_and_Join|studiocomproot-Zigbee-Network_Form_and_Join-zigbee_network_find","isEditable":false,"isEnabled":true,"name":"zigbee_network_find","isSelected":false,"id":"studiocomproot-Zigbee-Network_Form_and_Join-zigbee_network_find"},{"keyWords":"zigbee_network_find_sub_ghz","componentId":"zigbee_network_find_sub_ghz","isConfigurable":true,"documentation":"","description":"This component extends the functionality of the Network Find component to sub-GHz. channels.","instantiable":false,"label":"Network Find (Sub-GHz)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Network_Form_and_Join|studiocomproot-Zigbee-Network_Form_and_Join-zigbee_network_find_sub_ghz","isEditable":false,"isEnabled":true,"name":"zigbee_network_find_sub_ghz","isSelected":false,"id":"studiocomproot-Zigbee-Network_Form_and_Join-zigbee_network_find_sub_ghz"},{"keyWords":"zigbee_scan_dispatch","componentId":"zigbee_scan_dispatch","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/scan-dispatch","description":"This component allows the existence of multiple consumers of the stack 802.15.4 scan results.","instantiable":false,"label":"Scan Dispatch","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Network_Form_and_Join|studiocomproot-Zigbee-Network_Form_and_Join-zigbee_scan_dispatch","isEditable":false,"isEnabled":true,"name":"zigbee_scan_dispatch","isSelected":false,"id":"studiocomproot-Zigbee-Network_Form_and_Join-zigbee_scan_dispatch"}],"isEnabled":true,"name":"Network Form and Join","id":"studiocomproot-Zigbee-Network_Form_and_Join","label":"Network Form and Join","type":"category"},{"children":[{"keyWords":"zigbee_ota_client","componentId":"zigbee_ota_client","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ota-client","description":"Silicon Labs implementation of the Zigbee Over-the-air Bootload Client Cluster (a multi-hop, application bootloader). This implementation finds the OTA server in the network, periodically queries the server for a new image to download, downloads the data, and then waits for the server command to tell it to upgrade. Optionally it can cryptographically verify the image before upgrade.","instantiable":false,"label":"OTA Bootload Cluster Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_client","isEditable":false,"isEnabled":true,"name":"zigbee_ota_client","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_client"},{"keyWords":"zigbee_ota_client_policy","componentId":"zigbee_ota_client_policy","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ota-client-policy","description":"This sample implementation shows how to define the policies of the Zigbee Over-the-air bootload cluster client (a multi-hop, application bootloader). It allows the implementor to decide what manufacturer ID, image type ID, and file version information is used when querying the server. It also defines callbacks, such as download complete and ready to bootload.","instantiable":false,"label":"OTA Bootload Cluster Client Policy","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_client_policy","isEditable":false,"isEnabled":true,"name":"zigbee_ota_client_policy","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_client_policy"},{"keyWords":"zigbee_ota_common","componentId":"zigbee_ota_common","isConfigurable":false,"documentation":"","description":"Common code for Silicon Labs implementation of the Zigbee Over-the-air Bootload Cluster Client and Server components (a multi-hop, application bootloader).","instantiable":false,"label":"OTA Bootload Cluster Common Code","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_common","isEditable":false,"isEnabled":true,"name":"zigbee_ota_common","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_common"},{"keyWords":"zigbee_ota_server","componentId":"zigbee_ota_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ota-server","description":"Silicon Labs implementation of the Zigbee Over-the-air Bootload Server Cluster (a multi-hop, application bootloader). This implementation serves up a file from an OTA storage device and sends the data to clients. It also controls when they can upgrade to the downloaded file.","instantiable":false,"label":"OTA Bootload Cluster Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_server","isEditable":false,"isEnabled":true,"name":"zigbee_ota_server","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_server"},{"keyWords":"zigbee_ota_server_policy","componentId":"zigbee_ota_server_policy","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ota-server-policy","description":"Silicon Labs implementation of the server policies for the Zigbee Over-the-air bootload cluster (a multi-hop, application bootloader). This controls when a client can upgrade, when new images are made available, and which version the client will download and install. This component should be expanded to support the developer's own server policy.","instantiable":false,"label":"OTA Bootload Cluster Server Policy","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_server_policy","isEditable":false,"isEnabled":true,"name":"zigbee_ota_server_policy","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_server_policy"},{"keyWords":"zigbee_ota_storage_common","componentId":"zigbee_ota_storage_common","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ota-storage-common","description":"Common code for any storage module implementing an Over-the-air bootload cluster.  This is used by either the Zigbee or legacy Ember Standalone bootloader implementations.","instantiable":false,"label":"OTA Bootload Cluster Storage Common Code","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_storage_common","isEditable":false,"isEnabled":true,"name":"zigbee_ota_storage_common","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_storage_common"},{"keyWords":"zigbee_ota_bootload","componentId":"zigbee_ota_bootload","isConfigurable":true,"documentation":"","description":"This component provides the platform-specific means to bootload a device with an application bootloader using external storage for the new image. For an SOC platform this will simply execute the bootloader. In that case it is assumed that the SOC bootloader can access the same storage device as the run-time application using the bootload cluster (i.e. they both have the same EEPROM driver). For the NCP, the code is more complex but functionally the same.  This host code launches the bootloader on the NCP, transfers the file over to the NCP via the xmodem protocol, then reboots the NCP.  It is assumed for the NCP that the serial standalone bootloader appropriate for the platform (UART or SPI) is loaded.  The NCP code requires an OTA Storage implementation and device. This component does not support any host bootloading, or bootloading other microchips, but it can be extended to do so.","instantiable":false,"label":"OTA Cluster Platform Bootloader","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_bootload","isEditable":false,"isEnabled":true,"name":"zigbee_ota_bootload","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_bootload"},{"keyWords":"zigbee_ota_storage_posix_filesystem","componentId":"zigbee_ota_storage_posix_filesystem","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ota-storage-linux","description":"Silicon Labs implementation of a multi-file storage module for Over-the-air Bootload protocols, which is used by either the Zigbee Over-the-air cluster or the legacy Ember standalone bootloader protocol. It uses a POSIX filesystem as the underlying storage device, and therefore can store any number of files.  It can be used by either the OTA client or OTA server.","instantiable":false,"label":"OTA POSIX Filesystem Storage Module","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_storage_posix_filesystem","isEditable":false,"isEnabled":true,"name":"zigbee_ota_storage_posix_filesystem","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_storage_posix_filesystem"},{"keyWords":"zigbee_ota_storage_simple_eeprom","componentId":"zigbee_ota_storage_simple_eeprom","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ota-storage-eeprom","description":"This is a driver for the Over-the-air simple storage module component. It uses an EEPROM as the underlying storage device. It provides a means to record data being read or written, as well as metadata with information about how far along a client download is. It can be used either by an OTA Client or an OTA Server. Note that this component assumes that the flash storage does not have read-modify-write support. Users should ensure this value matches the flash storage device used by the application. A mismatch between the project-configured value and the actual flash storage support value will result in an application that asserts upon startup.","instantiable":false,"label":"OTA Simple Storage EEPROM Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_storage_simple_eeprom","isEditable":false,"isEnabled":true,"name":"zigbee_ota_storage_simple_eeprom","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_storage_simple_eeprom"},{"keyWords":"zigbee_ota_storage_simple","componentId":"zigbee_ota_storage_simple","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ota-storage-simple","description":"This is a simple Over-the-air bootload cluster storage module that stores only ONE file in the storage device (for use by the client or server component). It requires a storage driver. Silicon Labs provides two, an EEPROM version and a RAM version.","instantiable":false,"label":"OTA Simple Storage Module","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_storage_simple","isEditable":false,"isEnabled":true,"name":"zigbee_ota_storage_simple","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_storage_simple"},{"keyWords":"zigbee_ota_storage_simple_ram","componentId":"zigbee_ota_storage_simple_ram","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ota-storage-ram","description":"This is a test implementation of a storage driver for the Over-the-air simple storage module.  It uses RAM to store a single, non-bootable, test image.  It is intended for basic demonstration purposes only and is not production-ready.  It can be used for either an OTA Client or OTA Server.","instantiable":false,"label":"OTA Simple Storage RAM Driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_storage_simple_ram","isEditable":false,"isEnabled":true,"name":"zigbee_ota_storage_simple_ram","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_storage_simple_ram"},{"keyWords":"zigbee_ota_client_signature_verify_support","componentId":"zigbee_ota_client_signature_verify_support","isConfigurable":false,"documentation":"","description":"Provides support for OTA image signature verification. This requires all received images to be signed with an ECDSA signature and verifies the signature once the download has completed.  If an image fails verification it is discarded.  This verification occurs before any custom verification that might verify the contents.","instantiable":false,"label":"OTA client with signature verify support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Over-The-Air_Bootloading|studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_client_signature_verify_support","isEditable":false,"isEnabled":true,"name":"zigbee_ota_client_signature_verify_support","isSelected":false,"id":"studiocomproot-Zigbee-Over-The-Air_Bootloading-zigbee_ota_client_signature_verify_support"}],"isEnabled":true,"name":"Over-The-Air Bootloading","id":"studiocomproot-Zigbee-Over-The-Air_Bootloading","label":"Over-The-Air Bootloading","type":"category"},{"children":[{"children":[{"keyWords":"zigbee_phy_2_4","componentId":"zigbee_phy_2_4","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/phy-2-4","description":"Standard Zigbee 2.4GHz physical layer.","instantiable":false,"label":"Zigbee 2.4GHz Device","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-PHY_support|studiocomproot-Zigbee-Stack-PHY_support-zigbee_phy_2_4","isEditable":false,"isEnabled":true,"name":"zigbee_phy_2_4","isSelected":false,"id":"studiocomproot-Zigbee-Stack-PHY_support-zigbee_phy_2_4"},{"keyWords":"zigbee_phy_2_4_subghz_switch_coordinator","componentId":"zigbee_phy_2_4_subghz_switch_coordinator","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/phy-2-4-subghz-switch-coordinator","description":"Zigbee Multi-MAC Switch Coordinator - A Coordinator can form a network and operate on the 2.4GHz and Sub-GHz bands simultaneously. The supported radio boards are BRD4155a-Rev01 and BRD4197a-Rev01.","instantiable":false,"label":"Zigbee 2.4GHz/SubGHz Switch Coordinator","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-PHY_support|studiocomproot-Zigbee-Stack-PHY_support-zigbee_phy_2_4_subghz_switch_coordinator","isEditable":false,"isEnabled":true,"name":"zigbee_phy_2_4_subghz_switch_coordinator","isSelected":false,"id":"studiocomproot-Zigbee-Stack-PHY_support-zigbee_phy_2_4_subghz_switch_coordinator"}],"isEnabled":true,"name":"PHY support","id":"studiocomproot-Zigbee-Stack-PHY_support","label":"PHY support","type":"category"},{"children":[{"keyWords":"zigbee_pro_leaf_stack","componentId":"zigbee_pro_leaf_stack","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-leaf-stack","description":"The Zigbee PRO Stack support for end devices. It includes stubs for parent and routing code, since end devices do not need this functionality.","instantiable":false,"label":"Pro Leaf Stack","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_leaf_stack","isEditable":false,"isEnabled":true,"name":"zigbee_pro_leaf_stack","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_leaf_stack"},{"keyWords":"zigbee_pro_leaf_stack_mac_test_cmds","componentId":"zigbee_pro_leaf_stack_mac_test_cmds","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-leaf-stack","description":"The Zigbee PRO Stack support for end devices. It includes stubs for parent and routing code, since end devices do not need this functionality.","instantiable":false,"label":"Pro Leaf Stack with Mac test commands","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_leaf_stack_mac_test_cmds","isEditable":false,"isEnabled":true,"name":"zigbee_pro_leaf_stack_mac_test_cmds","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_leaf_stack_mac_test_cmds"},{"keyWords":"zigbee_pro_router_stack_basic","componentId":"zigbee_pro_router_stack_basic","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack","description":"Use the basic Zigbee PRO stack specifically for router devices (does not support high datarate phy or RAIL MUX, and stubs out code routers do not use).","instantiable":false,"label":"Pro Router Stack (Basic)","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_router_stack_basic","isEditable":false,"isEnabled":true,"name":"zigbee_pro_router_stack_basic","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_router_stack_basic"},{"keyWords":"zigbee_pro_router_stack","componentId":"zigbee_pro_router_stack","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack","description":"The main Zigbee PRO Stack component for routers only for parsing, processing, generating and managing the Zigbee PRO stack messages and functionality.  It includes stubs for code only needed on end devices or coordinators.","instantiable":false,"label":"Pro Router Stack (Common)","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_router_stack","isEditable":false,"isEnabled":true,"name":"zigbee_pro_router_stack","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_router_stack"},{"keyWords":"zigbee_pro_router_stack_with_high_datarate_phy","componentId":"zigbee_pro_router_stack_with_high_datarate_phy","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack","description":"The main Zigbee PRO Stack component for routers only for parsing, processing, generating and managing the Zigbee PRO stack messages and functionality.  It includes stubs for code only needed on end devices or coordinators. This includes the high datarate phy feature.","instantiable":false,"label":"Pro Router Stack with high datarate phy","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_router_stack_with_high_datarate_phy","isEditable":false,"isEnabled":true,"name":"zigbee_pro_router_stack_with_high_datarate_phy","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_router_stack_with_high_datarate_phy"},{"keyWords":"zigbee_pro_router_stack_with_high_datarate_phy_rail_mux","componentId":"zigbee_pro_router_stack_with_high_datarate_phy_rail_mux","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack","description":"The main Zigbee PRO Stack component for routers only for parsing, processing, generating and managing the Zigbee PRO stack messages and functionality.  It includes stubs for code only needed on end devices or coordinators.This includes the high datarate phy feature and rail mux","instantiable":false,"label":"Pro Router Stack with high datarate phy and rail mux","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_router_stack_with_high_datarate_phy_rail_mux","isEditable":false,"isEnabled":true,"name":"zigbee_pro_router_stack_with_high_datarate_phy_rail_mux","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_router_stack_with_high_datarate_phy_rail_mux"},{"keyWords":"zigbee_pro_router_stack_rail_mux","componentId":"zigbee_pro_router_stack_rail_mux","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack","description":"The main Zigbee PRO Stack component for routers only for parsing, processing, generating and managing the Zigbee PRO stack messages and functionality.  It includes stubs for code only needed on end devices or coordinators.This includes rail mux","instantiable":false,"label":"Pro Router Stack with rail mux","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_router_stack_rail_mux","isEditable":false,"isEnabled":true,"name":"zigbee_pro_router_stack_rail_mux","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_router_stack_rail_mux"},{"keyWords":"zigbee_pro_stack_basic","componentId":"zigbee_pro_stack_basic","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack","description":"Uses the main Zigbee PRO Stack library variant (without support for high-datarate PHY or RAIL MUX).","instantiable":false,"label":"Pro Stack (Basic)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_basic","isEditable":false,"isEnabled":true,"name":"zigbee_pro_stack_basic","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_basic"},{"keyWords":"zigbee_pro_stack","componentId":"zigbee_pro_stack","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack","description":"The main Zigbee PRO Stack component for parsing, processing, generating and managing the Zigbee PRO stack messages and functionality.  Common component for all variants of this library.","instantiable":false,"label":"Pro Stack (Common)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack","isEditable":false,"isEnabled":true,"name":"zigbee_pro_stack","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack"},{"keyWords":"zigbee_pro_stack_alt_mac","componentId":"zigbee_pro_stack_alt_mac","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack-alt-mac","description":"Provides Zigbee PRO stack functionality along with APIs to interface with alternate MAC.","instantiable":false,"label":"Pro Stack Alt MAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_alt_mac","isEditable":false,"isEnabled":true,"name":"zigbee_pro_stack_alt_mac","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_alt_mac"},{"keyWords":"zigbee_ncp_pro_stack","componentId":"zigbee_ncp_pro_stack","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ncp-pro","description":"The main NCP commands for Zigbee PRO Stack component for parsing, processing, generating and managing the Zigbee PRO stack messages and functionality.","instantiable":false,"label":"Pro Stack NCP commands","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_ncp_pro_stack","isEditable":false,"isEnabled":true,"name":"zigbee_ncp_pro_stack","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_ncp_pro_stack"},{"keyWords":"zigbee_pro_stack_non_default_mac","componentId":"zigbee_pro_stack_non_default_mac","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack-non-default-mac","description":"Provides Zigbee PRO stack functionality along with APIs to interface with non default 15.4 interfaces such as BLE.","instantiable":false,"label":"Pro Stack Non Default","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_non_default_mac","isEditable":false,"isEnabled":true,"name":"zigbee_pro_stack_non_default_mac","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_non_default_mac"},{"keyWords":"zigbee_pro_stack_rail_mux","componentId":"zigbee_pro_stack_rail_mux","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack-rail-mux","description":"Provides Zigbee PRO stack functionality along with APIs to interface with RAIL MUX.","instantiable":false,"label":"Pro Stack RAIL MUX","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_rail_mux","isEditable":false,"isEnabled":true,"name":"zigbee_pro_stack_rail_mux","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_rail_mux"},{"keyWords":"zigbee_pro_stack_with_high_datarate_phy","componentId":"zigbee_pro_stack_with_high_datarate_phy","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack","description":"The main Zigbee PRO Stack component for parsing, processing, generating and managing the Zigbee PRO stack messages and functionality. This includes the high datarate phy feature.","instantiable":false,"label":"Zigbee PRO stack with high datarate phy","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_with_high_datarate_phy","isEditable":false,"isEnabled":true,"name":"zigbee_pro_stack_with_high_datarate_phy","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_with_high_datarate_phy"},{"keyWords":"zigbee_pro_stack_with_high_datarate_phy_rail_mux","componentId":"zigbee_pro_stack_with_high_datarate_phy_rail_mux","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/pro-stack","description":"The main Zigbee PRO Stack component for parsing, processing, generating and managing the Zigbee PRO stack messages and functionality. This includes the high datarate phy feature.","instantiable":false,"label":"Zigbee PRO stack with high datarate phy and rail mux","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-Pro_Core|studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_with_high_datarate_phy_rail_mux","isEditable":false,"isEnabled":true,"name":"zigbee_pro_stack_with_high_datarate_phy_rail_mux","isSelected":false,"id":"studiocomproot-Zigbee-Stack-Pro_Core-zigbee_pro_stack_with_high_datarate_phy_rail_mux"}],"isEnabled":true,"name":"Pro Core","id":"studiocomproot-Zigbee-Stack-Pro_Core","label":"Pro Core","type":"category"},{"keyWords":"zigbee_cbke_163k1","componentId":"zigbee_cbke_163k1","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/cbke-163k1","description":"Provides Certificate-Based Key Exchange (CBKE) functions specific to the 163k ECC curve used in Smart Energy 1.0 and 1.1.","instantiable":false,"label":"CBKE 163k1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_cbke_163k1","isEditable":false,"isEnabled":true,"name":"zigbee_cbke_163k1","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_cbke_163k1"},{"keyWords":"zigbee_cbke_283k1","componentId":"zigbee_cbke_283k1","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/cbke-283k1","description":"Provides Certificate-Based Key Exchange (CBKE) functions specific to the 283k ECC curve used in Smart Energy 1.2 and later.","instantiable":false,"label":"CBKE 283k1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_cbke_283k1","isEditable":false,"isEnabled":true,"name":"zigbee_cbke_283k1","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_cbke_283k1"},{"keyWords":"zigbee_cbke_dsa_sign","componentId":"zigbee_cbke_dsa_sign","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/cbke-dsa-sign","description":"This component is a part of the CBKE library that manages DSA Signing using the ECDSA algorithm.  It is not necessary for Zigbee OTA cluster and it is optional for Smart Energy 1.1 and later specs.","instantiable":false,"label":"CBKE DSA Sign","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_cbke_dsa_sign","isEditable":false,"isEnabled":true,"name":"zigbee_cbke_dsa_sign","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_cbke_dsa_sign"},{"keyWords":"zigbee_cbke_dsa_verify","componentId":"zigbee_cbke_dsa_verify","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/cbke-dsa-verify","description":"This library is a part of the CBKE library that manages 163k1 curve DSA Verification using the ECDSA algorithm.  It may used by the Zigbee OTA client cluster to verify signed upgrade images.","instantiable":false,"label":"CBKE DSA verify","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_cbke_dsa_verify","isEditable":false,"isEnabled":true,"name":"zigbee_cbke_dsa_verify","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_cbke_dsa_verify"},{"keyWords":"zigbee_cbke_dsa_verify_283k1","componentId":"zigbee_cbke_dsa_verify_283k1","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/cbke-dsa-verify-283k1","description":"This library is a part of the CBKE library that manages 283k1 curve DSA Verification using the ECDSA algorithm.  It may used by the Zigbee OTA client cluster to verify signed upgrade images.","instantiable":false,"label":"CBKE DSA verify 283k1","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_cbke_dsa_verify_283k1","isEditable":false,"isEnabled":true,"name":"zigbee_cbke_dsa_verify_283k1","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_cbke_dsa_verify_283k1"},{"keyWords":"zigbee_cbke_core","componentId":"zigbee_cbke_core","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/cbke-core","description":"Certificate-Based Key Exchange Library. It provides support for managing the Elliptic Curve Cryptography (ECC) operations.  It provides key agreement and ephemeral key generation interfaces with the ability to save the generated link key key.  It is used by the Smart Energy 1.x Profile to authenticate and authorize devices.","instantiable":false,"label":"CBKE core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_cbke_core","isEditable":false,"isEnabled":true,"name":"zigbee_cbke_core","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_cbke_core"},{"keyWords":"zigbee_debug_basic","componentId":"zigbee_debug_basic","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/debug-basic","description":"This component provides basic debug support for the stack to send messages to the backchannel, which can be captured by Network Analyzer and displayed. The features are Node reset message, assert output, core dump output, virtual UART input and output, basic node information request and response (NodeInfo events).","instantiable":false,"label":"Debug Basic","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_debug_basic","isEditable":false,"isEnabled":true,"name":"zigbee_debug_basic","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_debug_basic"},{"keyWords":"zigbee_debug_extended","componentId":"zigbee_debug_extended","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/debug-extended","description":"Provides extended debug functionality, including API traces and debug statistics.","instantiable":false,"label":"Debug Extended","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_debug_extended","isEditable":false,"isEnabled":true,"name":"zigbee_debug_extended","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_debug_extended"},{"keyWords":"zigbee_dynamic_commissioning","componentId":"zigbee_dynamic_commissioning","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/dynamic-commissioning","description":"Provides support for Dynamic Commissioning features as part of Revision 23 of ZigBee Specification, including Dynamic Link Keys and Device Interview. Zigbee Dynamic Link Key Negotation provides support for negotiating link keys via new ZDO clusters. This enables devices to commission new link keys both on-network and during joining, and Device Interview allows Centralized Networks to implement additional security screening of new devices before authorizing them on the network.","instantiable":false,"label":"Dynamic Commissioning","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_dynamic_commissioning","isEditable":false,"isEnabled":true,"name":"zigbee_dynamic_commissioning","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_dynamic_commissioning"},{"keyWords":"zigbee_ecc_163k1_stub","componentId":"zigbee_ecc_163k1_stub","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ecc-163k1","description":"Provides the 163k1 Elliptic Curve Cryptography stub support. Download the EmberZnet-Smart-Energy.zip side package for real version of library.","instantiable":false,"label":"ECC 163k1 Stub Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_ecc_163k1_stub","isEditable":false,"isEnabled":true,"name":"zigbee_ecc_163k1_stub","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_ecc_163k1_stub"},{"keyWords":"zigbee_ecc_283k1_stub","componentId":"zigbee_ecc_283k1_stub","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ecc-283k1","description":"Provides the 283k1 Elliptic Curve Cryptography stub support. Download the EmberZnet-Smart-Energy.zip side package for real version of library.","instantiable":false,"label":"ECC 283k1 Stub Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_ecc_283k1_stub","isEditable":false,"isEnabled":true,"name":"zigbee_ecc_283k1_stub","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_ecc_283k1_stub"},{"keyWords":"zigbee_gp","componentId":"zigbee_gp","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/gp","description":"Provides functionality for Green Power infrastructure devices.","instantiable":false,"label":"Green Power","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_gp","isEditable":false,"isEnabled":true,"name":"zigbee_gp","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_gp"},{"keyWords":"zigbee_multi_pan","componentId":"zigbee_multi_pan","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/multi-pan","description":"Provides the ability for a single device to operate on two simultaneous receiver-on-when-idle networks. The device may configure two independent coordinator networks operating on the same radio channel. Visit AN724: Designing for Multiple Networks on a Single Zigbee Chip for more information.","instantiable":false,"label":"Multi PAN","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_multi_pan","isEditable":false,"isEnabled":true,"name":"zigbee_multi_pan","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_multi_pan"},{"keyWords":"zigbee_multi_network","componentId":"zigbee_multi_network","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/multi-network","description":"Provides the ability for a single device to be on multiple networks and time-sharing between them.  The device can be a coordinator/router on only one network, but a sleepy end device on another network. See AN724: Designing for Multiple Networks on a Single Zigbee Chip for more information.","instantiable":false,"label":"Multi network","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_multi_network","isEditable":false,"isEnabled":true,"name":"zigbee_multi_network","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_multi_network"},{"keyWords":"zigbee_r22_support_mac_test_cmds","componentId":"zigbee_r22_support_mac_test_cmds","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/r22-support-mac-test-cmds","description":"Implements the features added in Zigbee Specification Rev22, library supports enhanced beacon request, link power delta and nwk IEEE joining list commands plus Mac Test Commands support.","instantiable":false,"label":"R22 support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_r22_support_mac_test_cmds","isEditable":false,"isEnabled":true,"name":"zigbee_r22_support_mac_test_cmds","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_r22_support_mac_test_cmds"},{"keyWords":"zigbee_r22_support","componentId":"zigbee_r22_support","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/r22-support","description":"Implements the features added in Zigbee Specification Rev22, library supports enhanced beacon request, link power delta and nwk IEEE joining list commands.","instantiable":false,"label":"R22 support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_r22_support","isEditable":false,"isEnabled":true,"name":"zigbee_r22_support","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_r22_support"},{"keyWords":"zigbee_r23_support","componentId":"zigbee_r23_support","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/r23-support","description":"Provides base stack support for Revision 23 of the ZigBee specification. This component provides the minimum set of features, including TLV payload processing, new Commissioning frames, APS Relay and Frame Counter Synchronization, and New ZDO clusters. Optional features are included in the Dynamic Commissioning component.","instantiable":false,"label":"R23 support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_r23_support","isEditable":false,"isEnabled":true,"name":"zigbee_r23_support","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_r23_support"},{"keyWords":"zigbee_security_link_keys","componentId":"zigbee_security_link_keys","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/security-link-keys","description":"Provides management of APS link keys in the key table.  It is used by a trust center (coordinator) to manage link keys of devices in the network, or by non-trust-center devices wishing to manage partner link keys.","instantiable":false,"label":"Security Link Keys","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_security_link_keys","isEditable":false,"isEnabled":true,"name":"zigbee_security_link_keys","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_security_link_keys"},{"keyWords":"zigbee_source_route","componentId":"zigbee_source_route","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/source-route","description":"Provides support for Source Route table maintenance and update functionality.","instantiable":false,"label":"Source route","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_source_route","isEditable":false,"isEnabled":true,"name":"zigbee_source_route","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_source_route"},{"keyWords":"zigbee_zdo_cluster_filter","componentId":"zigbee_zdo_cluster_filter","isConfigurable":false,"documentation":"","description":"enables stack policies for filtering \"restricted\" ZDO clusters","instantiable":false,"label":"ZDO Cluster Command Filter","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_zdo_cluster_filter","isEditable":false,"isEnabled":true,"name":"zigbee_zdo_cluster_filter","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_zdo_cluster_filter"},{"keyWords":"zigbee_zll","componentId":"zigbee_zll","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zll","description":"Provides the functionality to support Zigbee Light Link (ZLL) functionality on a device.","instantiable":false,"label":"Zigbee light link","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Stack|studiocomproot-Zigbee-Stack-zigbee_zll","isEditable":false,"isEnabled":true,"name":"zigbee_zll","isSelected":false,"id":"studiocomproot-Zigbee-Stack-zigbee_zll"}],"isEnabled":true,"name":"Stack","id":"studiocomproot-Zigbee-Stack","label":"Stack","type":"category"},{"children":[{"keyWords":"zigbee_trust_center_backup","componentId":"zigbee_trust_center_backup","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/trust-center-backup","description":"This component is only for a trust center. It provides a set of APIs for importing and exporting the backup info for a Smart Energy trust center.  It requires extending to hook up import/export routines into an external storage device or network, where the data may be saved to and restored from. This component is extended to use token interface to perform a complete backup and restore a trust center. The way it works is that it uses token interface APIs to read all the available tokens on the NCP node and stores those on the host. The format of the back up file is Number of Tokens (1 byte) Token0 (4 bytes) Token0Size(1 byte) Token0ArraySize(1 byte) Token0Data(Token0Size * Token0ArraySize) Then a series of token data structure up to the last token.","instantiable":false,"label":"Trust Center Backup","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Trust_Center|studiocomproot-Zigbee-Trust_Center-zigbee_trust_center_backup","isEditable":false,"isEnabled":true,"name":"zigbee_trust_center_backup","isSelected":false,"id":"studiocomproot-Zigbee-Trust_Center-zigbee_trust_center_backup"},{"keyWords":"zigbee_trust_center_keepalive","componentId":"zigbee_trust_center_keepalive","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/trust-center-keepalive","description":"Silicon Labs implementation of Trust Center Keepalive for SE 1.2b. The component periodically sends keepalive signals to the trust center to verify that it is accessible. If the trust center fails to acknowledge a series of keepalive signals, the component searches for another instance of the trust center on a different channel or short PAN ID. The frequency with which the component sends the keepalive signals has a default, but is ultimately determined by the attributes on the Trust Center. This component periodically reads the \"TC Keep-Alive Base\" and \"TC Keep-Alive Jitter\" to determine the rate that it will send future keepalives. Trust Center Keepalive is part of the optional Trust Center Swap-Out feature of Smart Energy 1.1. Devices are not required to implement this functionality. The trust center does not send keepalives, so this component should be disabled if the device is acting as the trust center.","instantiable":false,"label":"Trust Center Keepalive","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Trust_Center|studiocomproot-Zigbee-Trust_Center-zigbee_trust_center_keepalive","isEditable":false,"isEnabled":true,"name":"zigbee_trust_center_keepalive","isSelected":false,"id":"studiocomproot-Zigbee-Trust_Center-zigbee_trust_center_keepalive"},{"keyWords":"zigbee_trust_center_nwk_key_update_broadcast","componentId":"zigbee_trust_center_nwk_key_update_broadcast","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/trust-center-nwk-key-update-broadcast","description":"This is a Trust Center component that handles updating the Network Key by BROADCASTING the key to all devices in the network. This is the method used by HA and networks that are not running Smart Energy. The new network key is randomly generated.","instantiable":false,"label":"Trust Center Network Key Update Broadcast","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Trust_Center|studiocomproot-Zigbee-Trust_Center-zigbee_trust_center_nwk_key_update_broadcast","isEditable":false,"isEnabled":true,"name":"zigbee_trust_center_nwk_key_update_broadcast","isSelected":false,"id":"studiocomproot-Zigbee-Trust_Center-zigbee_trust_center_nwk_key_update_broadcast"},{"keyWords":"zigbee_trust_center_nwk_key_update_periodic","componentId":"zigbee_trust_center_nwk_key_update_periodic","isConfigurable":true,"documentation":"","description":"This is a Trust Center component that periodically initiates a NWK key update based on the parameters defined below.  It uses either a broadcast-based method or a unicast-based method, depending on whether the 'Trust Center NWK Key Update Broadcast' or 'Trust Center NWK Key Update Unicast' component has been included.  NOTE The default value of 30 minutes for Key Update Period/Units is to ensure that the network key update operation is observed and verified during development and test.  This value should be changed for production deployment; Zigbee R22 recommends a period of no less than 30 days. The upper bound of 45 days reflects a constraint of this component's timing implementation. If support for longer periods is required, the timing implementation and option ranges of this component must be modified.","instantiable":false,"label":"Trust Center Network Key Update Periodic","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Trust_Center|studiocomproot-Zigbee-Trust_Center-zigbee_trust_center_nwk_key_update_periodic","isEditable":false,"isEnabled":true,"name":"zigbee_trust_center_nwk_key_update_periodic","isSelected":false,"id":"studiocomproot-Zigbee-Trust_Center-zigbee_trust_center_nwk_key_update_periodic"},{"keyWords":"zigbee_trust_center_nwk_key_update_unicast","componentId":"zigbee_trust_center_nwk_key_update_unicast","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/trust-center-nwk-key-update-unicast","description":"This is a Trust Center component that handles updating the Network Key by UNICASTING that key to each device encrypted with their link key. It is intended for use in Smart Energy networks. It will traverse the Trust Center's local key table and sends the new NWK key to each non-sleepy device with an authorized link key (a device that has successfully performed key establishment). The new network key will be randomly generated. After all messages have been sent, it will broadcast a key switch message.","instantiable":false,"label":"Trust Center Network Key Update Unicast","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Trust_Center|studiocomproot-Zigbee-Trust_Center-zigbee_trust_center_nwk_key_update_unicast","isEditable":false,"isEnabled":true,"name":"zigbee_trust_center_nwk_key_update_unicast","isSelected":false,"id":"studiocomproot-Zigbee-Trust_Center-zigbee_trust_center_nwk_key_update_unicast"}],"isEnabled":true,"name":"Trust Center","id":"studiocomproot-Zigbee-Trust_Center","label":"Trust Center","type":"category"},{"children":[{"keyWords":"zigbee_file_descriptor_dispatch","componentId":"zigbee_file_descriptor_dispatch","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/file-descriptor-dispatch","description":"This component provides an API for registering a file descriptor and a callback that will be called when the select() function notifies the component there is data on that file descriptor.","instantiable":false,"label":"File Descriptor Dispatch","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Unix_Host|studiocomproot-Zigbee-Unix_Host-zigbee_file_descriptor_dispatch","isEditable":false,"isEnabled":true,"name":"zigbee_file_descriptor_dispatch","isSelected":false,"id":"studiocomproot-Zigbee-Unix_Host-zigbee_file_descriptor_dispatch"},{"keyWords":"zigbee_gateway","componentId":"zigbee_gateway","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/gateway","description":"Software that supports a CLI-based application running on a gateway-style device that has a POSIX compatible operating system. This component is NOT compatible with an system-on-a-chip (SoC) platform.","instantiable":false,"label":"Gateway Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Unix_Host|studiocomproot-Zigbee-Unix_Host-zigbee_gateway","isEditable":false,"isEnabled":true,"name":"zigbee_gateway","isSelected":false,"id":"studiocomproot-Zigbee-Unix_Host-zigbee_gateway"},{"keyWords":"zigbee_recommended_linux_arch","componentId":"zigbee_recommended_linux_arch","isConfigurable":false,"documentation":"","description":"Recommended architecture for Zigbee Host application","instantiable":false,"label":"Recommended Linux architecture","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Unix_Host|studiocomproot-Zigbee-Unix_Host-zigbee_recommended_linux_arch","isEditable":false,"isEnabled":true,"name":"zigbee_recommended_linux_arch","isSelected":false,"id":"studiocomproot-Zigbee-Unix_Host-zigbee_recommended_linux_arch"},{"keyWords":"zigbee_host_unix_library","componentId":"zigbee_host_unix_library","isConfigurable":true,"documentation":"","description":"Common functionality for Unix hosts.","instantiable":false,"label":"Unix Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Unix_Host|studiocomproot-Zigbee-Unix_Host-zigbee_host_unix_library","isEditable":false,"isEnabled":true,"name":"zigbee_host_unix_library","isSelected":false,"id":"studiocomproot-Zigbee-Unix_Host-zigbee_host_unix_library"},{"keyWords":"zigbee_host_unix_printf","componentId":"zigbee_host_unix_printf","isConfigurable":false,"documentation":"","description":"This component provides the wrapper for the C Standard I/O function printf. It enables the user to use the sl_zigbee_af_print_XXX functions as they would with any other architecture. This component is NOT compatible with a system-on-a-chip (SoC) platform.","instantiable":false,"label":"Unix Printf","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Unix_Host|studiocomproot-Zigbee-Unix_Host-zigbee_host_unix_printf","isEditable":false,"isEnabled":true,"name":"zigbee_host_unix_printf","isSelected":false,"id":"studiocomproot-Zigbee-Unix_Host-zigbee_host_unix_printf"}],"isEnabled":true,"name":"Unix Host","id":"studiocomproot-Zigbee-Unix_Host","label":"Unix Host","type":"category"},{"children":[{"children":[{"keyWords":"zigbee_test_harness","componentId":"zigbee_test_harness","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/test-harness","description":"This component implements software for support of non-standard test-harness behavior to induce failure conditions and verify certified device behavior. This handles negative key establishment test cases for timeout and sending bad messages, mangling OTA upgrade images, starting/stopping the trust center keepalive, initiating network key updates, and testing ZCL attributes.","instantiable":false,"label":"Test Harness","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-Testing|studiocomproot-Zigbee-Utility-Testing-zigbee_test_harness","isEditable":false,"isEnabled":true,"name":"zigbee_test_harness","isSelected":false,"id":"studiocomproot-Zigbee-Utility-Testing-zigbee_test_harness"},{"keyWords":"zigbee_test_harness_z3","componentId":"zigbee_test_harness_z3","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/test-harness-z3","description":"This component contains the functionality necessary for creating a Zigbee 3.0 test harness application.","instantiable":false,"label":"Zigbee 3.0 Test Harness","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-Testing|studiocomproot-Zigbee-Utility-Testing-zigbee_test_harness_z3","isEditable":false,"isEnabled":true,"name":"zigbee_test_harness_z3","isSelected":false,"id":"studiocomproot-Zigbee-Utility-Testing-zigbee_test_harness_z3"}],"isEnabled":true,"name":"Testing","id":"studiocomproot-Zigbee-Utility-Testing","label":"Testing","type":"category"},{"keyWords":"zigbee_aes_software","componentId":"zigbee_aes_software","isConfigurable":false,"documentation":"","description":"Software AES wrapper using the mbed TLS.","instantiable":false,"label":"AES (Software)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_aes_software","isEditable":false,"isEnabled":true,"name":"zigbee_aes_software","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_aes_software"},{"keyWords":"zigbee_address_table","componentId":"zigbee_address_table","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/address-table","description":"This component supports managing the address table. On the SoC, all action are directly performed on the stack address table. The host maintains a copy of the address table and ensures that it is always in sync with the NCP's address table. When building the HOST, make sure that the NCP can support the address table size in the component configuration. This optimal size varies based on platform architecture and size of other dynamically- allocated data for this application. If errors occur upon resetting the NCP, the NCP may not have enough room to store a large address table size. If this is not the case, the NCP may not be able to dynamically increase the address table size based on the host's request. To work around this issue, statically allocate the desired address table size on the Zigbee Pro Stack\\Pro Leaf Stack components on the NCP.","instantiable":false,"label":"Address Table","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_address_table","isEditable":false,"isEnabled":true,"name":"zigbee_address_table","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_address_table"},{"keyWords":"zigbee_system_common","componentId":"zigbee_system_common","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/app-framework-common","description":"This component declares all the required application framework globals, initializes the Zigbee stack and dispatches stack callbacks calls as needed to the application components.","instantiable":false,"label":"Application Framework Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"idle-sleep,rtos,priority,stack-size,stay-awake-when-not-joined,minimum-sleep-duration,sleep-backoff,button-stay-awake","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_system_common","isEditable":false,"isEnabled":true,"name":"zigbee_system_common","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_system_common"},{"keyWords":"zigbee_button_joining","componentId":"zigbee_button_joining","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/button-joining","description":"This component requires the Network Creator Security + the Network Creator or the Network Steering component to function correctly in Zigbee 3.0 networks.  Else, the Network Find component is strongly recommended but not mandatory.) This code hooks up button 0 to have specific behavior based on the current network state. The behavior is as follows. If the device is not joined to a network, it forms a Zigbee 3.0 network (via the Network Creator component) if it is configured as a coordinator, or joins a Zigbee 3.0 or ZHA legacy network (via the Network Steering component) if it is configured as a router. If the device is joined to a network, then pressing the button broadcasts a ZDO permit join to allow new devices to join.  Holding the button for 5 seconds and releasing causes the device to leave the network.  Button 1 is not used and a callback is provided to another module wishing to use it.","instantiable":false,"label":"Button Form/Join Code","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_button_joining","isEditable":false,"isEnabled":true,"name":"zigbee_button_joining","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_button_joining"},{"keyWords":"zigbee_concentrator","componentId":"zigbee_concentrator","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/concentrator-support","description":"Code that handles periodically broadcasting a many-to-one-route-request (MTORR) so that the device will act as a concentrator (sink) in the network. Note NCP/SoC source route table size can now be defined as part of the source routing library.","instantiable":false,"label":"Concentrator Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_concentrator","isEditable":false,"isEnabled":true,"name":"zigbee_concentrator","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_concentrator"},{"keyWords":"zigbee_counters","componentId":"zigbee_counters","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/counters","description":"This component provides support for reading and manipulating counters that record different events in the stack.","instantiable":false,"label":"Counters","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_counters","isEditable":false,"isEnabled":true,"name":"zigbee_counters","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_counters"},{"keyWords":"zigbee_debug_print","componentId":"zigbee_debug_print","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/debug-print","description":"Provides APIs for adding serial debugging capability.","instantiable":false,"label":"Debug Print","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_debug_print","isEditable":false,"isEnabled":true,"name":"zigbee_debug_print","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_debug_print"},{"keyWords":"zigbee_delayed_join","componentId":"zigbee_delayed_join","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/delayed-join","description":"This component is used both for a trust center and a joining device.  It provides a set of APIs for setting the acceptable delay for receiving a network key, as well as sending the network key on demand from the app. The following are the minimum conditions to verify before successfully using this component. 1. The trust center must have an acceptable version of a link key for the joining devices. 2. The component must be (re-)activated every time a network is opened or after any other event that changes the trust center (re-)join policy.","instantiable":false,"label":"Delayed Join","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_delayed_join","isEditable":false,"isEnabled":true,"name":"zigbee_delayed_join","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_delayed_join"},{"keyWords":"zigbee_device_database","componentId":"zigbee_device_database","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/device-database","description":"This component provides an API to add/remove a device from a list of known devices, and to record their list of endpoints and clusters.","instantiable":false,"label":"Device Database","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_device_database","isEditable":false,"isEnabled":true,"name":"zigbee_device_database","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_device_database"},{"keyWords":"zigbee_device_query_service","componentId":"zigbee_device_query_service","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/device-query-service","description":"This component queries new devices for their endpoints and clusters to record information in the Device Database component.","instantiable":false,"label":"Device Query Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_device_query_service","isEditable":false,"isEnabled":true,"name":"zigbee_device_query_service","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_device_query_service"},{"keyWords":"zigbee_device_table","componentId":"zigbee_device_table","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/device-table","description":"Simple C-based rules engine for demonstrating automatic control through a gateway.","instantiable":false,"label":"Device Table","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_device_table","isEditable":false,"isEnabled":true,"name":"zigbee_device_table","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_device_table"},{"keyWords":"zigbee_ezsp_cpc","componentId":"zigbee_ezsp_cpc","isConfigurable":false,"documentation":"","description":"This component is used to tranfer EZSP frames over a Co-Processor Communication (CPC) link. This component is meant only for the host application, not the Network Co-Processor (NCP) image.","instantiable":false,"label":"EZSP CPC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_ezsp_cpc","isEditable":false,"isEnabled":true,"name":"zigbee_ezsp_cpc","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_ezsp_cpc"},{"keyWords":"zigbee_ezsp","componentId":"zigbee_ezsp","isConfigurable":false,"documentation":"","description":"This is the implementation of the EmberZNet Serial Protocol (EZSP) for communicating to an EFR32 chip configured as an NCP.  This protocol serializes the Zigbee stack calls that operate below the Application Framework.","instantiable":false,"label":"EZSP Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_ezsp","isEditable":false,"isEnabled":true,"name":"zigbee_ezsp","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_ezsp"},{"keyWords":"zigbee_ezsp_spi","componentId":"zigbee_ezsp_spi","isConfigurable":true,"documentation":"","description":"This is the SPI implementation of EZSP.","instantiable":false,"label":"EZSP SPI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_ezsp_spi","isEditable":false,"isEnabled":true,"name":"zigbee_ezsp_spi","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_ezsp_spi"},{"keyWords":"zigbee_ezsp_uart","componentId":"zigbee_ezsp_uart","isConfigurable":false,"documentation":"","description":"This is the UART implementation of EZSP.","instantiable":false,"label":"EZSP UART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_ezsp_uart","isEditable":false,"isEnabled":true,"name":"zigbee_ezsp_uart","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_ezsp_uart"},{"keyWords":"zigbee_end_device_support","componentId":"zigbee_end_device_support","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/end-device-support","description":"Silicon Labs implementation of polling for end devices.  Note that the Poll Control Server component sets the long and short poll intervals at startup.  If both components are enabled, the long and short poll intervals set here will not be used.","instantiable":false,"label":"End Device Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_end_device_support","isEditable":false,"isEnabled":true,"name":"zigbee_end_device_support","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_end_device_support"},{"keyWords":"zigbee_fragmentation","componentId":"zigbee_fragmentation","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/fragmentation","description":"This component supports sending long packets through fragmentation and reassembly.","instantiable":false,"label":"Fragmentation","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_fragmentation","isEditable":false,"isEnabled":true,"name":"zigbee_fragmentation","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_fragmentation"},{"keyWords":"zigbee_general_response_commands","componentId":"zigbee_general_response_commands","isConfigurable":false,"documentation":"","description":"Silicon Labs implementation of general response commands. The component is only intended to assist with debugging, as the implemented callbacks simply parse incoming general response commands and print the results. Before production, this component should be replaced with code that acts on the responses in an appropriate way.","instantiable":false,"label":"General Response Commands","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_general_response_commands","isEditable":false,"isEnabled":true,"name":"zigbee_general_response_commands","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_general_response_commands"},{"keyWords":"zigbee_heartbeat","componentId":"zigbee_heartbeat","isConfigurable":true,"documentation":"","description":"This component periodically blinks an LED and is useful as an indication of whether the application is running or not.  It requires that the configuration defines BOARD_HEARTBEAT_LED appropriately.  Typically, this is defined in the board header file.","instantiable":false,"label":"Heartbeat","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_heartbeat","isEditable":false,"isEnabled":true,"name":"zigbee_heartbeat","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_heartbeat"},{"keyWords":"zigbee_interpan","componentId":"zigbee_interpan","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/interpan","description":"A component used to handle sending and receiving inter-PAN messages, which are messages that are sent by unjoined devices 1-hop away.","instantiable":false,"label":"Interpan","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_interpan","isEditable":false,"isEnabled":true,"name":"zigbee_interpan","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_interpan"},{"keyWords":"zigbee_mac_address_filtering","componentId":"zigbee_mac_address_filtering","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/mac-address-filtering","description":"This component artificially limits what the stack hears by filtering the packets just above the lower MAC. The component can be configured on the fly via CLI with the short or long address of devices whose packets will be dropped or allowed. There are two lists, a short address list (2-byte node ID) and a long address list (8-byte IEEE address). Each list may be configured as either an allow list or deny list. The default is a deny list with no addresses configured (accept all packets normally). There is also a separate option to allow or drop packets with no address information (e.g. Beacon Requests). NOTE The radio will still generate and process MAC Acks for packets. This component cannot be used to effect the behavior of MAC Acks, which are handled by the RAIL library and radio hardware.","instantiable":false,"label":"MAC Address Filtering","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_mac_address_filtering","isEditable":false,"isEnabled":true,"name":"zigbee_mac_address_filtering","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_mac_address_filtering"},{"keyWords":"zigbee_mfglib","componentId":"zigbee_mfglib","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/mfglib","description":"Manufacturing Library (mfglib) utility. Provides functions that assist in radio testing and calibration.","instantiable":false,"label":"Manufacturing Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_mfglib","isEditable":false,"isEnabled":true,"name":"zigbee_mfglib","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_mfglib"},{"keyWords":"zigbee_manufacturing_library_cli","componentId":"zigbee_manufacturing_library_cli","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/manufacturing-library-cli","description":"The CLI for running manufacturing library commands.","instantiable":false,"label":"Manufacturing Library CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_manufacturing_library_cli","isEditable":false,"isEnabled":true,"name":"zigbee_manufacturing_library_cli","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_manufacturing_library_cli"},{"keyWords":"zigbee_manufacturing_library_ota","componentId":"zigbee_manufacturing_library_ota","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/manufacturing-library-ota","description":"Component for supporting manufacturing library commands over the air.","instantiable":false,"label":"Manufacturing Library Ota","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_manufacturing_library_ota","isEditable":false,"isEnabled":true,"name":"zigbee_manufacturing_library_ota","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_manufacturing_library_ota"},{"keyWords":"zigbee_multirail_demo","componentId":"zigbee_multirail_demo","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/multirail-demo","description":"This component provides the sample code for using dual RAIL instances. It includes a simple CLI to demonstrate the functionality.","instantiable":false,"label":"Multiple RAIL Demo Code","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_multirail_demo","isEditable":false,"isEnabled":true,"name":"zigbee_multirail_demo","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_multirail_demo"},{"keyWords":"zigbee_ncp_configuration","componentId":"zigbee_ncp_configuration","isConfigurable":true,"documentation":"","description":"This component controls how the Network Co-processor is configured.  It is only applicable to host-based applications (not SoC). Users of this component should make sure that their NCP can support the configuration values that are set here as configuration options. For more information regarding table size limits for the default released NCP binary application, see UG100: EZSP Reference Guide. To use an NCP with a different configuration, build an xNCP application using the NCP Application Framework.\n","instantiable":false,"label":"NCP Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_ncp_configuration","isEditable":false,"isEnabled":true,"name":"zigbee_ncp_configuration","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_ncp_configuration"},{"keyWords":"zigbee_packet_handoff","componentId":"zigbee_packet_handoff","isConfigurable":true,"documentation":"","description":"This component hooks directly into the stack and provides a mechanism to intercept packets and hand them off to other components as a flat buffer.  Required for components and applications implementing sl_zigbee_af_incoming_packet_filter_cb/sl_zigbee_af_outgoing_packet_filter_cb.","instantiable":false,"label":"Packet Handoff","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_packet_handoff","isEditable":false,"isEnabled":true,"name":"zigbee_packet_handoff","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_packet_handoff"},{"keyWords":"zigbee_permit_join_manager","componentId":"zigbee_permit_join_manager","isConfigurable":true,"documentation":"","description":"This component unicasts a permit joins message to joining devices.","instantiable":false,"label":"Permit Join Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_permit_join_manager","isEditable":false,"isEnabled":true,"name":"zigbee_permit_join_manager","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_permit_join_manager"},{"keyWords":"zigbee_security_support","componentId":"zigbee_security_support","isConfigurable":false,"documentation":"","description":"This component provides support for security, such as random number generation, on the Host.","instantiable":false,"label":"Security Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_security_support","isEditable":false,"isEnabled":true,"name":"zigbee_security_support","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_security_support"},{"keyWords":"zigbee_simple_clock","componentId":"zigbee_simple_clock","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/simple-clock","description":"Silicon Labs implementation of a simple clock. The component provides time keeping functionality to the framework and the application through implementations of both sl_zigbee_af_get_current_time_cb and sl_zigbee_af_set_time_cb.  When the application knows the current time (e.g., by reading the time attribute from a time server), it should call sl_zigbee_af_set_time to keep the component synchronized. The component is not a substitute for an accurate clock and is only intended for use during development.  Before production, this component should be replaced with code that provides more accurate time.","instantiable":false,"label":"Simple Clock","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_simple_clock","isEditable":false,"isEnabled":true,"name":"zigbee_simple_clock","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_simple_clock"},{"keyWords":"zigbee_sleepy_message_queue","componentId":"zigbee_sleepy_message_queue","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/sleepy-message-queue","description":"This component is a message buffering system used to store messages until they are retrieved or a settable message timeout expires.","instantiable":false,"label":"Sleepy Message Queue","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_sleepy_message_queue","isEditable":false,"isEnabled":true,"name":"zigbee_sleepy_message_queue","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_sleepy_message_queue"},{"keyWords":"zigbee_stack_diagnostics","componentId":"zigbee_stack_diagnostics","isConfigurable":true,"documentation":"","description":"CLI commands for printing various information about the stack, such as the child table, neighbor table, and routing table.","instantiable":false,"label":"Stack Diagnostics","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_stack_diagnostics","isEditable":false,"isEnabled":true,"name":"zigbee_stack_diagnostics","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_stack_diagnostics"},{"keyWords":"zigbee_token_interface","componentId":"zigbee_token_interface","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zigbee-token-interface","description":"This component provides token interface wrappers. This component can be used on an NCP node for the connected host to access the tokes using the APIs in this component.This component is useful for a NCP-Host backup and restore use-case where host reads and saves all the tokens from the connected NCP and restores back on a new NCP hardware.","instantiable":false,"label":"Stack Token Interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_token_interface","isEditable":false,"isEnabled":true,"name":"zigbee_token_interface","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_token_interface"},{"keyWords":"zigbee_strong_random_api_psa","componentId":"zigbee_strong_random_api_psa","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/strong-random-api-psa","description":"Provides APIs for generating cryptographically-strong random numbers using PSA Crypto integration.","instantiable":false,"label":"Strong Random Api (PSA)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_strong_random_api_psa","isEditable":false,"isEnabled":true,"name":"zigbee_strong_random_api_psa","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_strong_random_api_psa"},{"keyWords":"zigbee_strong_random_api_radio","componentId":"zigbee_strong_random_api_radio","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/strong-random-api-radio","description":"Provides APIs for generating cryptographically-strong random numbers using radio hardware.","instantiable":false,"label":"Strong Random Api (Radio)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_strong_random_api_radio","isEditable":false,"isEnabled":true,"name":"zigbee_strong_random_api_radio","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_strong_random_api_radio"},{"keyWords":"zigbee_throughput","componentId":"zigbee_throughput","isConfigurable":false,"documentation":"","description":"This component provides support both for generating traffic when doing coexistence testing, and for measuring network throughput. Packets are sent periodically on a CLI-programmable interval unless the packets-in-flight limit is exceeded.","instantiable":false,"label":"Throughput","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_throughput","isEditable":false,"isEnabled":true,"name":"zigbee_throughput","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_throughput"},{"keyWords":"zigbee_xmodem_sender","componentId":"zigbee_xmodem_sender","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/xmodem-sender","description":"Implements the sender side of the Xmodem-CRC protocol for either over-the-air messages or using the SPI/UART between host and NCP.","instantiable":false,"label":"Xmodem Sender","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_xmodem_sender","isEditable":false,"isEnabled":true,"name":"zigbee_xmodem_sender","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_xmodem_sender"},{"keyWords":"zcl_activator","componentId":"zcl_activator","isConfigurable":true,"documentation":"","description":"This is a placeholder component that activates the ZCL advanced configurator.","instantiable":false,"label":"ZCL Activator","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zcl_activator","isEditable":false,"isEnabled":true,"name":"zcl_activator","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zcl_activator"},{"keyWords":"zigbee_classic_key_storage","componentId":"zigbee_classic_key_storage","isConfigurable":false,"documentation":"","description":"This component will store keys in clear NVM3 tokens on the device. Note that storing keys in clear NVM3 tokens poses a security risk, whereby attackers can read flash contents and glean security keys. This component also provides crypto routines that operate on key values.","instantiable":false,"label":"Zigbee Classic Key Storage","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_classic_key_storage","isEditable":false,"isEnabled":true,"name":"zigbee_classic_key_storage","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_classic_key_storage"},{"keyWords":"zigbee_cluster_service","componentId":"zigbee_cluster_service","isConfigurable":false,"documentation":"","description":"This component is used to enable the cluster service mechanism.","instantiable":false,"label":"Zigbee Cluster Service","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_cluster_service","isEditable":false,"isEnabled":true,"name":"zigbee_cluster_service","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_cluster_service"},{"keyWords":"zigbee_core_cli","componentId":"zigbee_core_cli","isConfigurable":true,"documentation":"","description":"This component provides CLI commands for basic operations such as printing node information and messaging","instantiable":false,"label":"Zigbee Core CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_core_cli","isEditable":false,"isEnabled":true,"name":"zigbee_core_cli","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_core_cli"},{"keyWords":"zigbee_device_config","componentId":"zigbee_device_config","isConfigurable":true,"documentation":"","description":"This component is used for Zigbee device configuration.","instantiable":false,"label":"Zigbee Device Config","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_device_config","isEditable":false,"isEnabled":true,"name":"zigbee_device_config","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_device_config"},{"keyWords":"zigbee_enhanced_routing","componentId":"zigbee_enhanced_routing","isConfigurable":false,"documentation":"","description":"This component houses the start of the enhanced routing routines used in Zigbee R23.","instantiable":false,"label":"Zigbee Enhanced Routing With LQI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_enhanced_routing","isEditable":false,"isEnabled":true,"name":"zigbee_enhanced_routing","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_enhanced_routing"},{"keyWords":"zigbee_secure_key_storage","componentId":"zigbee_secure_key_storage","isConfigurable":false,"documentation":"","description":"This component will store keys in secure storage on the device by calling PSA APIs. This component also provides crypto routines that operate on PSA key identifiers rather than key values. For this component to be backwards compatible (current images wishing to move their security keys into secure storage), the Zigbee Secure Key Storage Upgrade component must be included as well (this component does not include it by default).","instantiable":false,"label":"Zigbee Secure Key Storage","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_secure_key_storage","isEditable":false,"isEnabled":true,"name":"zigbee_secure_key_storage","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_secure_key_storage"},{"keyWords":"zigbee_secure_key_storage_no_upgrade","componentId":"zigbee_secure_key_storage_no_upgrade","isConfigurable":false,"documentation":"","description":"This component exists to free up associated code space for builds that do not need the relevant backwards compatibility.\nFor developer who doesn't want to use Zigbee Secure Key Storage Upgrade by default can install this component.","instantiable":false,"label":"Zigbee Secure Key Storage No Upgrade","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_secure_key_storage_no_upgrade","isEditable":false,"isEnabled":true,"name":"zigbee_secure_key_storage_no_upgrade","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_secure_key_storage_no_upgrade"},{"keyWords":"zigbee_secure_key_storage_upgrade","componentId":"zigbee_secure_key_storage_upgrade","isConfigurable":false,"documentation":"","description":"This component is used to upgrade existing images currently using the legacy token-based key storage and wishing to move their security keys into secure storage.  The component only needs to be included if a device currently has keys stored using the Classic Key Storage component. Note that GSDK 4.1.0.0 and earlier always stored keys in plaintext (classic) key storage. This component will perform no action if the device's keys have already been moved to secure key storage.","instantiable":false,"label":"Zigbee Secure Key Storage Upgrade","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_secure_key_storage_upgrade","isEditable":false,"isEnabled":true,"name":"zigbee_secure_key_storage_upgrade","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_secure_key_storage_upgrade"},{"keyWords":"zigbee_security_manager","componentId":"zigbee_security_manager","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zigbee-security-manager","description":"The Zigbee Security Manager utility handles Zigbee-specific security functions, which include key management and certain security operations.","instantiable":false,"label":"Zigbee Security Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_security_manager","isEditable":false,"isEnabled":true,"name":"zigbee_security_manager","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_security_manager"},{"keyWords":"zigbee_security_manager_host","componentId":"zigbee_security_manager_host","isConfigurable":false,"documentation":"","description":"This component provides an implementation of the Zigbee Security Manager APIs for host application code. Calls to cryptographic APIs and usage of one-off keys will run on the host platform, while calls to access the non-generic key types (data and metadata) go to the NCP via EZSP.","instantiable":false,"label":"Zigbee Security Manager (Host)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_security_manager_host","isEditable":false,"isEnabled":true,"name":"zigbee_security_manager_host","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_security_manager_host"},{"keyWords":"zigbee_signature_decode","componentId":"zigbee_signature_decode","isConfigurable":false,"documentation":"","description":"This component provides the ZCL decoding functionality.","instantiable":false,"label":"Zigbee Signature Decode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_signature_decode","isEditable":false,"isEnabled":true,"name":"zigbee_signature_decode","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_signature_decode"},{"keyWords":"zigbee_system_common_app_framework","componentId":"zigbee_system_common_app_framework","isConfigurable":false,"documentation":"","description":"Subset of the common system component dealing with the application framework RTOS task.","instantiable":false,"label":"Zigbee System Common, Application Framework Task","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_system_common_app_framework","isEditable":false,"isEnabled":true,"name":"zigbee_system_common_app_framework","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_system_common_app_framework"},{"keyWords":"zigbee_zcl_cli","componentId":"zigbee_zcl_cli","isConfigurable":false,"documentation":"","description":"This component provides ZCL-related CLI commands","instantiable":false,"label":"Zigbee ZCL CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Utility|studiocomproot-Zigbee-Utility-zigbee_zcl_cli","isEditable":false,"isEnabled":true,"name":"zigbee_zcl_cli","isSelected":false,"id":"studiocomproot-Zigbee-Utility-zigbee_zcl_cli"}],"isEnabled":true,"name":"Utility","id":"studiocomproot-Zigbee-Utility","label":"Utility","type":"category"},{"children":[{"keyWords":"zigbee_ble_event_handler","componentId":"zigbee_ble_event_handler","isConfigurable":false,"documentation":"","description":"Sample Bluetooth LE (BLE) Event handler code for Zigbee-BLE DMP examples.","instantiable":false,"label":"BLE Event handler sample implementation","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_3.0|studiocomproot-Zigbee-Zigbee_3.0-zigbee_ble_event_handler","isEditable":false,"isEnabled":true,"name":"zigbee_ble_event_handler","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_3.0-zigbee_ble_event_handler"},{"keyWords":"zigbee_find_and_bind_initiator","componentId":"zigbee_find_and_bind_initiator","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/find-and-bind-initiator","description":"This component provides the functionality to find devices that are performing the find and bind process for a target, and then optionally attempts to create a binding to those devices.","instantiable":false,"label":"Find and Bind Initiator","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_3.0|studiocomproot-Zigbee-Zigbee_3.0-zigbee_find_and_bind_initiator","isEditable":false,"isEnabled":true,"name":"zigbee_find_and_bind_initiator","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_3.0-zigbee_find_and_bind_initiator"},{"keyWords":"zigbee_find_and_bind_target","componentId":"zigbee_find_and_bind_target","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/find-and-bind-target","description":"This component provides the functionality for a target device to start identifying on user-defined endpoints. The target device can then act as a target for a finding and binding initiator.","instantiable":false,"label":"Find and Bind Target","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_3.0|studiocomproot-Zigbee-Zigbee_3.0-zigbee_find_and_bind_target","isEditable":false,"isEnabled":true,"name":"zigbee_find_and_bind_target","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_3.0-zigbee_find_and_bind_target"},{"keyWords":"zigbee_update_ha_tc_link_key","componentId":"zigbee_update_ha_tc_link_key","isConfigurable":false,"documentation":"","description":"This component utilizes behavior defined in the specification, but not tested in compliance, to update the trust center link key of legacy HA devices. This component makes use of the Device Database component to be notified when a device joins the network of a trust center. When a node joins, this component checks the stack revision of the node. If the node's stack revision is not R21 or greater, the component forcefully updates the joining device's trust center link key via a Transport Key APS command. Note that this component is meant to be using on a trust center only (i.e., not on a joining device).","instantiable":false,"label":"HA Device Trust Center Link Key Update","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_3.0|studiocomproot-Zigbee-Zigbee_3.0-zigbee_update_ha_tc_link_key","isEditable":false,"isEnabled":true,"name":"zigbee_update_ha_tc_link_key","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_3.0-zigbee_update_ha_tc_link_key"},{"keyWords":"zigbee_network_creator","componentId":"zigbee_network_creator","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/network-creator","description":"This component performs the necessary steps to create a network according to the Base Device Behavior specification. The component performs an active scan followed by an energy scan across a primary channel set to decide which channel(s) are valid candidates for network formation. If the component fails to form a network on any primary channels, it moves to a secondary channel mask. Before every attempt at network formation, this component sets up the stack to use Zigbee 3.0 security.","instantiable":false,"label":"Network Creator","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_3.0|studiocomproot-Zigbee-Zigbee_3.0-zigbee_network_creator","isEditable":false,"isEnabled":true,"name":"zigbee_network_creator","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_3.0-zigbee_network_creator"},{"keyWords":"zigbee_network_creator_security","componentId":"zigbee_network_creator_security","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/network-creator-security","description":"This component performs the necessary security initialization to form a Zigbee 3.0-compliant network. To enable \"Allow Trust Center rejoin with well known key\", the \"sl_zigbee_xncp_security_trust_center_join_cb()\" function (on the NCP side) may need to be implemented. For more details about this callback function, see \"https//www.silabs.com/community/wireless/zigbee-and-thread/knowledge-base.entry.html/2018/12/26/how_to_allow_unsecur-sa3C\". If the link does not work, go to our community website and search \"How to allow unsecure rejoins on the Ember ZNet stack\".","instantiable":false,"label":"Network Creator Security","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_3.0|studiocomproot-Zigbee-Zigbee_3.0-zigbee_network_creator_security","isEditable":false,"isEnabled":true,"name":"zigbee_network_creator_security","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_3.0-zigbee_network_creator_security"},{"keyWords":"zigbee_network_steering","componentId":"zigbee_network_steering","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/network-steering","description":"This component performs the necessary steps to join the network of any Zigbee Profile.  It tries first to perform a join using an install code on the primary channel mask, and then the secondary channel mask. If that does not work it then tries to use the default well-known link key (ZigbeeAlliance09) to join on the primary channel mask, and then the secondary channel mask. Finally, if the previous two key types fail, the component tries to use the distributed security link key (D0D1D2...) to join on the primary channel mask, and then the secondary channel mask.","instantiable":false,"label":"Network Steering","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_3.0|studiocomproot-Zigbee-Zigbee_3.0-zigbee_network_steering","isEditable":false,"isEnabled":true,"name":"zigbee_network_steering","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_3.0-zigbee_network_steering"},{"keyWords":"ot_up_cli","componentId":"ot_up_cli","isConfigurable":false,"documentation":"","description":"OpenThread CLI using Silabs unified platform and CMSIS RTOS2","instantiable":false,"label":"OpenThread CLI using Silabs unified platform and CMSIS RTOS2","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_3.0|studiocomproot-Zigbee-Zigbee_3.0-ot_up_cli","isEditable":false,"isEnabled":true,"name":"ot_up_cli","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_3.0-ot_up_cli"},{"keyWords":"zigbee_update_tc_link_key","componentId":"zigbee_update_tc_link_key","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/update-tc-link-key","description":"This component provides the functionality to update the trust center link key of a device on a Zigbee R21+ network. The device also requests the trust center link key periodically if the trust center is pre-R21. After the trust center is upgraded to R21+, if not already R21+, the periodic request for a trust center link key update passes and the link key is updated.","instantiable":false,"label":"Update TC Link Key","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_3.0|studiocomproot-Zigbee-Zigbee_3.0-zigbee_update_tc_link_key","isEditable":false,"isEnabled":true,"name":"zigbee_update_tc_link_key","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_3.0-zigbee_update_tc_link_key"},{"keyWords":"zigbee_ble_dmp_cli","componentId":"zigbee_ble_dmp_cli","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/ble-dmp-cli","description":"Zigbee Bluetooth LE DMP Command Line Interface","instantiable":false,"label":"Zigbee BLE DMP Command Line Interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_3.0|studiocomproot-Zigbee-Zigbee_3.0-zigbee_ble_dmp_cli","isEditable":false,"isEnabled":true,"name":"zigbee_ble_dmp_cli","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_3.0-zigbee_ble_dmp_cli"},{"keyWords":"zigbee_display","componentId":"zigbee_display","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/dmp-ui","description":"DMP applications use this component to display graphics on the LCD.","instantiable":false,"label":"Zigbee LCD Display","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_3.0|studiocomproot-Zigbee-Zigbee_3.0-zigbee_display","isEditable":false,"isEnabled":true,"name":"zigbee_display","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_3.0-zigbee_display"}],"isEnabled":true,"name":"Zigbee 3.0","id":"studiocomproot-Zigbee-Zigbee_3.0","label":"Zigbee 3.0","type":"category"},{"children":[{"keyWords":"zigbee_direct_cli","componentId":"zigbee_direct_cli","isConfigurable":false,"documentation":"","description":"Zigbee Direct Command Line Interface","instantiable":false,"label":"Zigbee Direct Command Line Interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Direct_ZDD|studiocomproot-Zigbee-Zigbee_Direct_ZDD-zigbee_direct_cli","isEditable":false,"isEnabled":true,"name":"zigbee_direct_cli","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Direct_ZDD-zigbee_direct_cli"},{"keyWords":"zigbee_direct_zdd","componentId":"zigbee_direct_zdd","isConfigurable":true,"documentation":"","description":"Zigbee Direct Device Functionality","instantiable":false,"label":"Zigbee Direct Device Functionality","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Direct_ZDD|studiocomproot-Zigbee-Zigbee_Direct_ZDD-zigbee_direct_zdd","isEditable":false,"isEnabled":true,"name":"zigbee_direct_zdd","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Direct_ZDD-zigbee_direct_zdd"},{"keyWords":"zigbee_direct_security_curve25519","componentId":"zigbee_direct_security_curve25519","isConfigurable":true,"documentation":"","description":"Zigbee Direct Security using Curve25519","instantiable":false,"label":"Zigbee Direct Security Curve25519","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Direct_ZDD|studiocomproot-Zigbee-Zigbee_Direct_ZDD-zigbee_direct_security_curve25519","isEditable":false,"isEnabled":true,"name":"zigbee_direct_security_curve25519","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Direct_ZDD-zigbee_direct_security_curve25519"},{"keyWords":"zigbee_direct_security_p256","componentId":"zigbee_direct_security_p256","isConfigurable":true,"documentation":"","description":"Zigbee Direct Security using P256","instantiable":false,"label":"Zigbee Direct Security P256","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Direct_ZDD|studiocomproot-Zigbee-Zigbee_Direct_ZDD-zigbee_direct_security_p256","isEditable":false,"isEnabled":true,"name":"zigbee_direct_security_p256","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Direct_ZDD-zigbee_direct_security_p256"},{"keyWords":"zigbee_direct_tunneling","componentId":"zigbee_direct_tunneling","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zigbee-direct-tunneling","description":"Zigbee Direct Tunneling functionality","instantiable":false,"label":"Zigbee Direct Tunneling Functionality","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Direct_ZDD|studiocomproot-Zigbee-Zigbee_Direct_ZDD-zigbee_direct_tunneling","isEditable":false,"isEnabled":true,"name":"zigbee_direct_tunneling","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Direct_ZDD-zigbee_direct_tunneling"}],"isEnabled":true,"name":"Zigbee Direct ZDD","id":"studiocomproot-Zigbee-Zigbee_Direct_ZDD","label":"Zigbee Direct ZDD","type":"category"},{"children":[{"keyWords":"zigbee_zll_commissioning_client","componentId":"zigbee_zll_commissioning_client","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zll-commissioning-client","description":"Client-side implementation of the Zigbee 3.0 Touchlink commissioning. mechanism.","instantiable":false,"label":"ZLL Commissioning Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Light_Link|studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_commissioning_client","isEditable":false,"isEnabled":true,"name":"zigbee_zll_commissioning_client","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_commissioning_client"},{"keyWords":"zigbee_zll_commissioning_common","componentId":"zigbee_zll_commissioning_common","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zll-commissioning-common","description":"Common code for the Zigbee 3.0 Touchlink commissioning mechanism. This component is required for both server and client side implementations.","instantiable":false,"label":"ZLL Commissioning Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Light_Link|studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_commissioning_common","isEditable":false,"isEnabled":true,"name":"zigbee_zll_commissioning_common","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_commissioning_common"},{"keyWords":"zigbee_zll_commissioning_network","componentId":"zigbee_zll_commissioning_network","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zll-commissioning-network","description":"(NOTE This component is deprecated as it is not compliant with Zigbee 3.0 requirements. See Network Creator and Network Steering components instead for Zigbee 3.0-compliant implementations of this behavior.) Provides legacy Zigbee Light Link 1.0 implementation of routines for finding and joining any viable network via scanning, rather than joining a specific network.","instantiable":false,"label":"ZLL Commissioning Network","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Light_Link|studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_commissioning_network","isEditable":false,"isEnabled":true,"name":"zigbee_zll_commissioning_network","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_commissioning_network"},{"keyWords":"zigbee_zll_commissioning_server","componentId":"zigbee_zll_commissioning_server","isConfigurable":true,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zll-commissioning-server","description":"Server-side implementation of the Zigbee 3.0 Touchlink commissioning mechanism.","instantiable":false,"label":"ZLL Commissioning Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Light_Link|studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_commissioning_server","isEditable":false,"isEnabled":true,"name":"zigbee_zll_commissioning_server","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_commissioning_server"},{"keyWords":"zigbee_zll_identify_server","componentId":"zigbee_zll_identify_server","isConfigurable":true,"documentation":"","description":"Silicon Labs implementation of the original Zigbee Light Link profile enhancements to the Identify server cluster. The component is only intended to assist with debugging, as the implemented callbacks simply parse requests from the Identify client and blink LEDs. Before production, this component should be replaced with code that acts on the requests in an appropriate way. Note that the extensions do not now require Touchlink commissioning to be used, and that the commands may now be required by other device types, such as Lighting and Occupancy.","instantiable":false,"label":"ZLL Identify Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Light_Link|studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_identify_server","isEditable":false,"isEnabled":true,"name":"zigbee_zll_identify_server","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_identify_server"},{"keyWords":"zigbee_zll_level_control_server","componentId":"zigbee_zll_level_control_server","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zll-level-control-server","description":"Silicon Labs implementation of the original Zigbee Light Link profile enhancements to the Level Control server cluster. The component is only intended to assist with debugging, as the implemented callbacks simply parse requests from the Identify client and blink LEDs. Before production, this component should be replaced with code that acts on the requests in an appropriate way. Note that the extensions do not now require Touchlink commissioning to be used, and that the commands may now be required by other device types, such as Lighting and Occupancy.","instantiable":false,"label":"ZLL Level Control Server Cluster Enhancements","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Light_Link|studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_level_control_server","isEditable":false,"isEnabled":true,"name":"zigbee_zll_level_control_server","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_level_control_server"},{"keyWords":"zigbee_zll_on_off_server","componentId":"zigbee_zll_on_off_server","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zll-on-off-server","description":"Silicon Labs implementation of the original Zigbee Light Link profile enhancements to the On/Off server cluster. The component is only intended to assist with debugging, as the implemented callbacks simply parse requests from the Identify client and blink LEDs. Before production, this component should be replaced with code that acts on the requests in an appropriate way. Note that the extensions do not now require Touchlink commissioning to be used, and that the commands may now be required by other device types, such as Lighting and Occupancy.","instantiable":false,"label":"ZLL On/Off Server Cluster Enhancements","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Light_Link|studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_on_off_server","isEditable":false,"isEnabled":true,"name":"zigbee_zll_on_off_server","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_on_off_server"},{"keyWords":"zigbee_zll_scenes_client","componentId":"zigbee_zll_scenes_client","isConfigurable":false,"documentation":"","description":"Silicon Labs implementation of the original Zigbee Light Link profile enhancements to the Scenes client cluster. The component is only intended to assist with debugging, as the implemented callbacks simply parse requests from the Identify client and blink LEDs. Before production, this component should be replaced with code that acts on the requests in an appropriate way. Note that the extensions do not now require Touchlink commissioning to be used, and that the commands may now be required by other device types, such as Lighting and Occupancy.","instantiable":false,"label":"ZLL Scenes Client Cluster Enhancements","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Light_Link|studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_scenes_client","isEditable":false,"isEnabled":true,"name":"zigbee_zll_scenes_client","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_scenes_client"},{"keyWords":"zigbee_zll_scenes_server","componentId":"zigbee_zll_scenes_server","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zll-scenes-server","description":"Silicon Labs implementation of the original Zigbee Light Link profile enhancements to the Scenes server cluster.  The component is only intended to assist with debugging, as the implemented callbacks simply parse requests from the Identify client and blink LEDs. Before production, this component should be replaced with code that acts on the requests in an appropriate way. Note that the extensions do not now require Touchlink commissioning to be used, and that the commands may now be required by other device types, such as Lighting and Occupancy.","instantiable":false,"label":"ZLL Scenes Server Cluster Enhancements","type":"component","quality":"EVALUATION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Light_Link|studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_scenes_server","isEditable":false,"isEnabled":true,"name":"zigbee_zll_scenes_server","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_scenes_server"},{"keyWords":"zigbee_zll_utility_client","componentId":"zigbee_zll_utility_client","isConfigurable":false,"documentation":"","description":"Silicon Labs implementation of the ZLL Utility client cluster. The component is only intended to assist with debugging, as the implemented callbacks simply parse responses from the ZLL Utility server and print the results. Before production, this component should be replaced with code that acts on the responses in an appropriate way.","instantiable":false,"label":"ZLL Utility Client Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Light_Link|studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_utility_client","isEditable":false,"isEnabled":true,"name":"zigbee_zll_utility_client","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_utility_client"},{"keyWords":"zigbee_zll_utility_server","componentId":"zigbee_zll_utility_server","isConfigurable":false,"documentation":"","description":"Silicon Labs implementation of the ZLL Utility server cluster.","instantiable":false,"label":"ZLL Utility Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-Zigbee_Light_Link|studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_utility_server","isEditable":false,"isEnabled":true,"name":"zigbee_zll_utility_server","isSelected":false,"id":"studiocomproot-Zigbee-Zigbee_Light_Link-zigbee_zll_utility_server"}],"isEnabled":true,"name":"Zigbee Light Link","id":"studiocomproot-Zigbee-Zigbee_Light_Link","label":"Zigbee Light Link","type":"category"},{"keyWords":"zigbee_force_sleep_and_wakeup","componentId":"zigbee_force_sleep_and_wakeup","isConfigurable":false,"documentation":"","description":"Component to force device to sleep and wake up","instantiable":false,"label":"Force sleep and wake up","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_force_sleep_and_wakeup","isEditable":false,"isEnabled":true,"name":"zigbee_force_sleep_and_wakeup","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_force_sleep_and_wakeup"},{"keyWords":"zigbee_host_framework_common","componentId":"zigbee_host_framework_common","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/host-framework-common","description":"This component declares all the required application framework globals, initializes the Zigbee stack and dispatches stack callbacks calls as needed to the application components.","instantiable":false,"label":"Host Framework Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_host_framework_common","isEditable":false,"isEnabled":true,"name":"zigbee_host_framework_common","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_host_framework_common"},{"keyWords":"zigbee_arm32","componentId":"zigbee_arm32","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/arm32","description":"This plugin contains defines to build Zigbee apps against ARM32.","instantiable":false,"label":"Zigbee ARM32","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_arm32","isEditable":false,"isEnabled":true,"name":"zigbee_arm32","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_arm32"},{"keyWords":"zigbee_aarch64_android_ndk_r25c","componentId":"zigbee_aarch64_android_ndk_r25c","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/aarch64_ndk_r25c","description":"This plugin contains defines to build Zigbee apps against ARM64, with Android r25c NDK.","instantiable":false,"label":"Zigbee ARM64","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_aarch64_android_ndk_r25c","isEditable":false,"isEnabled":true,"name":"zigbee_aarch64_android_ndk_r25c","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_aarch64_android_ndk_r25c"},{"keyWords":"zigbee_arm7l_tizen_13_1_gcc_9_2","componentId":"zigbee_arm7l_tizen_13_1_gcc_9_2","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/arm32_ndk","description":"This plugin contains defines to build Zigbee apps against ARM32, with gcc 9.2 soft floating point (tizen-0.1-13.1).","instantiable":false,"label":"Zigbee ARM64","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_arm7l_tizen_13_1_gcc_9_2","isEditable":false,"isEnabled":true,"name":"zigbee_arm7l_tizen_13_1_gcc_9_2","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_arm7l_tizen_13_1_gcc_9_2"},{"keyWords":"zigbee_aarch64_cortex_a72_gcc_12_3_0_musl","componentId":"zigbee_aarch64_cortex_a72_gcc_12_3_0_musl","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/aarch64_cortex_a72_gcc_12_3_0_musl","description":"This plugin contains defines to build Zigbee apps against ARM64.","instantiable":false,"label":"Zigbee ARM64","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_aarch64_cortex_a72_gcc_12_3_0_musl","isEditable":false,"isEnabled":true,"name":"zigbee_aarch64_cortex_a72_gcc_12_3_0_musl","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_aarch64_cortex_a72_gcc_12_3_0_musl"},{"keyWords":"zigbee_aarch64_tizen_13_1_gcc_9_2","componentId":"zigbee_aarch64_tizen_13_1_gcc_9_2","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/aarch64_ndk","description":"This plugin contains defines to build Zigbee apps against ARM64, with gcc 9.2 soft floating point (tizen-0.1-13.1).","instantiable":false,"label":"Zigbee ARM64","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_aarch64_tizen_13_1_gcc_9_2","isEditable":false,"isEnabled":true,"name":"zigbee_aarch64_tizen_13_1_gcc_9_2","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_aarch64_tizen_13_1_gcc_9_2"},{"keyWords":"zigbee_arm64","componentId":"zigbee_arm64","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/arm64","description":"This plugin contains defines to build Zigbee apps against ARM64.","instantiable":false,"label":"Zigbee ARM64","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_arm64","isEditable":false,"isEnabled":true,"name":"zigbee_arm64","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_arm64"},{"keyWords":"zigbee_ipc","componentId":"zigbee_ipc","isConfigurable":false,"documentation":"","description":"This component adds support for interprocess communication on a Zigbee RTOS device.\n","instantiable":false,"label":"Zigbee IPC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_ipc","isEditable":false,"isEnabled":true,"name":"zigbee_ipc","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_ipc"},{"keyWords":"zigbee_security_manager_dlk_ecc","componentId":"zigbee_security_manager_dlk_ecc","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/zigbee-security-manager-ecc","description":"The Zigbee Security Manager utility handles Zigbee-specific security functions. This optional component includes the necessary crypto operations needed to perform ECDHE and SPEKE key negotiation procedures for Dynamic Link Key Negotiation.","instantiable":false,"label":"Zigbee Security Manager Dynamic Link Key support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_security_manager_dlk_ecc","isEditable":false,"isEnabled":true,"name":"zigbee_security_manager_dlk_ecc","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_security_manager_dlk_ecc"},{"keyWords":"zigbee_stack_unix","componentId":"zigbee_stack_unix","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/linux","description":"This plugin contains defines, source files, and include paths to build Zigbee apps against Linux.","instantiable":false,"label":"Zigbee Stack Unix","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_stack_unix","isEditable":false,"isEnabled":true,"name":"zigbee_stack_unix","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_stack_unix"},{"keyWords":"zigbee_stack_unix_library","componentId":"zigbee_stack_unix_library","isConfigurable":false,"documentation":"","description":"This plugin contains the required provides to build Zigbee apps against Unix.","instantiable":false,"label":"Zigbee Stack Unix Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_stack_unix_library","isEditable":false,"isEnabled":true,"name":"zigbee_stack_unix_library","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_stack_unix_library"},{"keyWords":"zigbee_i386","componentId":"zigbee_i386","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/i386","description":"This plugin contains defines to build Zigbee apps against i386.","instantiable":false,"label":"Zigbee i386","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_i386","isEditable":false,"isEnabled":true,"name":"zigbee_i386","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_i386"},{"keyWords":"zigbee_x86_64","componentId":"zigbee_x86_64","isConfigurable":false,"documentation":"http://docs.silabs.com/zigbee/8.1.0/zigbee-af-api/x86_64","description":"This plugin contains defines to build Zigbee apps against x86_64.","instantiable":false,"label":"Zigbee x86_64","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_x86_64","isEditable":false,"isEnabled":true,"name":"zigbee_x86_64","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_x86_64"},{"keyWords":"zigbee_high_datarate_phy","componentId":"zigbee_high_datarate_phy","isConfigurable":false,"documentation":"","description":"Provides transmit API and receive callback for high-datarate phy and limited CLI to aid testing of the rail_util_ieee802154_high_speed feature","instantiable":false,"label":"zigbee_high_datarate_phy","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","path":"studiocomproot-Zigbee|studiocomproot-Zigbee-zigbee_high_datarate_phy","isEditable":false,"isEnabled":true,"name":"zigbee_high_datarate_phy","isSelected":false,"id":"studiocomproot-Zigbee-zigbee_high_datarate_phy"}],"isEnabled":true,"name":"Zigbee","id":"studiocomproot-Zigbee","label":"Zigbee","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-aiml%ml_audio_feature_generation","componentId":"%extension-aiml%ml_audio_feature_generation","isConfigurable":true,"documentation":"","description":"The audio feature generator can be used to extract mel-flterbank features from an audio signal for use with machine learning audio classification applications. The microphone is used as an audio source and the features are calculated in real time.\n","instantiable":false,"label":"Audio Feature Generator","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"aiml:2.0.0-Machine_Learning|aiml:2.0.0-Machine_Learning-Feature_Generator|aiml:2.0.0-Machine_Learning-Feature_Generator-%extension-aiml%ml_audio_feature_generation","isEditable":false,"isEnabled":false,"name":"%extension-aiml%ml_audio_feature_generation","isSelected":false,"id":"aiml:2.0.0-Machine_Learning-Feature_Generator-%extension-aiml%ml_audio_feature_generation"}],"isEnabled":false,"name":"Feature Generator","id":"aiml:2.0.0-Machine_Learning-Feature_Generator","label":"Feature Generator","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-aiml%tensorflow_debug_log_none","componentId":"%extension-aiml%tensorflow_debug_log_none","isConfigurable":false,"documentation":"","description":"This component disables debug logging in TensorFlow Lite Micro.\n","instantiable":false,"label":"Debug Logging Disabled","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"aiml:2.0.0-Machine_Learning|aiml:2.0.0-Machine_Learning-TensorFlow|aiml:2.0.0-Machine_Learning-TensorFlow-Debug|aiml:2.0.0-Machine_Learning-TensorFlow-Debug-%extension-aiml%tensorflow_debug_log_none","isEditable":false,"isEnabled":false,"name":"%extension-aiml%tensorflow_debug_log_none","isSelected":false,"id":"aiml:2.0.0-Machine_Learning-TensorFlow-Debug-%extension-aiml%tensorflow_debug_log_none"},{"keyWords":"%extension-aiml%tensorflow_debug_log_iostream","componentId":"%extension-aiml%tensorflow_debug_log_iostream","isConfigurable":false,"documentation":"","description":"This component enables debug logging in TensorFlow Lite Micro and provides an implementation using IO Stream.\n","instantiable":false,"label":"Debug Logging using IO Stream","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"aiml:2.0.0-Machine_Learning|aiml:2.0.0-Machine_Learning-TensorFlow|aiml:2.0.0-Machine_Learning-TensorFlow-Debug|aiml:2.0.0-Machine_Learning-TensorFlow-Debug-%extension-aiml%tensorflow_debug_log_iostream","isEditable":false,"isEnabled":false,"name":"%extension-aiml%tensorflow_debug_log_iostream","isSelected":false,"id":"aiml:2.0.0-Machine_Learning-TensorFlow-Debug-%extension-aiml%tensorflow_debug_log_iostream"}],"isEnabled":false,"name":"Debug","id":"aiml:2.0.0-Machine_Learning-TensorFlow-Debug","label":"Debug","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-aiml%tensorflow_lite_micro_optimized_kernels","componentId":"%extension-aiml%tensorflow_lite_micro_optimized_kernels","isConfigurable":false,"documentation":"","description":"This component includes kernel implementations that are optimized for certain CPU architectures using CMSIS-NN. By including this component, the optimized kernel implementations will be used instead of the reference kernels.\nThe kernels which have optimized implementations are: add, conv, depthwise_conv, fully_connected, mul, pooling and softmax. Remaining kernels fall back to using the reference kernel implementations.\n","instantiable":false,"label":"CMSIS-NN Optimized Kernels","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"aiml:2.0.0-Machine_Learning|aiml:2.0.0-Machine_Learning-TensorFlow|aiml:2.0.0-Machine_Learning-TensorFlow-Kernels|aiml:2.0.0-Machine_Learning-TensorFlow-Kernels-%extension-aiml%tensorflow_lite_micro_optimized_kernels","isEditable":false,"isEnabled":false,"name":"%extension-aiml%tensorflow_lite_micro_optimized_kernels","isSelected":false,"id":"aiml:2.0.0-Machine_Learning-TensorFlow-Kernels-%extension-aiml%tensorflow_lite_micro_optimized_kernels"},{"keyWords":"%extension-aiml%tensorflow_lite_micro_accelerated_kernels","componentId":"%extension-aiml%tensorflow_lite_micro_accelerated_kernels","isConfigurable":false,"documentation":"","description":"This component includes kernel implementations that are accelerated using the MVP accelerator on compatible devices. By including this component, the MVP kernel implementations will be used instead of the optimized kernels.\nThe kernels which have MVP accelerated implementations are: pooling, fully_connected, add, conv, depthwise_conv and transpose_conv. Remaining kernels fall back to using optimized or reference kernel implementations.\n","instantiable":false,"label":"MVPv1 Accelerated Kernels","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"aiml:2.0.0-Machine_Learning|aiml:2.0.0-Machine_Learning-TensorFlow|aiml:2.0.0-Machine_Learning-TensorFlow-Kernels|aiml:2.0.0-Machine_Learning-TensorFlow-Kernels-%extension-aiml%tensorflow_lite_micro_accelerated_kernels","isEditable":false,"isEnabled":false,"name":"%extension-aiml%tensorflow_lite_micro_accelerated_kernels","isSelected":false,"id":"aiml:2.0.0-Machine_Learning-TensorFlow-Kernels-%extension-aiml%tensorflow_lite_micro_accelerated_kernels"},{"keyWords":"%extension-aiml%tensorflow_lite_micro_reference_kernels","componentId":"%extension-aiml%tensorflow_lite_micro_reference_kernels","isConfigurable":false,"documentation":"","description":"This component includes the available reference kernel implementations used with TensorFlow Lite for Microcontrollers. The reference kernels are pure C/C++ implementations, and do not include any platform-specific optimizations.\nIf any other kernel implementation components are included in the project, each included kernel will replace the corresponding reference kernel implementation.\n","instantiable":false,"label":"Reference Kernels","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"aiml:2.0.0-Machine_Learning|aiml:2.0.0-Machine_Learning-TensorFlow|aiml:2.0.0-Machine_Learning-TensorFlow-Kernels|aiml:2.0.0-Machine_Learning-TensorFlow-Kernels-%extension-aiml%tensorflow_lite_micro_reference_kernels","isEditable":false,"isEnabled":false,"name":"%extension-aiml%tensorflow_lite_micro_reference_kernels","isSelected":false,"id":"aiml:2.0.0-Machine_Learning-TensorFlow-Kernels-%extension-aiml%tensorflow_lite_micro_reference_kernels"}],"isEnabled":false,"name":"Kernels","id":"aiml:2.0.0-Machine_Learning-TensorFlow-Kernels","label":"Kernels","type":"category"},{"keyWords":"%extension-aiml%tensorflow_lite_micro","componentId":"%extension-aiml%tensorflow_lite_micro","isConfigurable":true,"documentation":"","description":"This component provides TensorFlow Lite for Microcontrollers, a set of tools designed to run machine-learning models on microcontrollers. Git commit 02414075e7f718a2d0412775fcadbf28fb4cc5aa of tflite-micro is used.\nBy default, this component attempts to include kernel implementations which are optimized for the given hardware. To use the reference software implementations, ensure that only the \"TensorFlow Lite Micro Reference Kernels\" component is added to your project.\nDebug Logging is provided by default using IO Stream. To disable debug logging, include the \"TensorFlow Lite Micro Debug Log None\" component to the project.\nNote that this component adds TensorFlow compatible versions of CMSIS NN and CMSIS DSP to the project. To avoid conflicts, these libraries should not be included elsewhere in the project.\n","instantiable":false,"label":"TensorFlow Lite Micro","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"aiml:2.0.0-Machine_Learning|aiml:2.0.0-Machine_Learning-TensorFlow|aiml:2.0.0-Machine_Learning-TensorFlow-%extension-aiml%tensorflow_lite_micro","isEditable":false,"isEnabled":false,"name":"%extension-aiml%tensorflow_lite_micro","isSelected":false,"id":"aiml:2.0.0-Machine_Learning-TensorFlow-%extension-aiml%tensorflow_lite_micro"}],"isEnabled":false,"name":"TensorFlow","id":"aiml:2.0.0-Machine_Learning-TensorFlow","label":"TensorFlow","type":"category"}],"isEnabled":false,"name":"Machine Learning","id":"aiml:2.0.0-Machine_Learning","label":"Machine Learning","type":"category"}],"isEnabled":false,"name":"aiml","description":"AI/ML extension for Simplicity SDK\n","compatibilty":{"conflictId":null,"isCompatible":true,"hasExtensionUpgrade":false},"id":"aiml:2.0.0","label":"AI/ML - Alpha v2.0.0","type":"SDKExtensionNode","version":"2.0.0"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_dishwasher_alarm","componentId":"%extension-matter%matter_dishwasher_alarm","isConfigurable":false,"documentation":"","description":"Implementation of the Dishwasher Alarm Server Cluster. The user has to enable the Dishwasher Alarm Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Dishwasher Alarm Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Appliances|matter:2.5.0-Clusters-Appliances-%extension-matter%matter_dishwasher_alarm","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_dishwasher_alarm","isSelected":false,"id":"matter:2.5.0-Clusters-Appliances-%extension-matter%matter_dishwasher_alarm"},{"keyWords":"%extension-matter%matter_laundry_dryer_controls","componentId":"%extension-matter%matter_laundry_dryer_controls","isConfigurable":false,"documentation":"","description":"Implementation of the Laundry Dryer Controls Server Cluster. The user has to enable the Laundry Dryer Controls Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Laundry Dryer Controls Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Appliances|matter:2.5.0-Clusters-Appliances-%extension-matter%matter_laundry_dryer_controls","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_laundry_dryer_controls","isSelected":false,"id":"matter:2.5.0-Clusters-Appliances-%extension-matter%matter_laundry_dryer_controls"},{"keyWords":"%extension-matter%matter_microwave_oven_control","componentId":"%extension-matter%matter_microwave_oven_control","isConfigurable":false,"documentation":"","description":"Implementation of the Microwave Oven Control Server Cluster. The user has to enable the Microwave Oven Control Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Microwave Oven Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Appliances|matter:2.5.0-Clusters-Appliances-%extension-matter%matter_microwave_oven_control","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_microwave_oven_control","isSelected":false,"id":"matter:2.5.0-Clusters-Appliances-%extension-matter%matter_microwave_oven_control"},{"keyWords":"%extension-matter%matter_refrigerator_alarm","componentId":"%extension-matter%matter_refrigerator_alarm","isConfigurable":false,"documentation":"","description":"Implementation of the Refrigerator Alarm Server Cluster. The user has to enable the Refrigerator Alarm Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Refrigerator Alarm Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Appliances|matter:2.5.0-Clusters-Appliances-%extension-matter%matter_refrigerator_alarm","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_refrigerator_alarm","isSelected":false,"id":"matter:2.5.0-Clusters-Appliances-%extension-matter%matter_refrigerator_alarm"},{"keyWords":"%extension-matter%matter_temperature_control","componentId":"%extension-matter%matter_temperature_control","isConfigurable":false,"documentation":"","description":"Implementation of the Temperature Control Server Cluster. The user has to enable the Temperature Control Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Temperature Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Appliances|matter:2.5.0-Clusters-Appliances-%extension-matter%matter_temperature_control","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_temperature_control","isSelected":false,"id":"matter:2.5.0-Clusters-Appliances-%extension-matter%matter_temperature_control"}],"isEnabled":false,"name":"Appliances","id":"matter:2.5.0-Clusters-Appliances","label":"Appliances","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_basic_information","componentId":"%extension-matter%matter_basic_information","isConfigurable":false,"documentation":"","description":"Implementation of the Basic Information Cluster. The user has to enable the Basic Information Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Basic Information Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-CHIP|matter:2.5.0-Clusters-CHIP-%extension-matter%matter_basic_information","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_basic_information","isSelected":false,"id":"matter:2.5.0-Clusters-CHIP-%extension-matter%matter_basic_information"},{"keyWords":"%extension-matter%matter_bridged_device_basic_information","componentId":"%extension-matter%matter_bridged_device_basic_information","isConfigurable":false,"documentation":"","description":"Implementation of the Bridged Device Basic Information Server Cluster. The user has to enable the Bridged Device Basic Information Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Bridged Device Basic Information Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-CHIP|matter:2.5.0-Clusters-CHIP-%extension-matter%matter_bridged_device_basic_information","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_bridged_device_basic_information","isSelected":false,"id":"matter:2.5.0-Clusters-CHIP-%extension-matter%matter_bridged_device_basic_information"},{"keyWords":"%extension-matter%matter_diagnostic_logs","componentId":"%extension-matter%matter_diagnostic_logs","isConfigurable":false,"documentation":"","description":"Implementation of the Diagnostic Logs Server Cluster. The user has to enable the Diagnostic Logs Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Diagnostic Logs Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-CHIP|matter:2.5.0-Clusters-CHIP-%extension-matter%matter_diagnostic_logs","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_diagnostic_logs","isSelected":false,"id":"matter:2.5.0-Clusters-CHIP-%extension-matter%matter_diagnostic_logs"},{"keyWords":"%extension-matter%matter_fault_injection","componentId":"%extension-matter%matter_fault_injection","isConfigurable":false,"documentation":"","description":"Implementation of the Fault Injection Server Cluster. The user has to enable the Fault Injection Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Fault Injection Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-CHIP|matter:2.5.0-Clusters-CHIP-%extension-matter%matter_fault_injection","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_fault_injection","isSelected":false,"id":"matter:2.5.0-Clusters-CHIP-%extension-matter%matter_fault_injection"},{"keyWords":"%extension-matter%matter_network_commissioning","componentId":"%extension-matter%matter_network_commissioning","isConfigurable":false,"documentation":"","description":"Implementation of the Network Commissioning Cluster. The user has to enable the Network Commissioning Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Network Commissioning Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-CHIP|matter:2.5.0-Clusters-CHIP-%extension-matter%matter_network_commissioning","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_network_commissioning","isSelected":false,"id":"matter:2.5.0-Clusters-CHIP-%extension-matter%matter_network_commissioning"},{"keyWords":"%extension-matter%matter_ota_provider","componentId":"%extension-matter%matter_ota_provider","isConfigurable":false,"documentation":"","description":"Implementation of the OTA Software Update Provider Cluster. The user has to enable the OTA Software Update Provider Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"OTA Software Update Provider Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-CHIP|matter:2.5.0-Clusters-CHIP-%extension-matter%matter_ota_provider","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_ota_provider","isSelected":false,"id":"matter:2.5.0-Clusters-CHIP-%extension-matter%matter_ota_provider"},{"keyWords":"%extension-matter%matter_ota_requestor","componentId":"%extension-matter%matter_ota_requestor","isConfigurable":false,"documentation":"","description":"Implementation of the OTA Software Update Requestor Cluster. The user has to enable the OTA Software Update Requestor Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"OTA Software Update Requestor Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-CHIP|matter:2.5.0-Clusters-CHIP-%extension-matter%matter_ota_requestor","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_ota_requestor","isSelected":false,"id":"matter:2.5.0-Clusters-CHIP-%extension-matter%matter_ota_requestor"},{"keyWords":"%extension-matter%matter_power_source_configuration","componentId":"%extension-matter%matter_power_source_configuration","isConfigurable":false,"documentation":"","description":"Implementation of the Power Source Configuration Server Cluster. The user has to enable the Power Source Configuration Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Power Source Configuration Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-CHIP|matter:2.5.0-Clusters-CHIP-%extension-matter%matter_power_source_configuration","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_power_source_configuration","isSelected":false,"id":"matter:2.5.0-Clusters-CHIP-%extension-matter%matter_power_source_configuration"},{"keyWords":"%extension-matter%matter_power_source","componentId":"%extension-matter%matter_power_source","isConfigurable":false,"documentation":"","description":"Implementation of the Power Source Server Cluster. The user has to enable the Power Source Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Power Source Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-CHIP|matter:2.5.0-Clusters-CHIP-%extension-matter%matter_power_source","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_power_source","isSelected":false,"id":"matter:2.5.0-Clusters-CHIP-%extension-matter%matter_power_source"},{"keyWords":"%extension-matter%matter_switch","componentId":"%extension-matter%matter_switch","isConfigurable":false,"documentation":"","description":"Implementation of the Switch Server Cluster. The user has to enable the Switch Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Switch Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-CHIP|matter:2.5.0-Clusters-CHIP-%extension-matter%matter_switch","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_switch","isSelected":false,"id":"matter:2.5.0-Clusters-CHIP-%extension-matter%matter_switch"},{"keyWords":"%extension-matter%matter_test_cluster","componentId":"%extension-matter%matter_test_cluster","isConfigurable":false,"documentation":"","description":"Implementation of the Unit Testing Server Cluster. The user has to enable the Unit Testing Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Unit Testing Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-CHIP|matter:2.5.0-Clusters-CHIP-%extension-matter%matter_test_cluster","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_test_cluster","isSelected":false,"id":"matter:2.5.0-Clusters-CHIP-%extension-matter%matter_test_cluster"}],"isEnabled":false,"name":"CHIP","id":"matter:2.5.0-Clusters-CHIP","label":"CHIP","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_door_lock","componentId":"%extension-matter%matter_door_lock","isConfigurable":false,"documentation":"","description":"Implementation of the Door Lock Server Cluster. The user has to enable the Door Lock Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Door Lock Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Closures|matter:2.5.0-Clusters-Closures-%extension-matter%matter_door_lock","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_door_lock","isSelected":false,"id":"matter:2.5.0-Clusters-Closures-%extension-matter%matter_door_lock"},{"keyWords":"%extension-matter%matter_window_covering","componentId":"%extension-matter%matter_window_covering","isConfigurable":false,"documentation":"","description":"Implementation of the Window Covering Server Cluster. The user has to enable the Window Covering Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Window Covering Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Closures|matter:2.5.0-Clusters-Closures-%extension-matter%matter_window_covering","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_window_covering","isSelected":false,"id":"matter:2.5.0-Clusters-Closures-%extension-matter%matter_window_covering"}],"isEnabled":false,"name":"Closures","id":"matter:2.5.0-Clusters-Closures","label":"Closures","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_device_energy_management","componentId":"%extension-matter%matter_device_energy_management","isConfigurable":false,"documentation":"","description":"Implementation of the Device Energy Management Server Cluster. The user has to enable the Device Energy Management Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Device Energy Management Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Energy_Management|matter:2.5.0-Clusters-Energy_Management-%extension-matter%matter_device_energy_management","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_device_energy_management","isSelected":false,"id":"matter:2.5.0-Clusters-Energy_Management-%extension-matter%matter_device_energy_management"},{"keyWords":"%extension-matter%matter_energy_evse","componentId":"%extension-matter%matter_energy_evse","isConfigurable":false,"documentation":"","description":"Implementation of the Energy EVSE Server Cluster. The user has to enable the Energy EVSE Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Energy EVSE Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Energy_Management|matter:2.5.0-Clusters-Energy_Management-%extension-matter%matter_energy_evse","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_energy_evse","isSelected":false,"id":"matter:2.5.0-Clusters-Energy_Management-%extension-matter%matter_energy_evse"},{"keyWords":"%extension-matter%matter_energy_preference","componentId":"%extension-matter%matter_energy_preference","isConfigurable":false,"documentation":"","description":"Implementation of the Energy Preference Server Cluster. The user has to enable the Energy Preference Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Energy Preference Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Energy_Management|matter:2.5.0-Clusters-Energy_Management-%extension-matter%matter_energy_preference","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_energy_preference","isSelected":false,"id":"matter:2.5.0-Clusters-Energy_Management-%extension-matter%matter_energy_preference"},{"keyWords":"%extension-matter%matter_water_heater_management","componentId":"%extension-matter%matter_water_heater_management","isConfigurable":false,"documentation":"","description":"Implementation of the Water Heater Management Server Cluster. The user has to enable the Water Heater Management Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Water Heater Management Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Energy_Management|matter:2.5.0-Clusters-Energy_Management-%extension-matter%matter_water_heater_management","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_water_heater_management","isSelected":false,"id":"matter:2.5.0-Clusters-Energy_Management-%extension-matter%matter_water_heater_management"}],"isEnabled":false,"name":"Energy Management","id":"matter:2.5.0-Clusters-Energy_Management","label":"Energy Management","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_access_control","componentId":"%extension-matter%matter_access_control","isConfigurable":false,"documentation":"","description":"Implementation of the Access Control Server Cluster. The user has to enable the Access Control Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Access Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_access_control","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_access_control","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_access_control"},{"keyWords":"%extension-matter%matter_administrator_commissioning","componentId":"%extension-matter%matter_administrator_commissioning","isConfigurable":false,"documentation":"","description":"Implementation of the Administrator Commissioning Server Cluster. The user has to enable the Administrator Commissioning Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Administrator Commissioning Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_administrator_commissioning","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_administrator_commissioning","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_administrator_commissioning"},{"keyWords":"%extension-matter%matter_bindings","componentId":"%extension-matter%matter_bindings","isConfigurable":false,"documentation":"","description":"Implementation of the Binding Cluster. The user has to enable the Binding Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Binding Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_bindings","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_bindings","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_bindings"},{"keyWords":"%extension-matter%matter_boolean_state_configuration","componentId":"%extension-matter%matter_boolean_state_configuration","isConfigurable":false,"documentation":"","description":"Implementation of the Boolean State Configuration Server Cluster. The user has to enable the Boolean State Configuration Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Boolean State Configuration Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_boolean_state_configuration","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_boolean_state_configuration","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_boolean_state_configuration"},{"keyWords":"%extension-matter%matter_commissioner_control","componentId":"%extension-matter%matter_commissioner_control","isConfigurable":false,"documentation":"","description":"Implementation of the Commissioner Control Server Cluster. The user has to enable the Commissioner Control Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Commissioner Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_commissioner_control","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_commissioner_control","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_commissioner_control"},{"keyWords":"%extension-matter%matter_descriptor","componentId":"%extension-matter%matter_descriptor","isConfigurable":false,"documentation":"","description":"Implementation of the Descriptor Cluster. The user has to enable the Descriptor Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Descriptor Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_descriptor","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_descriptor","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_descriptor"},{"keyWords":"%extension-matter%matter_ecosystem_information","componentId":"%extension-matter%matter_ecosystem_information","isConfigurable":false,"documentation":"","description":"Implementation of the Ecosystem Information Server Cluster. The user has to enable the Ecosystem Information Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Ecosystem Information Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_ecosystem_information","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_ecosystem_information","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_ecosystem_information"},{"keyWords":"%extension-matter%matter_ethernet_network_diagnostics","componentId":"%extension-matter%matter_ethernet_network_diagnostics","isConfigurable":false,"documentation":"","description":"Implementation of the Ethernet Network Diagnostics Server Cluster. The user has to enable the Ethernet Network Diagnostics Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Ethernet Network Diagnostics Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_ethernet_network_diagnostics","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_ethernet_network_diagnostics","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_ethernet_network_diagnostics"},{"keyWords":"%extension-matter%matter_fixed_label","componentId":"%extension-matter%matter_fixed_label","isConfigurable":false,"documentation":"","description":"Implementation of the Fixed Label Server Cluster. The user has to enable the Fixed Label Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Fixed Label Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_fixed_label","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_fixed_label","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_fixed_label"},{"keyWords":"%extension-matter%matter_general_commissioning","componentId":"%extension-matter%matter_general_commissioning","isConfigurable":false,"documentation":"","description":"Implementation of the General Commissioning Server Cluster. The user has to enable the General Commissioning Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"General Commissioning Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_general_commissioning","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_general_commissioning","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_general_commissioning"},{"keyWords":"%extension-matter%matter_general_diagnostics","componentId":"%extension-matter%matter_general_diagnostics","isConfigurable":false,"documentation":"","description":"Implementation of the General Diagnostics Server Cluster. The user has to enable the General Diagnostics Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"General Diagnostics Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_general_diagnostics","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_general_diagnostics","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_general_diagnostics"},{"keyWords":"%extension-matter%matter_group_key_mgmt","componentId":"%extension-matter%matter_group_key_mgmt","isConfigurable":false,"documentation":"","description":"Implementation of the Group Key Management Server Cluster. The user has to enable the Group Key Management Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Group Key Management Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_group_key_mgmt","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_group_key_mgmt","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_group_key_mgmt"},{"keyWords":"%extension-matter%matter_groups","componentId":"%extension-matter%matter_groups","isConfigurable":false,"documentation":"","description":"Implementation of the Groups Server Cluster. The user has to enable the Groups Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Groups Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_groups","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_groups","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_groups"},{"keyWords":"%extension-matter%matter_icd_management","componentId":"%extension-matter%matter_icd_management","isConfigurable":false,"documentation":"","description":"Implementation of the ICD Management Server Cluster. The user has to enable the ICD Management Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"ICD Management Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_icd_management","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_icd_management","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_icd_management"},{"keyWords":"%extension-matter%matter_identify","componentId":"%extension-matter%matter_identify","isConfigurable":false,"documentation":"","description":"Implementation of the Identify Server Cluster. The user has to enable the Identify Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Identify Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_identify","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_identify","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_identify"},{"keyWords":"%extension-matter%matter_laundry_washer_controls","componentId":"%extension-matter%matter_laundry_washer_controls","isConfigurable":false,"documentation":"","description":"Implementation of the Laundry Washer Mode Server Cluster. The user has to enable the Laundry Washer Mode Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Laundry Washer Mode Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_laundry_washer_controls","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_laundry_washer_controls","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_laundry_washer_controls"},{"keyWords":"%extension-matter%matter_level_control","componentId":"%extension-matter%matter_level_control","isConfigurable":false,"documentation":"","description":"Implementation of the Level Control Cluster. The user has to enable the Level Control Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Level Control Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_level_control","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_level_control","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_level_control"},{"keyWords":"%extension-matter%matter_localization_configuration","componentId":"%extension-matter%matter_localization_configuration","isConfigurable":false,"documentation":"","description":"Implementation of the Localization Configuration Server Cluster. The user has to enable the Localization Configuration Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Localization Configuration Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_localization_configuration","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_localization_configuration","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_localization_configuration"},{"keyWords":"%extension-matter%matter_low_power","componentId":"%extension-matter%matter_low_power","isConfigurable":false,"documentation":"","description":"Implementation of the Low Power Server Cluster. The user has to enable the Low Power Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Low Power Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_low_power","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_low_power","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_low_power"},{"keyWords":"%extension-matter%matter_messages","componentId":"%extension-matter%matter_messages","isConfigurable":false,"documentation":"","description":"Implementation of the Messages Server Cluster. The user has to enable the Messages Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Messages Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_messages","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_messages","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_messages"},{"keyWords":"%extension-matter%matter_mode_base","componentId":"%extension-matter%matter_mode_base","isConfigurable":false,"documentation":"","description":"Implementation of the Mode Base Server Cluster. The user has to enable the Mode Base Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Mode Base Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_mode_base","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_mode_base","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_mode_base"},{"keyWords":"%extension-matter%matter_mode_select","componentId":"%extension-matter%matter_mode_select","isConfigurable":false,"documentation":"","description":"Implementation of the Mode Select Server Cluster. The user has to enable the Mode Select Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Mode Select Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_mode_select","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_mode_select","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_mode_select"},{"keyWords":"%extension-matter%matter_on_off","componentId":"%extension-matter%matter_on_off","isConfigurable":false,"documentation":"","description":"Implementation of the On/Off Server Cluster. The user has to enable the On/Off Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"On/Off Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_on_off","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_on_off","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_on_off"},{"keyWords":"%extension-matter%matter_operational_credentials","componentId":"%extension-matter%matter_operational_credentials","isConfigurable":false,"documentation":"","description":"Implementation of the Operational Credentials Server Cluster. The user has to enable the Operational Credentials Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Operational Credentials Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_operational_credentials","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_operational_credentials","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_operational_credentials"},{"keyWords":"%extension-matter%matter_operational_state","componentId":"%extension-matter%matter_operational_state","isConfigurable":false,"documentation":"","description":"Implementation of the Operational State Server Cluster. The user has to enable the Operational State Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Operational State Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_operational_state","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_operational_state","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_operational_state"},{"keyWords":"%extension-matter%matter_sample_mei","componentId":"%extension-matter%matter_sample_mei","isConfigurable":false,"documentation":"","description":"Implementation of the Sample MEI Server Cluster. The user has to enable the Sample MEI Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Sample MEI Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_sample_mei","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_sample_mei","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_sample_mei"},{"keyWords":"%extension-matter%matter_scenes","componentId":"%extension-matter%matter_scenes","isConfigurable":false,"documentation":"","description":"Implementation of the Scenes Management Server Cluster. The user has to enable the Scenes Management Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Scenes Management Server Cluster","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_scenes","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_scenes","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_scenes"},{"keyWords":"%extension-matter%matter_service_area","componentId":"%extension-matter%matter_service_area","isConfigurable":false,"documentation":"","description":"Implementation of the Service Area Server Cluster. The user has to enable the Service Area Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Service Area Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_service_area","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_service_area","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_service_area"},{"keyWords":"%extension-matter%matter_software_diagnostics","componentId":"%extension-matter%matter_software_diagnostics","isConfigurable":false,"documentation":"","description":"Implementation of the Software Diagnostics Server Cluster. The user has to enable the Software Diagnostics Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Software Diagnostics Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_software_diagnostics","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_software_diagnostics","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_software_diagnostics"},{"keyWords":"%extension-matter%matter_thread_network_diagnostics","componentId":"%extension-matter%matter_thread_network_diagnostics","isConfigurable":false,"documentation":"","description":"Implementation of the Thread Network Diagnostics Server Cluster. The user has to enable the Thread Network Diagnostics Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Thread Network Diagnostics Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_thread_network_diagnostics","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_thread_network_diagnostics","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_thread_network_diagnostics"},{"keyWords":"%extension-matter%matter_time_format_localization","componentId":"%extension-matter%matter_time_format_localization","isConfigurable":false,"documentation":"","description":"Implementation of the Time Format Localization Server Cluster. The user has to enable the Time Format Localization Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Time Format Localization Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_time_format_localization","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_time_format_localization","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_time_format_localization"},{"keyWords":"%extension-matter%matter_time_synchronization","componentId":"%extension-matter%matter_time_synchronization","isConfigurable":false,"documentation":"","description":"Implementation of the Time Synchronization Server Cluster. The user has to enable the Time Synchronization Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Time Synchronization Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_time_synchronization","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_time_synchronization","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_time_synchronization"},{"keyWords":"%extension-matter%matter_user_label","componentId":"%extension-matter%matter_user_label","isConfigurable":false,"documentation":"","description":"Implementation of the User Label Server Cluster. The user has to enable the User Label Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"User Label Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_user_label","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_user_label","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_user_label"},{"keyWords":"%extension-matter%matter_wake_on_lan","componentId":"%extension-matter%matter_wake_on_lan","isConfigurable":false,"documentation":"","description":"Implementation of the Wake on LAN Server Cluster. The user has to enable the Wake on LAN Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Wake on LAN Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_wake_on_lan","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_wake_on_lan","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_wake_on_lan"},{"keyWords":"%extension-matter%matter_wifi_network_diagnostics","componentId":"%extension-matter%matter_wifi_network_diagnostics","isConfigurable":false,"documentation":"","description":"Implementation of the Wi-Fi Network Diagnostics Server Cluster. The user has to enable the Wi-Fi Network Diagnostics Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Wi-Fi Network Diagnostics Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-General|matter:2.5.0-Clusters-General-%extension-matter%matter_wifi_network_diagnostics","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_wifi_network_diagnostics","isSelected":false,"id":"matter:2.5.0-Clusters-General-%extension-matter%matter_wifi_network_diagnostics"}],"isEnabled":false,"name":"General","id":"matter:2.5.0-Clusters-General","label":"General","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_fan_control","componentId":"%extension-matter%matter_fan_control","isConfigurable":false,"documentation":"","description":"Implementation of the Fan Control Server Cluster. The user has to enable the Fan Control Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Fan Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-HVAC|matter:2.5.0-Clusters-HVAC-%extension-matter%matter_fan_control","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_fan_control","isSelected":false,"id":"matter:2.5.0-Clusters-HVAC-%extension-matter%matter_fan_control"},{"keyWords":"%extension-matter%matter_pump_configuration_and_control_client","componentId":"%extension-matter%matter_pump_configuration_and_control_client","isConfigurable":false,"documentation":"","description":"Implementation of the Pump Configuration and Control Client Cluster. The user has to enable the Pump Configuration and Control Client Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Pump Configuration and Control Client Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-HVAC|matter:2.5.0-Clusters-HVAC-%extension-matter%matter_pump_configuration_and_control_client","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_pump_configuration_and_control_client","isSelected":false,"id":"matter:2.5.0-Clusters-HVAC-%extension-matter%matter_pump_configuration_and_control_client"},{"keyWords":"%extension-matter%matter_pump_configuration_and_control","componentId":"%extension-matter%matter_pump_configuration_and_control","isConfigurable":false,"documentation":"","description":"Implementation of the Pump Configuration and Control Server Cluster. The user has to enable the Pump Configuration and Control Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Pump Configuration and Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-HVAC|matter:2.5.0-Clusters-HVAC-%extension-matter%matter_pump_configuration_and_control","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_pump_configuration_and_control","isSelected":false,"id":"matter:2.5.0-Clusters-HVAC-%extension-matter%matter_pump_configuration_and_control"},{"keyWords":"%extension-matter%matter_thermostat_client","componentId":"%extension-matter%matter_thermostat_client","isConfigurable":false,"documentation":"","description":"Implementation of the Thermostat Client Cluster. The user has to enable the Thermostat Client Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Thermostat Client Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-HVAC|matter:2.5.0-Clusters-HVAC-%extension-matter%matter_thermostat_client","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_thermostat_client","isSelected":false,"id":"matter:2.5.0-Clusters-HVAC-%extension-matter%matter_thermostat_client"},{"keyWords":"%extension-matter%matter_thermostat","componentId":"%extension-matter%matter_thermostat","isConfigurable":false,"documentation":"","description":"Implementation of the Thermostat Server Cluster. The user has to enable the Thermostat Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Thermostat Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-HVAC|matter:2.5.0-Clusters-HVAC-%extension-matter%matter_thermostat","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_thermostat","isSelected":false,"id":"matter:2.5.0-Clusters-HVAC-%extension-matter%matter_thermostat"},{"keyWords":"%extension-matter%matter_thermostat_user_interface_configuration","componentId":"%extension-matter%matter_thermostat_user_interface_configuration","isConfigurable":false,"documentation":"","description":"Implementation of the Thermostat User Interface Configuration Server Cluster. The user has to enable the Thermostat User Interface Configuration Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Thermostat User Interface Configuration Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-HVAC|matter:2.5.0-Clusters-HVAC-%extension-matter%matter_thermostat_user_interface_configuration","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_thermostat_user_interface_configuration","isSelected":false,"id":"matter:2.5.0-Clusters-HVAC-%extension-matter%matter_thermostat_user_interface_configuration"},{"keyWords":"%extension-matter%matter_valve_configuration_and_control","componentId":"%extension-matter%matter_valve_configuration_and_control","isConfigurable":false,"documentation":"","description":"Implementation of the Valve Configuration and Control Server Cluster. The user has to enable the Valve Configuration and Control Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Valve Configuration and Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-HVAC|matter:2.5.0-Clusters-HVAC-%extension-matter%matter_valve_configuration_and_control","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_valve_configuration_and_control","isSelected":false,"id":"matter:2.5.0-Clusters-HVAC-%extension-matter%matter_valve_configuration_and_control"}],"isEnabled":false,"name":"HVAC","id":"matter:2.5.0-Clusters-HVAC","label":"HVAC","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_color_control","componentId":"%extension-matter%matter_color_control","isConfigurable":false,"documentation":"","description":"Implementation of the Color Control Server Cluster. The user has to enable the Color Control Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Color Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Lighting|matter:2.5.0-Clusters-Lighting-%extension-matter%matter_color_control","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_color_control","isSelected":false,"id":"matter:2.5.0-Clusters-Lighting-%extension-matter%matter_color_control"}],"isEnabled":false,"name":"Lighting","id":"matter:2.5.0-Clusters-Lighting","label":"Lighting","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_resource_monitoring","componentId":"%extension-matter%matter_resource_monitoring","isConfigurable":false,"documentation":"","description":"Implementation of the Activated Carbon Filter Monitoring Server Cluster. The user has to enable the Activated Carbon Filter Monitoring Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Activated Carbon Filter Monitoring Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Measurement|matter:2.5.0-Clusters-Measurement-%extension-matter%matter_resource_monitoring","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_resource_monitoring","isSelected":false,"id":"matter:2.5.0-Clusters-Measurement-%extension-matter%matter_resource_monitoring"},{"keyWords":"%extension-matter%matter_air_quality","componentId":"%extension-matter%matter_air_quality","isConfigurable":true,"documentation":"","description":"Implementation of the Air Quality Server Cluster. The user has to enable the Air Quality Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Air Quality Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Measurement|matter:2.5.0-Clusters-Measurement-%extension-matter%matter_air_quality","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_air_quality","isSelected":false,"id":"matter:2.5.0-Clusters-Measurement-%extension-matter%matter_air_quality"},{"keyWords":"%extension-matter%matter_electrical_energy_measurement","componentId":"%extension-matter%matter_electrical_energy_measurement","isConfigurable":false,"documentation":"","description":"Implementation of the Electrical Energy Measurement Server Cluster. The user has to enable the Electrical Energy Measurement Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Electrical Energy Measurement Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Measurement|matter:2.5.0-Clusters-Measurement-%extension-matter%matter_electrical_energy_measurement","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_electrical_energy_measurement","isSelected":false,"id":"matter:2.5.0-Clusters-Measurement-%extension-matter%matter_electrical_energy_measurement"},{"keyWords":"%extension-matter%matter_electrical_power_measurement","componentId":"%extension-matter%matter_electrical_power_measurement","isConfigurable":false,"documentation":"","description":"Implementation of the Electrical Power Measurement Server Cluster. The user has to enable the Electrical Power Measurement Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Electrical Power Measurement Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Measurement|matter:2.5.0-Clusters-Measurement-%extension-matter%matter_electrical_power_measurement","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_electrical_power_measurement","isSelected":false,"id":"matter:2.5.0-Clusters-Measurement-%extension-matter%matter_electrical_power_measurement"},{"keyWords":"%extension-matter%matter_occupancy_sensor","componentId":"%extension-matter%matter_occupancy_sensor","isConfigurable":false,"documentation":"","description":"Implementation of the Occupancy Sensing Server Cluster. The user has to enable the Occupancy Sensing Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Occupancy Sensing Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Measurement|matter:2.5.0-Clusters-Measurement-%extension-matter%matter_occupancy_sensor","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_occupancy_sensor","isSelected":false,"id":"matter:2.5.0-Clusters-Measurement-%extension-matter%matter_occupancy_sensor"},{"keyWords":"%extension-matter%matter_power_topology","componentId":"%extension-matter%matter_power_topology","isConfigurable":false,"documentation":"","description":"Implementation of the Power Topology Server Cluster. The user has to enable the Power Topology Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Power Topology Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Measurement|matter:2.5.0-Clusters-Measurement-%extension-matter%matter_power_topology","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_power_topology","isSelected":false,"id":"matter:2.5.0-Clusters-Measurement-%extension-matter%matter_power_topology"},{"keyWords":"%extension-matter%matter_concentration_measurement","componentId":"%extension-matter%matter_concentration_measurement","isConfigurable":false,"documentation":"","description":"Implementation of the Radon Concentration Measurement Server Cluster. The user has to enable the Radon Concentration Measurement Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Radon Concentration Measurement Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Measurement|matter:2.5.0-Clusters-Measurement-%extension-matter%matter_concentration_measurement","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_concentration_measurement","isSelected":false,"id":"matter:2.5.0-Clusters-Measurement-%extension-matter%matter_concentration_measurement"},{"keyWords":"%extension-matter%matter_smoke_co_alarm","componentId":"%extension-matter%matter_smoke_co_alarm","isConfigurable":false,"documentation":"","description":"Implementation of the Smoke CO Alarm Server Cluster. The user has to enable the Smoke CO Alarm Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Smoke CO Alarm Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Measurement|matter:2.5.0-Clusters-Measurement-%extension-matter%matter_smoke_co_alarm","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_smoke_co_alarm","isSelected":false,"id":"matter:2.5.0-Clusters-Measurement-%extension-matter%matter_smoke_co_alarm"}],"isEnabled":false,"name":"Measurement","id":"matter:2.5.0-Clusters-Measurement","label":"Measurement","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_account_login","componentId":"%extension-matter%matter_account_login","isConfigurable":false,"documentation":"","description":"Implementation of the Account Login Server Cluster. The user has to enable the Account Login Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Account Login Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_account_login","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_account_login","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_account_login"},{"keyWords":"%extension-matter%matter_application_basic","componentId":"%extension-matter%matter_application_basic","isConfigurable":false,"documentation":"","description":"Implementation of the Application Basic Server Cluster. The user has to enable the Application Basic Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Application Basic Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_application_basic","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_application_basic","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_application_basic"},{"keyWords":"%extension-matter%matter_application_launcher","componentId":"%extension-matter%matter_application_launcher","isConfigurable":false,"documentation":"","description":"Implementation of the Application Launcher Server Cluster. The user has to enable the Application Launcher Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Application Launcher Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_application_launcher","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_application_launcher","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_application_launcher"},{"keyWords":"%extension-matter%matter_audio_output","componentId":"%extension-matter%matter_audio_output","isConfigurable":false,"documentation":"","description":"Implementation of the Audio Output Server Cluster. The user has to enable the Audio Output Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Audio Output Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_audio_output","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_audio_output","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_audio_output"},{"keyWords":"%extension-matter%matter_channel","componentId":"%extension-matter%matter_channel","isConfigurable":false,"documentation":"","description":"Implementation of the Channel Server Cluster. The user has to enable the Channel Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Channel Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_channel","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_channel","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_channel"},{"keyWords":"%extension-matter%matter_content_app_observer","componentId":"%extension-matter%matter_content_app_observer","isConfigurable":false,"documentation":"","description":"Implementation of the Content App Observer Server Cluster. The user has to enable the Content App Observer Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Content App Observer Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_content_app_observer","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_content_app_observer","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_content_app_observer"},{"keyWords":"%extension-matter%matter_content_control","componentId":"%extension-matter%matter_content_control","isConfigurable":false,"documentation":"","description":"Implementation of the Content Control Server Cluster. The user has to enable the Content Control Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Content Control Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_content_control","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_content_control","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_content_control"},{"keyWords":"%extension-matter%matter_content_launch","componentId":"%extension-matter%matter_content_launch","isConfigurable":false,"documentation":"","description":"Implementation of the Content Launcher Server Cluster. The user has to enable the Content Launcher Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Content Launcher Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_content_launch","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_content_launch","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_content_launch"},{"keyWords":"%extension-matter%matter_keypad_input","componentId":"%extension-matter%matter_keypad_input","isConfigurable":false,"documentation":"","description":"Implementation of the Keypad Input Server Cluster. The user has to enable the Keypad Input Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Keypad Input Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_keypad_input","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_keypad_input","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_keypad_input"},{"keyWords":"%extension-matter%matter_media_input","componentId":"%extension-matter%matter_media_input","isConfigurable":false,"documentation":"","description":"Implementation of the Media Input Server Cluster. The user has to enable the Media Input Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Media Input Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_media_input","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_media_input","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_media_input"},{"keyWords":"%extension-matter%matter_media_playback","componentId":"%extension-matter%matter_media_playback","isConfigurable":false,"documentation":"","description":"Implementation of the Media Playback Server Cluster. The user has to enable the Media Playback Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Media Playback Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_media_playback","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_media_playback","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_media_playback"},{"keyWords":"%extension-matter%matter_target_navigator","componentId":"%extension-matter%matter_target_navigator","isConfigurable":false,"documentation":"","description":"Implementation of the Target Navigator Server Cluster. The user has to enable the Target Navigator Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Target Navigator Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Media|matter:2.5.0-Clusters-Media-%extension-matter%matter_target_navigator","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_target_navigator","isSelected":false,"id":"matter:2.5.0-Clusters-Media-%extension-matter%matter_target_navigator"}],"isEnabled":false,"name":"Media","id":"matter:2.5.0-Clusters-Media","label":"Media","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_thread_border_router_management","componentId":"%extension-matter%matter_thread_border_router_management","isConfigurable":false,"documentation":"","description":"Implementation of the Thread Border Router Management Server Cluster. The user has to enable the Thread Border Router Management Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Thread Border Router Management Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Network_Infrastructure|matter:2.5.0-Clusters-Network_Infrastructure-%extension-matter%matter_thread_border_router_management","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_thread_border_router_management","isSelected":false,"id":"matter:2.5.0-Clusters-Network_Infrastructure-%extension-matter%matter_thread_border_router_management"},{"keyWords":"%extension-matter%matter_thread_network_directory","componentId":"%extension-matter%matter_thread_network_directory","isConfigurable":false,"documentation":"","description":"Implementation of the Thread Network Directory Server Cluster. The user has to enable the Thread Network Directory Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Thread Network Directory Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Network_Infrastructure|matter:2.5.0-Clusters-Network_Infrastructure-%extension-matter%matter_thread_network_directory","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_thread_network_directory","isSelected":false,"id":"matter:2.5.0-Clusters-Network_Infrastructure-%extension-matter%matter_thread_network_directory"},{"keyWords":"%extension-matter%matter_wifi_network_management","componentId":"%extension-matter%matter_wifi_network_management","isConfigurable":false,"documentation":"","description":"Implementation of the Wi-Fi Network Management Server Cluster. The user has to enable the Wi-Fi Network Management Server Cluster in the ZCL Advanced Platform (ZAP) tool in order to enable this functionality.\n","instantiable":false,"label":"Wi-Fi Network Management Server Cluster","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Clusters|matter:2.5.0-Clusters-Network_Infrastructure|matter:2.5.0-Clusters-Network_Infrastructure-%extension-matter%matter_wifi_network_management","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_wifi_network_management","isSelected":false,"id":"matter:2.5.0-Clusters-Network_Infrastructure-%extension-matter%matter_wifi_network_management"}],"isEnabled":false,"name":"Network Infrastructure","id":"matter:2.5.0-Clusters-Network_Infrastructure","label":"Network Infrastructure","type":"category"}],"isEnabled":false,"name":"Clusters","id":"matter:2.5.0-Clusters","label":"Clusters","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%siwx917_data_segment_in_psram","componentId":"%extension-matter%siwx917_data_segment_in_psram","isConfigurable":false,"documentation":"","description":"This component puts Data segment in PSRAM memory region\n","instantiable":false,"label":"Siwx917 Data Segment in PSRAM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Device|matter:2.5.0-Device-Si91x|matter:2.5.0-Device-Si91x-MCU|matter:2.5.0-Device-Si91x-MCU-Peripheral|matter:2.5.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver|matter:2.5.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations|matter:2.5.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-matter%siwx917_data_segment_in_psram","isEditable":false,"isEnabled":false,"name":"%extension-matter%siwx917_data_segment_in_psram","isSelected":false,"id":"matter:2.5.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-matter%siwx917_data_segment_in_psram"},{"keyWords":"%extension-matter%siwx917_text_segment_in_psram","componentId":"%extension-matter%siwx917_text_segment_in_psram","isConfigurable":false,"documentation":"","description":"This component puts Text segment in PSRAM memory region and enables execution from PSRAM.\n","instantiable":false,"label":"Siwx917 Text Segment in PSRAM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Device|matter:2.5.0-Device-Si91x|matter:2.5.0-Device-Si91x-MCU|matter:2.5.0-Device-Si91x-MCU-Peripheral|matter:2.5.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver|matter:2.5.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations|matter:2.5.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-matter%siwx917_text_segment_in_psram","isEditable":false,"isEnabled":false,"name":"%extension-matter%siwx917_text_segment_in_psram","isSelected":false,"id":"matter:2.5.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-matter%siwx917_text_segment_in_psram"}],"isEnabled":false,"name":"PSRAM Linker Configurations","id":"matter:2.5.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations","label":"PSRAM Linker Configurations","type":"category"}],"isEnabled":false,"name":"PSRAM Driver","id":"matter:2.5.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver","label":"PSRAM Driver","type":"category"}],"isEnabled":false,"name":"Peripheral","id":"matter:2.5.0-Device-Si91x-MCU-Peripheral","label":"Peripheral","type":"category"}],"isEnabled":false,"name":"MCU","id":"matter:2.5.0-Device-Si91x-MCU","label":"MCU","type":"category"}],"isEnabled":false,"name":"Si91x","id":"matter:2.5.0-Device-Si91x","label":"Si91x","type":"category"}],"isEnabled":false,"name":"Device","id":"matter:2.5.0-Device","label":"Device","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_tracing_headers","componentId":"%extension-matter%matter_tracing_headers","isConfigurable":false,"documentation":"","description":"Provides the stubs for building without tracing with the copys-sources tag\n","instantiable":false,"label":"tracing","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter|matter:2.5.0-Matter-Core|matter:2.5.0-Matter-Core-%extension-matter%matter_tracing_headers","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_tracing_headers","isSelected":false,"id":"matter:2.5.0-Matter-Core-%extension-matter%matter_tracing_headers"}],"isEnabled":false,"name":"Core","id":"matter:2.5.0-Matter-Core","label":"Core","type":"category"}],"isEnabled":false,"name":"Matter","id":"matter:2.5.0-Matter","label":"Matter","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%enable_synchronized_sed","componentId":"%extension-matter%enable_synchronized_sed","isConfigurable":false,"documentation":"","description":"SSED Specific configurations","instantiable":false,"label":"Matter Synchronized SED","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-Thread|matter:2.5.0-Matter-Thread-%extension-matter%enable_synchronized_sed","isEditable":false,"isEnabled":false,"name":"%extension-matter%enable_synchronized_sed","isSelected":false,"id":"matter:2.5.0-Matter-Thread-%extension-matter%enable_synchronized_sed"},{"keyWords":"%extension-matter%matter_thread_cli","componentId":"%extension-matter%matter_thread_cli","isConfigurable":false,"documentation":"","description":"Enables OpenThread CLI for Matter projects","instantiable":false,"label":"OpenThread CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-Thread|matter:2.5.0-Matter-Thread-%extension-matter%matter_thread_cli","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_thread_cli","isSelected":false,"id":"matter:2.5.0-Matter-Thread-%extension-matter%matter_thread_cli"}],"isEnabled":false,"name":"Matter-Thread","id":"matter:2.5.0-Matter-Thread","label":"Matter-Thread","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_dic","componentId":"%extension-matter%matter_dic","isConfigurable":false,"documentation":"","description":"This component enables Direct Internet connectivity feature for matter-wifi","instantiable":false,"label":"Direct Internet connectivity for Matter WiFi","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Features|matter:2.5.0-Matter-WiFi-Features-%extension-matter%matter_dic","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_dic","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Features-%extension-matter%matter_dic"},{"keyWords":"%extension-matter%aws_ota_wifi_dic","componentId":"%extension-matter%aws_ota_wifi_dic","isConfigurable":false,"documentation":"","description":"This component enables Direct Internet connectivity OTA feature for matter-wifi","instantiable":false,"label":"OTA Download through AWS Cloud","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Features|matter:2.5.0-Matter-WiFi-Features-%extension-matter%aws_ota_wifi_dic","isEditable":false,"isEnabled":false,"name":"%extension-matter%aws_ota_wifi_dic","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Features-%extension-matter%aws_ota_wifi_dic"}],"isEnabled":false,"name":"Features","id":"matter:2.5.0-Matter-WiFi-Features","label":"Features","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%network_manager","componentId":"%extension-matter%network_manager","isConfigurable":false,"documentation":"","description":"The Network Manager (SL Net) provides an API to manage network interfaces and their behaviour\n","instantiable":false,"label":"Network Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Network_Management|matter:2.5.0-Matter-WiFi-Network_Management-%extension-matter%network_manager","isEditable":false,"isEnabled":false,"name":"%extension-matter%network_manager","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Network_Management-%extension-matter%network_manager"}],"isEnabled":false,"name":"Network Management","id":"matter:2.5.0-Matter-WiFi-Network_Management","label":"Network Management","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_drivers_series_2_wifi_rs911x","componentId":"%extension-matter%matter_drivers_series_2_wifi_rs911x","isConfigurable":false,"documentation":"","description":"Matter UART selection for Series 2 boards\n","instantiable":false,"label":"Matter UART selection for Series 2 boards (RS911x)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-Drivers|matter:2.5.0-Matter-WiFi-Platform-Drivers-%extension-matter%matter_drivers_series_2_wifi_rs911x","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_drivers_series_2_wifi_rs911x","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-Drivers-%extension-matter%matter_drivers_series_2_wifi_rs911x"},{"keyWords":"%extension-matter%matter_drivers_series_2_wifi_wf200","componentId":"%extension-matter%matter_drivers_series_2_wifi_wf200","isConfigurable":false,"documentation":"","description":"Matter UART selection for Series 2 boards\n","instantiable":false,"label":"Matter UART selection for Series 2 boards (WF200)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-Drivers|matter:2.5.0-Matter-WiFi-Platform-Drivers-%extension-matter%matter_drivers_series_2_wifi_wf200","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_drivers_series_2_wifi_wf200","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-Drivers-%extension-matter%matter_drivers_series_2_wifi_wf200"},{"keyWords":"%extension-matter%siwx917_ncp","componentId":"%extension-matter%siwx917_ncp","isConfigurable":false,"documentation":"","description":"Adds support for the HAL and WiFi Driver layer for SiWx917 NCP devices\n","instantiable":false,"label":"SiWx917 NCP Extension","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-Drivers|matter:2.5.0-Matter-WiFi-Platform-Drivers-%extension-matter%siwx917_ncp","isEditable":false,"isEnabled":false,"name":"%extension-matter%siwx917_ncp","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-Drivers-%extension-matter%siwx917_ncp"},{"keyWords":"%extension-matter%wf200_ncp","componentId":"%extension-matter%wf200_ncp","isConfigurable":false,"documentation":"","description":"Adds support for the HAL and WiFi Driver layer for WF200 NCP devices\n","instantiable":false,"label":"WF200 NCP Extension","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-Drivers|matter:2.5.0-Matter-WiFi-Platform-Drivers-%extension-matter%wf200_ncp","isEditable":false,"isEnabled":false,"name":"%extension-matter%wf200_ncp","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-Drivers-%extension-matter%wf200_ncp"},{"keyWords":"%extension-matter%wiseconnect_sapi","componentId":"%extension-matter%wiseconnect_sapi","isConfigurable":false,"documentation":"","description":"WiSeConnect sapi component\n","instantiable":false,"label":"Wiseconnect Sapi","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-Drivers|matter:2.5.0-Matter-WiFi-Platform-Drivers-%extension-matter%wiseconnect_sapi","isEditable":false,"isEnabled":false,"name":"%extension-matter%wiseconnect_sapi","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-Drivers-%extension-matter%wiseconnect_sapi"}],"isEnabled":false,"name":"Drivers","id":"matter:2.5.0-Matter-WiFi-Platform-Drivers","label":"Drivers","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_crypto_psa_siwx917","componentId":"%extension-matter%matter_crypto_psa_siwx917","isConfigurable":false,"documentation":"","description":"mbedTLS and PSA for SiWx917 SoC\n","instantiable":false,"label":"Matter MbedTLS and PSA Integration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-PSA|matter:2.5.0-Matter-WiFi-Platform-PSA-%extension-matter%matter_crypto_psa_siwx917","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_crypto_psa_siwx917","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-PSA-%extension-matter%matter_crypto_psa_siwx917"}],"isEnabled":false,"name":"PSA","id":"matter:2.5.0-Matter-WiFi-Platform-PSA","label":"PSA","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_crypto_tinycrypt_siwx917","componentId":"%extension-matter%matter_crypto_tinycrypt_siwx917","isConfigurable":false,"documentation":"","description":"mbedtls and Tinycrypt for SiWx917 SoC\n","instantiable":false,"label":"Matter MbedTLS Integration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-Tinycrypt|matter:2.5.0-Matter-WiFi-Platform-Tinycrypt-%extension-matter%matter_crypto_tinycrypt_siwx917","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_crypto_tinycrypt_siwx917","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-Tinycrypt-%extension-matter%matter_crypto_tinycrypt_siwx917"}],"isEnabled":false,"name":"Tinycrypt","id":"matter:2.5.0-Matter-WiFi-Platform-Tinycrypt","label":"Tinycrypt","type":"category"},{"keyWords":"%extension-matter%matter_lcd_917SOC","componentId":"%extension-matter%matter_lcd_917SOC","isConfigurable":false,"documentation":"","description":"Support for liquid crystal display on matter 917 SOC boards","instantiable":false,"label":"Matter Display for 917 SoC boards","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-%extension-matter%matter_lcd_917SOC","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_lcd_917SOC","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-%extension-matter%matter_lcd_917SOC"},{"keyWords":"%extension-matter%siwx917_soc_custom_hal","componentId":"%extension-matter%siwx917_soc_custom_hal","isConfigurable":false,"documentation":"","description":"This component adds a customized hal file for SiWx917 SoC","instantiable":false,"label":"Matter startup component for SiWx917 SoC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-%extension-matter%siwx917_soc_custom_hal","isEditable":false,"isEnabled":false,"name":"%extension-matter%siwx917_soc_custom_hal","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-%extension-matter%siwx917_soc_custom_hal"},{"keyWords":"%extension-matter%matter_platform_siwx917","componentId":"%extension-matter%matter_platform_siwx917","isConfigurable":false,"documentation":"","description":"SiWx917 platform support for Matter","instantiable":false,"label":"Platform for SiWx917","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-%extension-matter%matter_platform_siwx917","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_platform_siwx917","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-%extension-matter%matter_platform_siwx917"},{"keyWords":"%extension-matter%rs911x_ncp","componentId":"%extension-matter%rs911x_ncp","isConfigurable":false,"documentation":"","description":"Adds support RS911x NCP device\n","instantiable":false,"label":"RS911x NCP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-%extension-matter%rs911x_ncp","isEditable":false,"isEnabled":false,"name":"%extension-matter%rs911x_ncp","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-%extension-matter%rs911x_ncp"},{"keyWords":"%extension-matter%matter_efr32_ncp","componentId":"%extension-matter%matter_efr32_ncp","isConfigurable":false,"documentation":"","description":"EFR32 based Wifi Interfaces for NCPs\n","instantiable":false,"label":"Src Platform EFR32 Components","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-%extension-matter%matter_efr32_ncp","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_efr32_ncp","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-%extension-matter%matter_efr32_ncp"},{"keyWords":"%extension-matter%matter_lwip_support","componentId":"%extension-matter%matter_lwip_support","isConfigurable":false,"documentation":"","description":"LWIP support for Matter\n","instantiable":false,"label":"Src Platform LWIP Support Components","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-Platform|matter:2.5.0-Matter-WiFi-Platform-%extension-matter%matter_lwip_support","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_lwip_support","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-Platform-%extension-matter%matter_lwip_support"}],"isEnabled":false,"name":"Platform","id":"matter:2.5.0-Matter-WiFi-Platform","label":"Platform","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_sleep_manager","componentId":"%extension-matter%matter_sleep_manager","isConfigurable":false,"documentation":"","description":"Sleep Manager manages the sleep states of the Wi-Fi radio\n","instantiable":false,"label":"Sleep Manager for Matter WiFi","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-SleepManager|matter:2.5.0-Matter-WiFi-SleepManager-%extension-matter%matter_sleep_manager","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_sleep_manager","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-SleepManager-%extension-matter%matter_sleep_manager"}],"isEnabled":false,"name":"SleepManager","id":"matter:2.5.0-Matter-WiFi-SleepManager","label":"SleepManager","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_lwip","componentId":"%extension-matter%matter_lwip","isConfigurable":false,"documentation":"","description":"matter lwip for wifi\n","instantiable":false,"label":"Matter LwIP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-lwip|matter:2.5.0-Matter-WiFi-lwip-%extension-matter%matter_lwip","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_lwip","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-lwip-%extension-matter%matter_lwip"},{"keyWords":"%extension-matter%matter_minimal_mdns","componentId":"%extension-matter%matter_minimal_mdns","isConfigurable":false,"documentation":"","description":"matter_minimal_mdns for wifi\n","instantiable":false,"label":"Matter Minimal mDNS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-lwip|matter:2.5.0-Matter-WiFi-lwip-%extension-matter%matter_minimal_mdns","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_minimal_mdns","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-lwip-%extension-matter%matter_minimal_mdns"}],"isEnabled":false,"name":"lwip","id":"matter:2.5.0-Matter-WiFi-lwip","label":"lwip","type":"category"},{"keyWords":"%extension-matter%matter_wifi","componentId":"%extension-matter%matter_wifi","isConfigurable":true,"documentation":"","description":"matter wifi\n","instantiable":false,"label":"Matter WiFi","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-%extension-matter%matter_wifi","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_wifi","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-%extension-matter%matter_wifi"},{"keyWords":"%extension-matter%wifi_resources","componentId":"%extension-matter%wifi_resources","isConfigurable":true,"documentation":"","description":"WiSeConnect3 SDK default values and certificates\n","instantiable":false,"label":"WiSeConnect3 Resources","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Matter-WiFi|matter:2.5.0-Matter-WiFi-%extension-matter%wifi_resources","isEditable":false,"isEnabled":false,"name":"%extension-matter%wifi_resources","isSelected":false,"id":"matter:2.5.0-Matter-WiFi-%extension-matter%wifi_resources"}],"isEnabled":false,"name":"Matter-WiFi","id":"matter:2.5.0-Matter-WiFi","label":"Matter-WiFi","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_zigbee_concurrent","componentId":"%extension-matter%matter_zigbee_concurrent","isConfigurable":false,"documentation":"","description":"Provides example component for a concurrent zigbee and matter application.\n","instantiable":false,"label":"Matter Zigbee Concurrent","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Multi-Protocol_Application|matter:2.5.0-Multi-Protocol_Application-%extension-matter%matter_zigbee_concurrent","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_zigbee_concurrent","isSelected":false,"id":"matter:2.5.0-Multi-Protocol_Application-%extension-matter%matter_zigbee_concurrent"},{"keyWords":"%extension-matter%matter_zigbee_sequential","componentId":"%extension-matter%matter_zigbee_sequential","isConfigurable":false,"documentation":"","description":"Provides example component for a sequential zigbee and matter application.\n","instantiable":false,"label":"Matter Zigbee Sequential","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Multi-Protocol_Application|matter:2.5.0-Multi-Protocol_Application-%extension-matter%matter_zigbee_sequential","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_zigbee_sequential","isSelected":false,"id":"matter:2.5.0-Multi-Protocol_Application-%extension-matter%matter_zigbee_sequential"}],"isEnabled":false,"name":"Multi-Protocol Application","id":"matter:2.5.0-Multi-Protocol_Application","label":"Multi-Protocol Application","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_default_lcd_config","componentId":"%extension-matter%matter_default_lcd_config","isConfigurable":false,"documentation":"","description":"Default configurations for liquid crystal display on matter devboards","instantiable":false,"label":"Matter Default LCD/Display Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Display|matter:2.5.0-Platform-Display-%extension-matter%matter_default_lcd_config","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_default_lcd_config","isSelected":false,"id":"matter:2.5.0-Platform-Display-%extension-matter%matter_default_lcd_config"},{"keyWords":"%extension-matter%matter_lcd","componentId":"%extension-matter%matter_lcd","isConfigurable":false,"documentation":"","description":"Support for liquid crystal display on matter devboards","instantiable":false,"label":"Matter Display","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Display|matter:2.5.0-Platform-Display-%extension-matter%matter_lcd","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_lcd","isSelected":false,"id":"matter:2.5.0-Platform-Display-%extension-matter%matter_lcd"},{"keyWords":"%extension-matter%matter_qr_code","componentId":"%extension-matter%matter_qr_code","isConfigurable":false,"documentation":"","description":"Enables showing the QR Code on the LCD","instantiable":false,"label":"Matter QR Code Display","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Display|matter:2.5.0-Platform-Display-%extension-matter%matter_qr_code","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_qr_code","isSelected":false,"id":"matter:2.5.0-Platform-Display-%extension-matter%matter_qr_code"}],"isEnabled":false,"name":"Display","id":"matter:2.5.0-Platform-Display","label":"Display","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_drivers_series_2","componentId":"%extension-matter%matter_drivers_series_2","isConfigurable":false,"documentation":"","description":"Matter UART and clock selection for Series 2 boards\n","instantiable":false,"label":"Matter UART and Clock for Series 2 Boards","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Drivers|matter:2.5.0-Platform-Drivers-%extension-matter%matter_drivers_series_2","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_drivers_series_2","isSelected":false,"id":"matter:2.5.0-Platform-Drivers-%extension-matter%matter_drivers_series_2"}],"isEnabled":false,"name":"Drivers","id":"matter:2.5.0-Platform-Drivers","label":"Drivers","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_icd_checkin_sender","componentId":"%extension-matter%matter_icd_checkin_sender","isConfigurable":false,"documentation":"","description":"Support for Check-in Protocol. Used to maintain a known relationship in case subscriptions with clients are lost. This is a mandatory feature on LIT ICD devices.\n","instantiable":false,"label":"ICD Check In Protocol","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Low-power|matter:2.5.0-Platform-Low-power-%extension-matter%matter_icd_checkin_sender","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_icd_checkin_sender","isSelected":false,"id":"matter:2.5.0-Platform-Low-power-%extension-matter%matter_icd_checkin_sender"},{"keyWords":"%extension-matter%matter_icd_core","componentId":"%extension-matter%matter_icd_core","isConfigurable":true,"documentation":"","description":"Support for configuration of ICD power management on all Silabs Matter devices. This component enables the core ICD functionality.\n","instantiable":false,"label":"ICD Server Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Low-power|matter:2.5.0-Platform-Low-power-%extension-matter%matter_icd_core","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_icd_core","isSelected":false,"id":"matter:2.5.0-Platform-Low-power-%extension-matter%matter_icd_core"},{"keyWords":"%extension-matter%matter_platform_low_power","componentId":"%extension-matter%matter_platform_low_power","isConfigurable":false,"documentation":"","description":"Dictates exclusion of files to enable low-power mode. This component removes Matter Shell, Matter CLI, QR Code, and LCD.\n","instantiable":false,"label":"Lower Power Mode","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Low-power|matter:2.5.0-Platform-Low-power-%extension-matter%matter_platform_low_power","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_platform_low_power","isSelected":false,"id":"matter:2.5.0-Platform-Low-power-%extension-matter%matter_platform_low_power"},{"keyWords":"%extension-matter%matter_subscription_persistence","componentId":"%extension-matter%matter_subscription_persistence","isConfigurable":false,"documentation":"","description":"Allows an end device to re-establish its subscription and by extension its secure session to a subscriber in the event of a power cycle.\n","instantiable":false,"label":"Subscription Persistence","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Low-power|matter:2.5.0-Platform-Low-power-%extension-matter%matter_subscription_persistence","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_subscription_persistence","isSelected":false,"id":"matter:2.5.0-Platform-Low-power-%extension-matter%matter_subscription_persistence"}],"isEnabled":false,"name":"Low-power","id":"matter:2.5.0-Platform-Low-power","label":"Low-power","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_provision_default","componentId":"%extension-matter%matter_provision_default","isConfigurable":true,"documentation":"","description":"Default Configuration of the Attestation Certificate provisioning. Set ENABLE_EXAMPLE_CREDENTIALS in this component's configuration to select certificate provisioning options.","instantiable":false,"label":"Default Attestation Certificate provisioning configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Security|matter:2.5.0-Platform-Security-%extension-matter%matter_provision_default","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_provision_default","isSelected":false,"id":"matter:2.5.0-Platform-Security-%extension-matter%matter_provision_default"},{"keyWords":"%extension-matter%matter_provision_flash","componentId":"%extension-matter%matter_provision_flash","isConfigurable":true,"documentation":"","description":"Flash Configuration of the Attestation Certificate provisioning. Set ENABLE_EXAMPLE_CREDENTIALS in this component's configuration to select certificate provisioning options.","instantiable":false,"label":"Flash Attestation Certificate provisioning configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Security|matter:2.5.0-Platform-Security-%extension-matter%matter_provision_flash","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_provision_flash","isSelected":false,"id":"matter:2.5.0-Platform-Security-%extension-matter%matter_provision_flash"},{"keyWords":"%extension-matter%matter_crypto","componentId":"%extension-matter%matter_crypto","isConfigurable":true,"documentation":"","description":"Adds MbedTLS Crypto configurations required for Matter functionality","instantiable":false,"label":"Matter MbedTLS Crypto Integration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Security|matter:2.5.0-Platform-Security-%extension-matter%matter_crypto","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_crypto","isSelected":false,"id":"matter:2.5.0-Platform-Security-%extension-matter%matter_crypto"}],"isEnabled":false,"name":"Security","id":"matter:2.5.0-Platform-Security","label":"Security","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_air_quality_sensor","componentId":"%extension-matter%matter_air_quality_sensor","isConfigurable":false,"documentation":"","description":"Air Quality Sensor support for Matter applications","instantiable":false,"label":"Air Quality Sensor Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Sensors|matter:2.5.0-Platform-Sensors-%extension-matter%matter_air_quality_sensor","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_air_quality_sensor","isSelected":false,"id":"matter:2.5.0-Platform-Sensors-%extension-matter%matter_air_quality_sensor"},{"keyWords":"%extension-matter%matter_sparkfun_air_quality_sensor","componentId":"%extension-matter%matter_sparkfun_air_quality_sensor","isConfigurable":false,"documentation":"","description":"SGP40 Sparkfun Air Quality Sensor support for Matter applications.  This component needs the https://github.com/SiliconLabs/third_party_hw_drivers_extension extension. Need to add 'qwiic' instance for 'I2CSPM' component and enable 'Third Party Hardware Drivers' extension in studio. \n","instantiable":false,"label":"SGP40 Sparkfun Air Quality Sensor Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Sensors|matter:2.5.0-Platform-Sensors-%extension-matter%matter_sparkfun_air_quality_sensor","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_sparkfun_air_quality_sensor","isSelected":false,"id":"matter:2.5.0-Platform-Sensors-%extension-matter%matter_sparkfun_air_quality_sensor"},{"keyWords":"%extension-matter%matter_si70xx_sensor","componentId":"%extension-matter%matter_si70xx_sensor","isConfigurable":false,"documentation":"","description":"Temperature and Humidity Sensor support for Matter applications","instantiable":false,"label":"Si70xx Sensor Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Sensors|matter:2.5.0-Platform-Sensors-%extension-matter%matter_si70xx_sensor","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_si70xx_sensor","isSelected":false,"id":"matter:2.5.0-Platform-Sensors-%extension-matter%matter_si70xx_sensor"}],"isEnabled":false,"name":"Sensors","id":"matter:2.5.0-Platform-Sensors","label":"Sensors","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_no_debug","componentId":"%extension-matter%matter_no_debug","isConfigurable":false,"documentation":"","description":"Introduces defines and configuration settings for no logs/debug capabilities. Reduces image size.","instantiable":false,"label":"Matter No Debug","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Size_Reduction|matter:2.5.0-Platform-Size_Reduction-%extension-matter%matter_no_debug","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_no_debug","isSelected":false,"id":"matter:2.5.0-Platform-Size_Reduction-%extension-matter%matter_no_debug"},{"keyWords":"%extension-matter%matter_no_lcd_shell","componentId":"%extension-matter%matter_no_lcd_shell","isConfigurable":false,"documentation":"","description":"Removes LCD and Shell components and drivers. Reduces image size.","instantiable":false,"label":"Matter No LCD or Shell","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Size_Reduction|matter:2.5.0-Platform-Size_Reduction-%extension-matter%matter_no_lcd_shell","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_no_lcd_shell","isSelected":false,"id":"matter:2.5.0-Platform-Size_Reduction-%extension-matter%matter_no_lcd_shell"}],"isEnabled":false,"name":"Size Reduction","id":"matter:2.5.0-Platform-Size_Reduction","label":"Size Reduction","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_uart","componentId":"%extension-matter%matter_uart","isConfigurable":false,"documentation":"","description":"Enables sources and defines for UART as used by Matter components","instantiable":false,"label":"Matter UART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-UART|matter:2.5.0-Platform-UART-%extension-matter%matter_uart","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_uart","isSelected":false,"id":"matter:2.5.0-Platform-UART-%extension-matter%matter_uart"}],"isEnabled":false,"name":"UART","id":"matter:2.5.0-Platform-UART","label":"UART","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_log_rtt","componentId":"%extension-matter%matter_log_rtt","isConfigurable":false,"documentation":"","description":"Sets Log Destination to RTT","instantiable":false,"label":"Logging to RTT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Utils|matter:2.5.0-Platform-Utils-%extension-matter%matter_log_rtt","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_log_rtt","isSelected":false,"id":"matter:2.5.0-Platform-Utils-%extension-matter%matter_log_rtt"},{"keyWords":"%extension-matter%matter_log_uart","componentId":"%extension-matter%matter_log_uart","isConfigurable":false,"documentation":"","description":"Sets Log Destination to UART","instantiable":false,"label":"Logging to UART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Utils|matter:2.5.0-Platform-Utils-%extension-matter%matter_log_uart","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_log_uart","isSelected":false,"id":"matter:2.5.0-Platform-Utils-%extension-matter%matter_log_uart"},{"keyWords":"%extension-matter%matter_segger_rtt","componentId":"%extension-matter%matter_segger_rtt","isConfigurable":true,"documentation":"","description":"Matter-specific version of the platform's Segger RTT component","instantiable":false,"label":"Matter Segger RTT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Utils|matter:2.5.0-Platform-Utils-%extension-matter%matter_segger_rtt","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_segger_rtt","isSelected":false,"id":"matter:2.5.0-Platform-Utils-%extension-matter%matter_segger_rtt"},{"keyWords":"%extension-matter%matter_performance_testing","componentId":"%extension-matter%matter_performance_testing","isConfigurable":false,"documentation":"","description":"Matter performance testing utilities and CLI. The component enables the \"perf ping\" and \"perf mx\" Matter Shell commands","instantiable":false,"label":"Performance Testing Utilities and CLI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Utils|matter:2.5.0-Platform-Utils-%extension-matter%matter_performance_testing","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_performance_testing","isSelected":false,"id":"matter:2.5.0-Platform-Utils-%extension-matter%matter_performance_testing"},{"keyWords":"%extension-matter%matter_syscall_stubs","componentId":"%extension-matter%matter_syscall_stubs","isConfigurable":false,"documentation":"","description":"Gcc toolchain unused function stubs","instantiable":false,"label":"Utility","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-Utils|matter:2.5.0-Platform-Utils-%extension-matter%matter_syscall_stubs","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_syscall_stubs","isSelected":false,"id":"matter:2.5.0-Platform-Utils-%extension-matter%matter_syscall_stubs"}],"isEnabled":false,"name":"Utils","id":"matter:2.5.0-Platform-Utils","label":"Utils","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_fw_upgrade_917","componentId":"%extension-matter%matter_fw_upgrade_917","isConfigurable":false,"documentation":"","description":"FW component for 917SoC common Flash\n","instantiable":false,"label":"matter_fw_upgrade_917","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-si91x|matter:2.5.0-Platform-si91x-Middleware|matter:2.5.0-Platform-si91x-Middleware-%extension-matter%matter_fw_upgrade_917","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_fw_upgrade_917","isSelected":false,"id":"matter:2.5.0-Platform-si91x-Middleware-%extension-matter%matter_fw_upgrade_917"}],"isEnabled":false,"name":"Middleware","id":"matter:2.5.0-Platform-si91x-Middleware","label":"Middleware","type":"category"}],"isEnabled":false,"name":"si91x","id":"matter:2.5.0-Platform-si91x","label":"si91x","type":"category"},{"keyWords":"%extension-matter%matter_configuration_over_swo","componentId":"%extension-matter%matter_configuration_over_swo","isConfigurable":false,"documentation":"","description":"Allows Matter application to use SWD/JTAG debugging. Overrides GSDK's configuration_over_swo component","instantiable":false,"label":"Configuration Over SWO","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-%extension-matter%matter_configuration_over_swo","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_configuration_over_swo","isSelected":false,"id":"matter:2.5.0-Platform-%extension-matter%matter_configuration_over_swo"},{"keyWords":"%extension-matter%matter_memory_monitoring","componentId":"%extension-matter%matter_memory_monitoring","isConfigurable":false,"documentation":"","description":"Component to enable memory monitoring","instantiable":false,"label":"Memory Monitoring","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-%extension-matter%matter_memory_monitoring","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_memory_monitoring","isSelected":false,"id":"matter:2.5.0-Platform-%extension-matter%matter_memory_monitoring"},{"keyWords":"%extension-matter%matter_platform_mg","componentId":"%extension-matter%matter_platform_mg","isConfigurable":false,"documentation":"","description":"xMGx platform support for Matter. (currently Series 2 and 3)","instantiable":false,"label":"Platform for xMGx series","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-%extension-matter%matter_platform_mg","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_platform_mg","isSelected":false,"id":"matter:2.5.0-Platform-%extension-matter%matter_platform_mg"},{"keyWords":"%extension-matter%matter_buttons","componentId":"%extension-matter%matter_buttons","isConfigurable":false,"documentation":"","description":"WSTK Button Support for Matter applications","instantiable":false,"label":"WSTK Button Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-%extension-matter%matter_buttons","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_buttons","isSelected":false,"id":"matter:2.5.0-Platform-%extension-matter%matter_buttons"},{"keyWords":"%extension-matter%matter_leds","componentId":"%extension-matter%matter_leds","isConfigurable":false,"documentation":"","description":"Simple LED and RGB LED Support for Matter applications","instantiable":false,"label":"matter LED Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Platform|matter:2.5.0-Platform-%extension-matter%matter_leds","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_leds","isSelected":false,"id":"matter:2.5.0-Platform-%extension-matter%matter_leds"}],"isEnabled":false,"name":"Platform","id":"matter:2.5.0-Platform","label":"Platform","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_ble","componentId":"%extension-matter%matter_ble","isConfigurable":false,"documentation":"","description":"Adds EFR32 Bluetooth network layer for Matter.","instantiable":false,"label":"Bluetooth Network Layer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Stack|matter:2.5.0-Stack-Bluetooth|matter:2.5.0-Stack-Bluetooth-%extension-matter%matter_ble","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_ble","isSelected":false,"id":"matter:2.5.0-Stack-Bluetooth-%extension-matter%matter_ble"},{"keyWords":"%extension-matter%matter_wifi_ble","componentId":"%extension-matter%matter_wifi_ble","isConfigurable":false,"documentation":"","description":"Adds Wifi SDK Bluetooth network layer for Matter.","instantiable":false,"label":"Bluetooth Network Layer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Stack|matter:2.5.0-Stack-Bluetooth|matter:2.5.0-Stack-Bluetooth-%extension-matter%matter_wifi_ble","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_wifi_ble","isSelected":false,"id":"matter:2.5.0-Stack-Bluetooth-%extension-matter%matter_wifi_ble"},{"keyWords":"%extension-matter%matter_gatt_additional_advertising","componentId":"%extension-matter%matter_gatt_additional_advertising","isConfigurable":false,"documentation":"","description":"GATT Additional Advertising Configurations for Matter.\n","instantiable":false,"label":"GATT Additional Advertising","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Stack|matter:2.5.0-Stack-Bluetooth|matter:2.5.0-Stack-Bluetooth-%extension-matter%matter_gatt_additional_advertising","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_gatt_additional_advertising","isSelected":false,"id":"matter:2.5.0-Stack-Bluetooth-%extension-matter%matter_gatt_additional_advertising"},{"keyWords":"%extension-matter%matter_gatt","componentId":"%extension-matter%matter_gatt","isConfigurable":true,"documentation":"","description":"Adds GATT Configuration for Matter.\n","instantiable":false,"label":"GATT Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Stack|matter:2.5.0-Stack-Bluetooth|matter:2.5.0-Stack-Bluetooth-%extension-matter%matter_gatt","isEditable":true,"isEnabled":false,"name":"%extension-matter%matter_gatt","isSelected":false,"id":"matter:2.5.0-Stack-Bluetooth-%extension-matter%matter_gatt"}],"isEnabled":false,"name":"Bluetooth","id":"matter:2.5.0-Stack-Bluetooth","label":"Bluetooth","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-matter%matter_shell","componentId":"%extension-matter%matter_shell","isConfigurable":false,"documentation":"","description":"Enables the Matter Shell (CHIP Shell) functionality\n","instantiable":false,"label":"Matter Shell","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Stack|matter:2.5.0-Stack-Shell|matter:2.5.0-Stack-Shell-%extension-matter%matter_shell","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_shell","isSelected":false,"id":"matter:2.5.0-Stack-Shell-%extension-matter%matter_shell"}],"isEnabled":false,"name":"Shell","id":"matter:2.5.0-Stack-Shell","label":"Shell","type":"category"},{"keyWords":"%extension-matter%matter","componentId":"%extension-matter%matter","isConfigurable":true,"documentation":"","description":"Bundles all necessary core Matter components","instantiable":false,"label":"Matter Core Components","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Stack|matter:2.5.0-Stack-%extension-matter%matter","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter","isSelected":false,"id":"matter:2.5.0-Stack-%extension-matter%matter"},{"keyWords":"%extension-matter%matter_test_event_trigger","componentId":"%extension-matter%matter_test_event_trigger","isConfigurable":true,"documentation":"","description":"Definition of the TestEventTriggerDelegate class. An application implementing the TestEventTrigger Command must enable this component and implement bool emberAfHandleEventTrigger(uint64_t).","instantiable":false,"label":"Matter Test Event Trigger","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Stack|matter:2.5.0-Stack-%extension-matter%matter_test_event_trigger","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_test_event_trigger","isSelected":false,"id":"matter:2.5.0-Stack-%extension-matter%matter_test_event_trigger"},{"keyWords":"%extension-matter%matter_multi_image_ota","componentId":"%extension-matter%matter_multi_image_ota","isConfigurable":true,"documentation":"","description":"OTA Multi Image Requestor functionality for Matter","instantiable":false,"label":"OTA Multi Image Requestor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Stack|matter:2.5.0-Stack-%extension-matter%matter_multi_image_ota","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_multi_image_ota","isSelected":false,"id":"matter:2.5.0-Stack-%extension-matter%matter_multi_image_ota"},{"keyWords":"%extension-matter%matter_multi_image_custom_processor","componentId":"%extension-matter%matter_multi_image_custom_processor","isConfigurable":false,"documentation":"","description":"OTA Multi Image Requestor Custom Processor for Testing","instantiable":false,"label":"OTA Multi Image Requestor Custom Processor for Testing","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Stack|matter:2.5.0-Stack-%extension-matter%matter_multi_image_custom_processor","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_multi_image_custom_processor","isSelected":false,"id":"matter:2.5.0-Stack-%extension-matter%matter_multi_image_custom_processor"},{"keyWords":"%extension-matter%matter_multi_image_ota_encryption","componentId":"%extension-matter%matter_multi_image_ota_encryption","isConfigurable":false,"documentation":"","description":"Encryption for OTA Multi Image Requestor for Matter","instantiable":false,"label":"OTA Multi Image Requestor Encryption","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Stack|matter:2.5.0-Stack-%extension-matter%matter_multi_image_ota_encryption","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_multi_image_ota_encryption","isSelected":false,"id":"matter:2.5.0-Stack-%extension-matter%matter_multi_image_ota_encryption"},{"keyWords":"%extension-matter%matter_ota_support","componentId":"%extension-matter%matter_ota_support","isConfigurable":true,"documentation":"","description":"OTA Requestor functionality for Matter","instantiable":false,"label":"OTA Requestor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"matter:2.5.0-Stack|matter:2.5.0-Stack-%extension-matter%matter_ota_support","isEditable":false,"isEnabled":false,"name":"%extension-matter%matter_ota_support","isSelected":false,"id":"matter:2.5.0-Stack-%extension-matter%matter_ota_support"}],"isEnabled":false,"name":"Stack","id":"matter:2.5.0-Stack","label":"Stack","type":"category"}],"isEnabled":false,"name":"matter","description":"Matter extension for Simplicity SDK Suite","compatibilty":{"conflictId":null,"isCompatible":true,"hasExtensionUpgrade":false},"id":"matter:2.5.0","label":"Silicon Labs Matter v2.5.0","type":"SDKExtensionNode","version":"2.5.0"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%si91x_common_flash","componentId":"%extension-wiseconnect3_sdk%si91x_common_flash","isConfigurable":false,"documentation":"","description":"Common Flash Component Provides common flash capabilities for the board, If the board supports common flashes install this component.\n","instantiable":false,"label":"Common Flash Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Board|wiseconnect3_sdk:3.4.0-Board-Flash|wiseconnect3_sdk:3.4.0-Board-Flash-%extension-wiseconnect3_sdk%si91x_common_flash","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%si91x_common_flash","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Board-Flash-%extension-wiseconnect3_sdk%si91x_common_flash"},{"keyWords":"%extension-wiseconnect3_sdk%si91x_dual_flash","componentId":"%extension-wiseconnect3_sdk%si91x_dual_flash","isConfigurable":false,"documentation":"","description":"Dual Flash Component Provides Dual flash capabilities for the board, If the board Supports Dual flash install this component.\n","instantiable":false,"label":"Dual Flash Component","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Board|wiseconnect3_sdk:3.4.0-Board-Flash|wiseconnect3_sdk:3.4.0-Board-Flash-%extension-wiseconnect3_sdk%si91x_dual_flash","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%si91x_dual_flash","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Board-Flash-%extension-wiseconnect3_sdk%si91x_dual_flash"}],"isEnabled":false,"name":"Flash","id":"wiseconnect3_sdk:3.4.0-Board-Flash","label":"Flash","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%brd2605a","componentId":"%extension-wiseconnect3_sdk%brd2605a","isConfigurable":false,"documentation":"","description":"Board support for BRD2605A.","instantiable":false,"label":"BRD2605A","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"board:pn:BRD2605,board:variant:A,board:revision:A02,board:device:siwg917m111mgtba,hardware:has:vcom","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Board|wiseconnect3_sdk:3.4.0-Board-Radio_Board|wiseconnect3_sdk:3.4.0-Board-Radio_Board-%extension-wiseconnect3_sdk%brd2605a","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%brd2605a","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Board-Radio_Board-%extension-wiseconnect3_sdk%brd2605a"},{"keyWords":"%extension-wiseconnect3_sdk%brd2708a","componentId":"%extension-wiseconnect3_sdk%brd2708a","isConfigurable":false,"documentation":"","description":"Board support for BRD2708A.","instantiable":false,"label":"BRD2708A","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"board:pn:BRD2708,board:variant:A,board:revision:A02,board:device:siwg917y111mgab,hardware:has:vcom","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Board|wiseconnect3_sdk:3.4.0-Board-Radio_Board|wiseconnect3_sdk:3.4.0-Board-Radio_Board-%extension-wiseconnect3_sdk%brd2708a","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%brd2708a","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Board-Radio_Board-%extension-wiseconnect3_sdk%brd2708a"},{"keyWords":"%extension-wiseconnect3_sdk%brd2911a","componentId":"%extension-wiseconnect3_sdk%brd2911a","isConfigurable":false,"documentation":"","description":"Board support for BRD2911A.","instantiable":false,"label":"BRD2911A","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"board:pn:BRD2911,board:variant:A,board:revision:A02,board:device:siwg917y111mgab,hardware:has:vcom","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Board|wiseconnect3_sdk:3.4.0-Board-Radio_Board|wiseconnect3_sdk:3.4.0-Board-Radio_Board-%extension-wiseconnect3_sdk%brd2911a","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%brd2911a","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Board-Radio_Board-%extension-wiseconnect3_sdk%brd2911a"}],"isEnabled":false,"name":"Radio Board","id":"wiseconnect3_sdk:3.4.0-Board-Radio_Board","label":"Radio Board","type":"category"}],"isEnabled":false,"name":"Board","id":"wiseconnect3_sdk:3.4.0-Board","label":"Board","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%bsd_socket_api","componentId":"%extension-wiseconnect3_sdk%bsd_socket_api","isConfigurable":false,"documentation":"","description":"The BSD Socket API provides a BSD socket API prototypes\n","instantiable":false,"label":"BSD Socket API","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Common|wiseconnect3_sdk:3.4.0-Common-%extension-wiseconnect3_sdk%bsd_socket_api","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%bsd_socket_api","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Common-%extension-wiseconnect3_sdk%bsd_socket_api"},{"keyWords":"%extension-wiseconnect3_sdk%wiseconnect3_common","componentId":"%extension-wiseconnect3_sdk%wiseconnect3_common","isConfigurable":false,"documentation":"","description":"Provides a library of commonly used components in the WiSeConnect3 SDK.\n","instantiable":false,"label":"WiSeConnect3 Common Library","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Common|wiseconnect3_sdk:3.4.0-Common-%extension-wiseconnect3_sdk%wiseconnect3_common","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%wiseconnect3_common","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Common-%extension-wiseconnect3_sdk%wiseconnect3_common"}],"isEnabled":false,"name":"Common","id":"wiseconnect3_sdk:3.4.0-Common","label":"Common","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%si91x_debug_uc","componentId":"%extension-wiseconnect3_sdk%si91x_debug_uc","isConfigurable":true,"documentation":"","description":"\"Provides application prints functionality to the Si91x, configuration options for Debug UART instance and the baudrate\"\n","instantiable":false,"label":"Debug UC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Common|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Common-%extension-wiseconnect3_sdk%si91x_debug_uc","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%si91x_debug_uc","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Common-%extension-wiseconnect3_sdk%si91x_debug_uc"},{"keyWords":"%extension-wiseconnect3_sdk%si91x_stack_size_configuration","componentId":"%extension-wiseconnect3_sdk%si91x_stack_size_configuration","isConfigurable":true,"documentation":"","description":"This component provides configuration of the stack and heap for supported toolchains for SiW91x devices.\n","instantiable":false,"label":"SiW91x Stack Size Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Common|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Common-%extension-wiseconnect3_sdk%si91x_stack_size_configuration","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%si91x_stack_size_configuration","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Common-%extension-wiseconnect3_sdk%si91x_stack_size_configuration"},{"keyWords":"%extension-wiseconnect3_sdk%syscalls","componentId":"%extension-wiseconnect3_sdk%syscalls","isConfigurable":false,"documentation":"","description":"Provides system calls support for the Si91x.\n","instantiable":false,"label":"System Calls","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Common|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Common-%extension-wiseconnect3_sdk%syscalls","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%syscalls","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Common-%extension-wiseconnect3_sdk%syscalls"}],"isEnabled":false,"name":"Common","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Common","label":"Common","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%soc_configuration_enable","componentId":"%extension-wiseconnect3_sdk%soc_configuration_enable","isConfigurable":false,"documentation":"","description":"Si91x SoC enable user configuration MACROS.\n","instantiable":false,"label":"ENABLE USER CONFIGURATION","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%soc_configuration_enable","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%soc_configuration_enable","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%soc_configuration_enable"},{"keyWords":"%extension-wiseconnect3_sdk%lite_image_for_4mb","componentId":"%extension-wiseconnect3_sdk%lite_image_for_4mb","isConfigurable":false,"documentation":"","description":"lite image config component is used for 4MB SoC OPN where 1.3 MB allocated for the NWP image and ~1MB reserved for the M4 image\n","instantiable":false,"label":"Lite 4MB config","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%lite_image_for_4mb","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%lite_image_for_4mb","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%lite_image_for_4mb"},{"keyWords":"%extension-wiseconnect3_sdk%si91x_device_init_nvic","componentId":"%extension-wiseconnect3_sdk%si91x_device_init_nvic","isConfigurable":false,"documentation":"","description":"Initializing NVIC Interrupt Priorities Configuration Component, NVIC Interrupt priorities of the Si91x SoC MCU are configured automatically during startup. Note: This component needs to be used only for FreeRTOS.\n","instantiable":false,"label":"NVIC Interrupt Priorities Configuration for FreeRTOS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%si91x_device_init_nvic","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%si91x_device_init_nvic","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%si91x_device_init_nvic"},{"keyWords":"%extension-wiseconnect3_sdk%test_opn","componentId":"%extension-wiseconnect3_sdk%test_opn","isConfigurable":false,"documentation":"","description":"Si91x SoC OPN testing component for internal use only.\n","instantiable":false,"label":"OPN testing component for internal use only","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%test_opn","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%test_opn","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%test_opn"},{"keyWords":"%extension-wiseconnect3_sdk%psram_configuration_headers","componentId":"%extension-wiseconnect3_sdk%psram_configuration_headers","isConfigurable":false,"documentation":"","description":"Si91x SoC PSRAM configuration header files.\n","instantiable":false,"label":"PSRAM Configuration Header Files","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%psram_configuration_headers","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%psram_configuration_headers","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%psram_configuration_headers"},{"keyWords":"%extension-wiseconnect3_sdk%device_needs_ram_execution","componentId":"%extension-wiseconnect3_sdk%device_needs_ram_execution","isConfigurable":false,"documentation":"","description":"RAM Execution Component is used to enable a pre-determined selection of components to execute from RAM. Note: For an Application that requires writing into Flash, Including this component is a Mandatory.\n","instantiable":false,"label":"RAM Execution","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%device_needs_ram_execution","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%device_needs_ram_execution","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%device_needs_ram_execution"},{"keyWords":"%extension-wiseconnect3_sdk%si91x_32kHz_external_oscillator","componentId":"%extension-wiseconnect3_sdk%si91x_32kHz_external_oscillator","isConfigurable":true,"documentation":"","description":"This component provides the provision to select the UULP GPIO for connecting the external oscillator.\n","instantiable":false,"label":"SI91X 32kHz EXTERNAL OSCILLATOR","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%si91x_32kHz_external_oscillator","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%si91x_32kHz_external_oscillator","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%si91x_32kHz_external_oscillator"},{"keyWords":"%extension-wiseconnect3_sdk%udma_linker_config","componentId":"%extension-wiseconnect3_sdk%udma_linker_config","isConfigurable":false,"documentation":"","description":"Provides linker configuration for the UDMA component.\n","instantiable":false,"label":"UDMA Linker Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%udma_linker_config","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%udma_linker_config","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core-%extension-wiseconnect3_sdk%udma_linker_config"}],"isEnabled":false,"name":"Core","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Core","label":"Core","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_aes","componentId":"%extension-wiseconnect3_sdk%sl_si91x_aes","isConfigurable":false,"documentation":"","description":"Implementation of the AES API\n","instantiable":false,"label":"AES","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_aes","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_aes","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_aes"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_attestation","componentId":"%extension-wiseconnect3_sdk%sl_si91x_attestation","isConfigurable":false,"documentation":"","description":"Implementation of the ATTESTATION API\n","instantiable":false,"label":"ATTESTATION","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_attestation","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_attestation","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_attestation"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_ccm","componentId":"%extension-wiseconnect3_sdk%sl_si91x_ccm","isConfigurable":false,"documentation":"","description":"Implementation of the CCM API\n","instantiable":false,"label":"CCM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_ccm","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_ccm","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_ccm"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_chachapoly","componentId":"%extension-wiseconnect3_sdk%sl_si91x_chachapoly","isConfigurable":false,"documentation":"","description":"Implementation of the CHACHAPOLY API\n","instantiable":false,"label":"CHACHAPOLY","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_chachapoly","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_chachapoly","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_chachapoly"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_crypto_multithread","componentId":"%extension-wiseconnect3_sdk%sl_si91x_crypto_multithread","isConfigurable":false,"documentation":"","description":"Implementation of the thread-safe mechanism in crypto hardware accelerators\n","instantiable":false,"label":"CRYPTO MULTITHREAD","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_crypto_multithread","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_crypto_multithread","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_crypto_multithread"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_crypto","componentId":"%extension-wiseconnect3_sdk%sl_si91x_crypto","isConfigurable":false,"documentation":"","description":"Common folder for crypto APIs\n","instantiable":false,"label":"Crypto - Common","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_crypto","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_crypto","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_crypto"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_crypto_utility","componentId":"%extension-wiseconnect3_sdk%sl_si91x_crypto_utility","isConfigurable":false,"documentation":"","description":"Utility folder for crypto APIs\n","instantiable":false,"label":"Crypto - Utility","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_crypto_utility","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_crypto_utility","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_crypto_utility"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_ecdh","componentId":"%extension-wiseconnect3_sdk%sl_si91x_ecdh","isConfigurable":false,"documentation":"","description":"Implementation of the ECDH APIs\n","instantiable":false,"label":"ECDH","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_ecdh","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_ecdh","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_ecdh"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_ecdsa","componentId":"%extension-wiseconnect3_sdk%sl_si91x_ecdsa","isConfigurable":false,"documentation":"","description":"Implementation of the ECDSA APIs\n","instantiable":false,"label":"ECDSA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_ecdsa","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_ecdsa","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_ecdsa"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_gcm","componentId":"%extension-wiseconnect3_sdk%sl_si91x_gcm","isConfigurable":false,"documentation":"","description":"Implementation of the GCM API\n","instantiable":false,"label":"GCM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_gcm","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_gcm","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_gcm"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_hmac","componentId":"%extension-wiseconnect3_sdk%sl_si91x_hmac","isConfigurable":false,"documentation":"","description":"Implementation of the HMAC API\n","instantiable":false,"label":"HMAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_hmac","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_hmac","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_hmac"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_psa_trng","componentId":"%extension-wiseconnect3_sdk%sl_si91x_psa_trng","isConfigurable":false,"documentation":"","description":"True Random Number Generator (TRNG) APIs\n","instantiable":false,"label":"PSA TRNG","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_trng","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_psa_trng","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_trng"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_psa_wrap","componentId":"%extension-wiseconnect3_sdk%sl_si91x_psa_wrap","isConfigurable":false,"documentation":"","description":"Implementation of mbedTls psa crypto wrap API\n","instantiable":false,"label":"PSA WRAP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_wrap","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_psa_wrap","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_wrap"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_puf","componentId":"%extension-wiseconnect3_sdk%sl_si91x_puf","isConfigurable":false,"documentation":"","description":"Implementation of the PUF API\n","instantiable":false,"label":"PUF","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_puf","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_puf","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_puf"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_sha","componentId":"%extension-wiseconnect3_sdk%sl_si91x_sha","isConfigurable":false,"documentation":"","description":"Implementation of the SHA API\n","instantiable":false,"label":"SHA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_sha","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_sha","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_sha"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_trng","componentId":"%extension-wiseconnect3_sdk%sl_si91x_trng","isConfigurable":false,"documentation":"","description":"True Random Number Generator (TRNG) APIs\n","instantiable":false,"label":"TRNG","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_trng","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_trng","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_trng"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_wrap","componentId":"%extension-wiseconnect3_sdk%sl_si91x_wrap","isConfigurable":false,"documentation":"","description":"Implementation of the WRAP API\n","instantiable":false,"label":"WRAP","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_wrap","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_wrap","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto-%extension-wiseconnect3_sdk%sl_si91x_wrap"}],"isEnabled":false,"name":"Crypto","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Crypto","label":"Crypto","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%external_flash_2mb","componentId":"%extension-wiseconnect3_sdk%external_flash_2mb","isConfigurable":false,"documentation":"","description":"It is necessary to initialize this component, if the external flash connected to the SiWG91x part is of size 2MB.","instantiable":false,"label":"2MB Flash (External)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash-%extension-wiseconnect3_sdk%external_flash_2mb","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%external_flash_2mb","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash-%extension-wiseconnect3_sdk%external_flash_2mb"},{"keyWords":"%extension-wiseconnect3_sdk%external_flash_4mb","componentId":"%extension-wiseconnect3_sdk%external_flash_4mb","isConfigurable":false,"documentation":"","description":"It is necessary to initialize this component, if the external flash connected to the SiWG91x part is of size 4MB.","instantiable":false,"label":"4MB Flash (External)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash-%extension-wiseconnect3_sdk%external_flash_4mb","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%external_flash_4mb","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash-%extension-wiseconnect3_sdk%external_flash_4mb"},{"keyWords":"%extension-wiseconnect3_sdk%external_flash_8mb","componentId":"%extension-wiseconnect3_sdk%external_flash_8mb","isConfigurable":false,"documentation":"","description":"It is necessary to initialize this component, if the external flash connected to the SiWG91x part is of size 8MB.","instantiable":false,"label":"8MB Flash (External)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash-%extension-wiseconnect3_sdk%external_flash_8mb","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%external_flash_8mb","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash-%extension-wiseconnect3_sdk%external_flash_8mb"},{"keyWords":"%extension-wiseconnect3_sdk%external_flash_none","componentId":"%extension-wiseconnect3_sdk%external_flash_none","isConfigurable":false,"documentation":"","description":"Excludes an external flash from the SiWG91x part.","instantiable":false,"label":"No External Flash","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash-%extension-wiseconnect3_sdk%external_flash_none","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%external_flash_none","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash-%extension-wiseconnect3_sdk%external_flash_none"}],"isEnabled":false,"name":"Flash","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Flash","label":"Flash","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_soc_soft_reset","componentId":"%extension-wiseconnect3_sdk%sl_si91x_soc_soft_reset","isConfigurable":false,"documentation":"","description":"Provides soft reset functionality for the Si91x SoC MCU.\n","instantiable":false,"label":"Soft Reset","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-HAL|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-HAL-%extension-wiseconnect3_sdk%sl_si91x_soc_soft_reset","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_soc_soft_reset","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-HAL-%extension-wiseconnect3_sdk%sl_si91x_soc_soft_reset"}],"isEnabled":false,"name":"HAL","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-HAL","label":"HAL","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_button_917","componentId":"%extension-wiseconnect3_sdk%sl_si91x_button_917","isConfigurable":true,"documentation":"","description":"The Button Driver provides an implementation of the Generic Button API.  This driver supports configurable debouncing. This component is instantiable, meaning that several named instances can be created.  For each instance, a configuration is generated along with an initialization struct set according to this configuration. Instances should be named as 'btn0' or 'btn1'.\n","instantiable":true,"label":"Button","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_si91x_button_917","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_button_917","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_si91x_button_917"},{"keyWords":"%extension-wiseconnect3_sdk%sl_icm40627","componentId":"%extension-wiseconnect3_sdk%sl_icm40627","isConfigurable":true,"documentation":"","description":"Provides a driver implementation to control the ICM40627 6-axis Inertial Sensor (IMU).\n","instantiable":false,"label":"ICM40627 6-axis Inertial Sensor (IMU)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_icm40627","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_icm40627","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_icm40627"},{"keyWords":"%extension-wiseconnect3_sdk%sl_joystick","componentId":"%extension-wiseconnect3_sdk%sl_joystick","isConfigurable":true,"documentation":"","description":"Provides an API for the Si91x MCU to control a joystick.\n","instantiable":false,"label":"Joystick","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_joystick","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_joystick","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_joystick"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_led_917","componentId":"%extension-wiseconnect3_sdk%sl_si91x_led_917","isConfigurable":true,"documentation":"","description":"The Simple LED Driver provides an implementation of the Generic LED API.  This driver supports controlling GPIO-based on/off type LEDs.  This component is instantiable, meaning that several named instances can be created.  For each instance a configuration is generated along with an initialization struct set according to this configuration. Instances should be named as 'led0' or 'led1'.\n","instantiable":true,"label":"LED","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_si91x_led_917","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_led_917","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_si91x_led_917"},{"keyWords":"%extension-wiseconnect3_sdk%memlcd_917","componentId":"%extension-wiseconnect3_sdk%memlcd_917","isConfigurable":true,"documentation":"","description":"Provides a driver implementation to drive the LCD device connected to the Si91x MCU via SPI.\n","instantiable":false,"label":"Memory LCD SPI driver","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%memlcd_917","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%memlcd_917","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%memlcd_917"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_mic","componentId":"%extension-wiseconnect3_sdk%sl_si91x_mic","isConfigurable":true,"documentation":"","description":"The Simple MIC Driver provides an implementation of the ICS 43434 mic APIs.\n","instantiable":false,"label":"Mic","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_si91x_mic","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_mic","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_si91x_mic"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_rgb_led_917","componentId":"%extension-wiseconnect3_sdk%sl_si91x_rgb_led_917","isConfigurable":true,"documentation":"","description":"The Simple RGB LED Driver provides an implementation of RGB LED API.  This driver supports controlling GPIO-based on/off type RGB LEDs.  This component is instantiable, meaning that several named instances can be created.  For each instance a configuration is generated along with an initialization struct set according to this configuration. This driver file is now deprecated. To ensure future-proofing and compatibility with upcoming features,  users are encouraged to migrate to the LED driver by taking reference from the sl_si91x_rgb_led application.\n","instantiable":true,"label":"RGB LED","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_si91x_rgb_led_917","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_rgb_led_917","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_si91x_rgb_led_917"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si70xx","componentId":"%extension-wiseconnect3_sdk%sl_si70xx","isConfigurable":true,"documentation":"","description":"Provides a driver implementation to control the Si70XX humidity and temperature sensor.\n","instantiable":false,"label":"Si70xx Humidity and Temperature Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_si70xx","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si70xx","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_si70xx"},{"keyWords":"%extension-wiseconnect3_sdk%sl_veml6035","componentId":"%extension-wiseconnect3_sdk%sl_veml6035","isConfigurable":true,"documentation":"","description":"The VEML6035 Ambient Light Sensor provides an implementation of a highly accurate ambient light sensor API. This sensor supports ambient light detection with a high-sensitivity photodiode, low-noise amplifier. The VEML6035 communicates via an easy-to-use I2C interface and includes an additional interrupt feature for advanced control. This component is instantiable, corresponding initialization settings.\n","instantiable":false,"label":"VEML6035","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_veml6035","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_veml6035","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware-%extension-wiseconnect3_sdk%sl_veml6035"}],"isEnabled":false,"name":"Hardware","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Hardware","label":"Hardware","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%rsilib_dcache","componentId":"%extension-wiseconnect3_sdk%rsilib_dcache","isConfigurable":false,"documentation":"","description":"DCACHE API's\n","instantiable":false,"label":"D_CACHE","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-RSI_Peripheral_Drivers|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-RSI_Peripheral_Drivers-%extension-wiseconnect3_sdk%rsilib_dcache","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%rsilib_dcache","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-RSI_Peripheral_Drivers-%extension-wiseconnect3_sdk%rsilib_dcache"},{"keyWords":"%extension-wiseconnect3_sdk%sllib_m4_power_save","componentId":"%extension-wiseconnect3_sdk%sllib_m4_power_save","isConfigurable":false,"documentation":"","description":"Provides API to control powersave functionality on the Cortex-M4 processor core of the Si91x.\n","instantiable":false,"label":"Si91x Cortex-M4 Powersave","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-RSI_Peripheral_Drivers|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-RSI_Peripheral_Drivers-%extension-wiseconnect3_sdk%sllib_m4_power_save","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sllib_m4_power_save","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-RSI_Peripheral_Drivers-%extension-wiseconnect3_sdk%sllib_m4_power_save"},{"keyWords":"%extension-wiseconnect3_sdk%sllib_wireless_shutdown","componentId":"%extension-wiseconnect3_sdk%sllib_wireless_shutdown","isConfigurable":false,"documentation":"","description":"Provides API to wireless shutdown, disabling the clocks and change the reference clock.\n","instantiable":false,"label":"Si91x Wireless Shutdown","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-RSI_Peripheral_Drivers|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-RSI_Peripheral_Drivers-%extension-wiseconnect3_sdk%sllib_wireless_shutdown","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sllib_wireless_shutdown","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-RSI_Peripheral_Drivers-%extension-wiseconnect3_sdk%sllib_wireless_shutdown"}],"isEnabled":false,"name":"RSI Peripheral Drivers","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-RSI_Peripheral_Drivers","label":"RSI Peripheral Drivers","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%systemlevel_power_save","componentId":"%extension-wiseconnect3_sdk%systemlevel_power_save","isConfigurable":false,"documentation":"","description":"Power Save API's\n","instantiable":false,"label":"POWER SAVE","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-System-Level_Drivers|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-System-Level_Drivers-%extension-wiseconnect3_sdk%systemlevel_power_save","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%systemlevel_power_save","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-System-Level_Drivers-%extension-wiseconnect3_sdk%systemlevel_power_save"},{"keyWords":"%extension-wiseconnect3_sdk%systemlevel_wwdt","componentId":"%extension-wiseconnect3_sdk%systemlevel_wwdt","isConfigurable":false,"documentation":"","description":"Window Watchdog Timer API's\n","instantiable":false,"label":"WWDT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-System-Level_Drivers|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-System-Level_Drivers-%extension-wiseconnect3_sdk%systemlevel_wwdt","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%systemlevel_wwdt","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-System-Level_Drivers-%extension-wiseconnect3_sdk%systemlevel_wwdt"}],"isEnabled":false,"name":"System-Level Drivers","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal-System-Level_Drivers","label":"System-Level Drivers","type":"category"}],"isEnabled":false,"name":"Internal","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Internal","label":"Internal","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_psa_aead","componentId":"%extension-wiseconnect3_sdk%sl_si91x_psa_aead","isConfigurable":false,"documentation":"","description":"Implementation of mbedTls psa crypto AEAD API\n","instantiable":false,"label":"PSA AEAD","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_aead","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_psa_aead","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_aead"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_psa_aes","componentId":"%extension-wiseconnect3_sdk%sl_si91x_psa_aes","isConfigurable":false,"documentation":"","description":"Implementation of mbedTls psa crypto AES API\n","instantiable":false,"label":"PSA AES","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_aes","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_psa_aes","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_aes"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_psa_crypto","componentId":"%extension-wiseconnect3_sdk%sl_si91x_psa_crypto","isConfigurable":false,"documentation":"","description":"Common utility folder for PSA crypto APIs\n","instantiable":false,"label":"PSA Crypto - Utility","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_crypto","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_psa_crypto","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_crypto"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_psa_ecdh","componentId":"%extension-wiseconnect3_sdk%sl_si91x_psa_ecdh","isConfigurable":false,"documentation":"","description":"Implementation of mbedTls PSA crypto ECDH API\n","instantiable":false,"label":"PSA ECDH","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_ecdh","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_psa_ecdh","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_ecdh"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_psa_ecdsa","componentId":"%extension-wiseconnect3_sdk%sl_si91x_psa_ecdsa","isConfigurable":false,"documentation":"","description":"Implementation of mbedTls PSA crypto ECDSA API\n","instantiable":false,"label":"PSA ECDSA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_ecdsa","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_psa_ecdsa","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_ecdsa"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_psa_hmac","componentId":"%extension-wiseconnect3_sdk%sl_si91x_psa_hmac","isConfigurable":false,"documentation":"","description":"Implementation of mbedTls PSA crypto HMAC API\n","instantiable":false,"label":"PSA HMAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_hmac","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_psa_hmac","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_hmac"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_psa_mac","componentId":"%extension-wiseconnect3_sdk%sl_si91x_psa_mac","isConfigurable":false,"documentation":"","description":"Implementation of mbedTls PSA crypto MAC API\n","instantiable":false,"label":"PSA MAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_mac","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_psa_mac","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_mac"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_psa_sha","componentId":"%extension-wiseconnect3_sdk%sl_si91x_psa_sha","isConfigurable":false,"documentation":"","description":"Implementation of mbedTls PSA crypto SHA API\n","instantiable":false,"label":"PSA SHA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_sha","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_psa_sha","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto-%extension-wiseconnect3_sdk%sl_si91x_psa_sha"}],"isEnabled":false,"name":"PSA Crypto","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSA_Crypto","label":"PSA Crypto","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%external_psram_2mb","componentId":"%extension-wiseconnect3_sdk%external_psram_2mb","isConfigurable":false,"documentation":"","description":"It is necessary to initialize this component, if the external PSRAM connected to the SiWG91x part is of size 2MB.","instantiable":false,"label":"2MB PSRAM (External)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM-%extension-wiseconnect3_sdk%external_psram_2mb","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%external_psram_2mb","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM-%extension-wiseconnect3_sdk%external_psram_2mb"},{"keyWords":"%extension-wiseconnect3_sdk%external_psram_4mb","componentId":"%extension-wiseconnect3_sdk%external_psram_4mb","isConfigurable":false,"documentation":"","description":"It is necessary to initialize this component, if the external flash connected to the SiWG91x part is of size 4MB.","instantiable":false,"label":"4MB PSRAM (External)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM-%extension-wiseconnect3_sdk%external_psram_4mb","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%external_psram_4mb","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM-%extension-wiseconnect3_sdk%external_psram_4mb"},{"keyWords":"%extension-wiseconnect3_sdk%external_psram_8mb","componentId":"%extension-wiseconnect3_sdk%external_psram_8mb","isConfigurable":false,"documentation":"","description":"It is necessary to initialize this component, if the external flash connected to the SiWG91x part is of size 8MB.","instantiable":false,"label":"8MB PSRAM (External)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM-%extension-wiseconnect3_sdk%external_psram_8mb","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%external_psram_8mb","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM-%extension-wiseconnect3_sdk%external_psram_8mb"},{"keyWords":"%extension-wiseconnect3_sdk%external_psram_none","componentId":"%extension-wiseconnect3_sdk%external_psram_none","isConfigurable":false,"documentation":"","description":"Excludes an external PSRAM from the SiWG91x part.","instantiable":false,"label":"No External PSRAM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM-%extension-wiseconnect3_sdk%external_psram_none","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%external_psram_none","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM-%extension-wiseconnect3_sdk%external_psram_none"}],"isEnabled":false,"name":"PSRAM","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-PSRAM","label":"PSRAM","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%psram_aps1604m_sqr","componentId":"%extension-wiseconnect3_sdk%psram_aps1604m_sqr","isConfigurable":true,"documentation":"","description":"This component includes the AP Memory APS1604M-SQR PSRAM device related configurations. Selecting this component will also include the PSRAM Core component, which is  the implementation of the PSRAM driver itself.\n","instantiable":false,"label":"APS1604M-SQR PSRAM Device","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Device|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Device-%extension-wiseconnect3_sdk%psram_aps1604m_sqr","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%psram_aps1604m_sqr","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Device-%extension-wiseconnect3_sdk%psram_aps1604m_sqr"},{"keyWords":"%extension-wiseconnect3_sdk%psram_aps6404l_sqh","componentId":"%extension-wiseconnect3_sdk%psram_aps6404l_sqh","isConfigurable":true,"documentation":"","description":"This component includes the AP Memory APS6404L-SQH PSRAM device related configurations. Selecting this component will also include the PSRAM Core component, which is  the implementation of the PSRAM driver itself.\n","instantiable":false,"label":"APS6404L_SQH PSRAM Device","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Device|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Device-%extension-wiseconnect3_sdk%psram_aps6404l_sqh","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%psram_aps6404l_sqh","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Device-%extension-wiseconnect3_sdk%psram_aps6404l_sqh"},{"keyWords":"%extension-wiseconnect3_sdk%psram_aps6404l_sqrh","componentId":"%extension-wiseconnect3_sdk%psram_aps6404l_sqrh","isConfigurable":true,"documentation":"","description":"This component includes the AP Memory APS6404L-SQRH PSRAM device related configurations. Selecting this component will also include the PSRAM Core component, which is  the implementation of the PSRAM driver itself.\n","instantiable":false,"label":"APS6404L_SQRH PSRAM Device","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Device|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Device-%extension-wiseconnect3_sdk%psram_aps6404l_sqrh","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%psram_aps6404l_sqrh","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Device-%extension-wiseconnect3_sdk%psram_aps6404l_sqrh"}],"isEnabled":false,"name":"PSRAM Device","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Device","label":"PSRAM Device","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%bss_segment_in_psram","componentId":"%extension-wiseconnect3_sdk%bss_segment_in_psram","isConfigurable":false,"documentation":"","description":"This component puts BSS segment in PSRAM memory region\n","instantiable":false,"label":"BSS Segment in PSRAM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-wiseconnect3_sdk%bss_segment_in_psram","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%bss_segment_in_psram","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-wiseconnect3_sdk%bss_segment_in_psram"},{"keyWords":"%extension-wiseconnect3_sdk%data_segment_in_psram","componentId":"%extension-wiseconnect3_sdk%data_segment_in_psram","isConfigurable":false,"documentation":"","description":"This component puts Data segment in PSRAM memory region\n","instantiable":false,"label":"Data Segment in PSRAM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-wiseconnect3_sdk%data_segment_in_psram","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%data_segment_in_psram","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-wiseconnect3_sdk%data_segment_in_psram"},{"keyWords":"%extension-wiseconnect3_sdk%heap_segment_in_psram","componentId":"%extension-wiseconnect3_sdk%heap_segment_in_psram","isConfigurable":false,"documentation":"","description":"This component puts Heap segment in PSRAM memory region\n","instantiable":false,"label":"Heap Segment in PSRAM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-wiseconnect3_sdk%heap_segment_in_psram","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%heap_segment_in_psram","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-wiseconnect3_sdk%heap_segment_in_psram"},{"keyWords":"%extension-wiseconnect3_sdk%stack_segment_in_psram","componentId":"%extension-wiseconnect3_sdk%stack_segment_in_psram","isConfigurable":false,"documentation":"","description":"This component puts Stack segemnt in PSRAM memory region\n","instantiable":false,"label":"Stack Segment in PSRAM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-wiseconnect3_sdk%stack_segment_in_psram","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%stack_segment_in_psram","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-wiseconnect3_sdk%stack_segment_in_psram"},{"keyWords":"%extension-wiseconnect3_sdk%text_segment_in_psram","componentId":"%extension-wiseconnect3_sdk%text_segment_in_psram","isConfigurable":false,"documentation":"","description":"This component puts Text segment in PSRAM memory region and enables execution from PSRAM.\n","instantiable":false,"label":"Text Segment in PSRAM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-wiseconnect3_sdk%text_segment_in_psram","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%text_segment_in_psram","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations-%extension-wiseconnect3_sdk%text_segment_in_psram"}],"isEnabled":false,"name":"PSRAM Linker Configurations","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-PSRAM_Linker_Configurations","label":"PSRAM Linker Configurations","type":"category"},{"keyWords":"%extension-wiseconnect3_sdk%psram_core","componentId":"%extension-wiseconnect3_sdk%psram_core","isConfigurable":true,"documentation":"","description":"PSRAM (Pseudo Static Random Access Memory) is a random-access memory whose internal structure is based on dynamic memory with refresh control signals generated internally, in the standby mode, so that it can mimic the functionality of a static memory. It combines the high density of DRAM with the ease-of-use of true SRAM. The M4 core communicates with the PSRAM via Quad SPI interface.\nThe text segment, data segment, bss, heap and stack can be placed in PSRAM by installing the respective components present under \"PSRAM Linker Configurations\".\n","instantiable":false,"label":"PSRAM Core","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-%extension-wiseconnect3_sdk%psram_core","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%psram_core","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver-%extension-wiseconnect3_sdk%psram_core"}],"isEnabled":false,"name":"PSRAM Driver","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-PSRAM_Driver","label":"PSRAM Driver","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%sl_sdio_secondary_peripheral","componentId":"%extension-wiseconnect3_sdk%sl_sdio_secondary_peripheral","isConfigurable":false,"documentation":"","description":"The SDIO Secondary application shows how to read and write data in SDIO Secondary and demonstrates about soc clock setting, sdio secondary  initialization,  transmitting and receiving the data to and from the sdio master.\n","instantiable":false,"label":"SL SDIO Secondary Peripheral","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-Register-Level_API|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-Register-Level_API-%extension-wiseconnect3_sdk%sl_sdio_secondary_peripheral","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_sdio_secondary_peripheral","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-Register-Level_API-%extension-wiseconnect3_sdk%sl_sdio_secondary_peripheral"}],"isEnabled":false,"name":"Register-Level API","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-Register-Level_API","label":"Register-Level API","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%sl_sdio_secondary","componentId":"%extension-wiseconnect3_sdk%sl_sdio_secondary","isConfigurable":true,"documentation":"","description":"The SDIO Secondary application shows how to read and write data between SDIO Secondary external device which is going to act as Primary and demonstrates about soc clock setting,  sdio secondary  initialization, transmitting and receiving the data to and from the sdio primary and secondary. \n","instantiable":false,"label":"SDIO Secondary","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-SDIO_Slave_Driver|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-SDIO_Slave_Driver-%extension-wiseconnect3_sdk%sl_sdio_secondary","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_sdio_secondary","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-SDIO_Slave_Driver-%extension-wiseconnect3_sdk%sl_sdio_secondary"}],"isEnabled":false,"name":"SDIO Slave Driver","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-SDIO_Slave_Driver","label":"SDIO Slave Driver","type":"category"},{"keyWords":"%extension-wiseconnect3_sdk%adc_instance","componentId":"%extension-wiseconnect3_sdk%adc_instance","isConfigurable":true,"documentation":"","description":"ADC stands for Analog-to-Digital Converter. An ADC is a peripheral or component of a controller that converts analog signals (continuous voltage levels) into digital data (discrete binary values) that the controller can handle. Note: For Configuring, Configurable Parameters of ADC, Open the configuration wizard and configure, Below are the Configurable Parameters of ADC:\n  - Resolution\n  - Sampling Rate\n  - Input Voltage Range\n  - Reference Voltage\n  - Triggering and Conversion Modes\n  - Channel Selection\n  - Interrupts and DMA\nADC Supports instances.\n","instantiable":true,"label":"ADC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%adc_instance","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%adc_instance","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%adc_instance"},{"keyWords":"%extension-wiseconnect3_sdk%sl_analog_comparator","componentId":"%extension-wiseconnect3_sdk%sl_analog_comparator","isConfigurable":false,"documentation":"","description":"An analog comparator in a microcontroller is a peripheral that compares two analog input voltages and generates interrupt if non-inverting input is higher then inverting input. It typically has two input pins for comparing analog voltages. There are 9 possible inputs for  each pin of comparator, and 2 of the 9 are external pin inputs (GPIOs). It can compare external pin inputs, external pin input to internal voltages and internal voltages. It  supports 2 instances. When create an instance by default, comparator-2 will get installed. When you install this component, it will also be installing the  analog comparator dependency component,  which is the analog comparator driver's implementation.\n","instantiable":false,"label":"Analog Comparator","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_analog_comparator","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_analog_comparator","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_analog_comparator"},{"keyWords":"%extension-wiseconnect3_sdk%analog_comparator_instance","componentId":"%extension-wiseconnect3_sdk%analog_comparator_instance","isConfigurable":true,"documentation":"","description":"Add a Analog Comparator instance.\n","instantiable":true,"label":"Analog Comparator Instance","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%analog_comparator_instance","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%analog_comparator_instance","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%analog_comparator_instance"},{"keyWords":"%extension-wiseconnect3_sdk%sl_bjt_temperature_sensor","componentId":"%extension-wiseconnect3_sdk%sl_bjt_temperature_sensor","isConfigurable":false,"documentation":"","description":"By taking use of its temperature-dependent characteristics, a Bipolar Junction Transistor (BJT) can be utilized as a temperature sensor. By switching the current temperature mode, one can also obtain the temperature value in kelvin and fahrenheit.\n","instantiable":false,"label":"BJT Temperature Sensor","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_bjt_temperature_sensor","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_bjt_temperature_sensor","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_bjt_temperature_sensor"},{"keyWords":"%extension-wiseconnect3_sdk%sl_crc","componentId":"%extension-wiseconnect3_sdk%sl_crc","isConfigurable":false,"documentation":"","description":"This application contains an example code to demonstrate CRC Generation on DMA transferred data.","instantiable":false,"label":"CRC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_crc","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_crc","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_crc"},{"keyWords":"%extension-wiseconnect3_sdk%sl_calendar","componentId":"%extension-wiseconnect3_sdk%sl_calendar","isConfigurable":false,"documentation":"","description":"The calendar driver will set the day and time for the RTC.  When activated, it can also generate triggers for second and millisecond timeouts.  Once the date and time have been set, the RTC will maintain them until the next power cycle. It also supports ULP and  UULP power domain. When you install this component, it will also be installing the  Calendar dependency component,  which is the calendar driver's implementation.\n","instantiable":false,"label":"Calendar","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_calendar","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_calendar","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_calendar"},{"keyWords":"%extension-wiseconnect3_sdk%sl_config_timer","componentId":"%extension-wiseconnect3_sdk%sl_config_timer","isConfigurable":true,"documentation":"","description":"Configurable timers driver can be used for modulated signal output, event capture on the GPIOs in input mode, and clock and event counting. They can be configured to generate Pulse Width Modulation (PWM) output, In accordance with the ON and OFF periods that are programmed. Config timer will trigger interrupt on occurance of an event or reaching  match count value and notifies via callback functions. When you install this component, it will also be installing the  Config timer dependency component,  which is the Config timer driver's implementation. \n","instantiable":false,"label":"Config Timer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_config_timer","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_config_timer","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_config_timer"},{"keyWords":"%extension-wiseconnect3_sdk%sl_dac","componentId":"%extension-wiseconnect3_sdk%sl_dac","isConfigurable":true,"documentation":"","description":"The DAC Drivers can write at up to 5 Msps with a 10-Bit resolution.  There are two types of data sampling functions: blocking and non-blocking.   Non-blocking write data functions use DMA (FIFO mode) to write data  and notify completion via callback functions. DAC peripheral can also be run in ULP mode.\nWhen you install this component, it will also be installing the  DAC Core dependency, which is the DAC driver's implementation.\n","instantiable":false,"label":"DAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_dac","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_dac","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_dac"},{"keyWords":"%extension-wiseconnect3_sdk%sl_dma","componentId":"%extension-wiseconnect3_sdk%sl_dma","isConfigurable":true,"documentation":"","description":"Direct Memory Access (DMA) is a process of transferring data from  memory to memory,  peripehral to memory, memory to peripheral to another without the direct involvement  of the processor (CPU). The main benefit of using DMA is more efficient data movement  in the embedded system.\nOffering simple memory to memory transfer, peripheral to memory and memory to peripheral transfer functions.\nWhen you install this component, it will also be installing the  DMA dependency component,  which is the DMA driver's implementation.\nNote: When utilizing the UDMA1 instance in high power mode, it is advisable to allocate buffers in the ULP Memory block.  For further details on buffer allocation, please refer to the ULP UDMA example.\n","instantiable":false,"label":"DMA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_dma","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_dma","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_dma"},{"keyWords":"%extension-wiseconnect3_sdk%sl_efuse","componentId":"%extension-wiseconnect3_sdk%sl_efuse","isConfigurable":false,"documentation":"","description":"The EFUSE (Electrically programmable fuses) driver has one-time programmable memory, which is used to store configuration or data in integrated circuits.  These efuses employ 32-bit addressing, with each address being eight bits. To program and read these bits, utilize the eFuse controller.\nWhen you install this component, it will also be installing the  eFuse dependency component, which is the eFuse driver's implementation.\n","instantiable":false,"label":"Efuse","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_efuse","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_efuse","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_efuse"},{"keyWords":"%extension-wiseconnect3_sdk%sl_gpio","componentId":"%extension-wiseconnect3_sdk%sl_gpio","isConfigurable":false,"documentation":"","description":"The GPIO (General Purpose Input/Output) driver provides a comprehensive set of functions to configure and control the GPIO pins. The GPIO pins can be used for various purposes such as reading digital signals, controlling external devices, generating interrupts, etc. The GPIO driver simplifies the process of interacting with GPIO pins, making it easier to integrate GPIO functionality into the application. In GPIO one can use HP (High power), ULP (Ultra Low Power) or UULP (Ultra Ultra Low Power) pins.\n","instantiable":false,"label":"GPIO","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_gpio","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_gpio","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_gpio"},{"keyWords":"%extension-wiseconnect3_sdk%sl_gspi","componentId":"%extension-wiseconnect3_sdk%sl_gspi","isConfigurable":true,"documentation":"","description":"The GSPI Master driver supports sending, receiving, and transferring data at 116 MHz.  It enables full duplex and half duplex communication modes.  Offering both blocking and non-blocking data transfer functions.  The non-blocking functions utilize DMA to transfer data asynchronously,  signaling transfer completion via callback functions.\nWhen you install this component, it will also be installing the  GSPI dependency component,  which is the GSPI driver's implementation.\n","instantiable":false,"label":"GSPI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_gspi","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_gspi","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_gspi"},{"keyWords":"%extension-wiseconnect3_sdk%sl_hrng","componentId":"%extension-wiseconnect3_sdk%sl_hrng","isConfigurable":false,"documentation":"","description":"The HRNG driver enables the generation of true random and pseudo-random numbers. It supports secure applications requiring high-quality randomness, such as cryptographic functions. The driver offers APIs for starting, stopping, and retrieving random data from the HRNG peripheral. It operates in two modes ie, true random generation for enhanced security and pseudo-random for standard applications.","instantiable":false,"label":"HRNG - Hardware Random Number Generator","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_hrng","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_hrng","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_hrng"},{"keyWords":"%extension-wiseconnect3_sdk%i2c_instance","componentId":"%extension-wiseconnect3_sdk%i2c_instance","isConfigurable":true,"documentation":"","description":"I2C (Inter-Integrated Circuit) is another serial communication protocol.  It facilitates communication between multiple devices over just two lines: a data line (SDA - Serial Data)  and a clock line (SCL - Serial Clock). The I2C will be configured in leader mode. The SCL and SDA lines of leader controller are connected to Follower's SCL and SDA pins. There are three configurable I2C Master/Slave controllers in M4 - two in the MCU HP peripherals (I2C0, I2C1)  and I2C2 in the MCU ULP subsystem (ULP_I2C).\nNote: For Configuring, Configurable Parameters of I2C, open the configuration wizard and configure, Below are the Configurable Parameters of I2C:\n  - Instance Mode\n  - Instance Operating Mode\n  - Instance Transfer Type\n\nI2C Supports instances. Instances created must be named as I2C0, I2C1, I2C2. \nNote: When utilizing the I2C2 (ULP_I2C) instance in high power mode with DMA enabled, it is advisable to allocate buffers in the ULP Memory block.  For further details on buffer allocation, please refer to the ULP I2C Driver Leader example.\n","instantiable":true,"label":"I2C","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%i2c_instance","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%i2c_instance","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%i2c_instance"},{"keyWords":"%extension-wiseconnect3_sdk%i2s_instance","componentId":"%extension-wiseconnect3_sdk%i2s_instance","isConfigurable":true,"documentation":"","description":"I2S Supports instances. Instances created must be named as i2s0, ulp_i2s. \n","instantiable":true,"label":"I2S","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%i2s_instance","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%i2s_instance","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%i2s_instance"},{"keyWords":"%extension-wiseconnect3_sdk%sl_usart_iostream","componentId":"%extension-wiseconnect3_sdk%sl_usart_iostream","isConfigurable":false,"documentation":"","description":"IO Stream  UART communication is often performed using lower-level programming,  interacting directly with hardware registers or using dedicated UART libraries. It is operates in asyncronous mode, it will send and receive data. It performs communication over the virtual COM port (VCOM) in a bare metal environment using  I/O stream service. The example will echo back any charaters it receives over the serial connection.\n","instantiable":false,"label":"IO Stream: USART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_usart_iostream","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_usart_iostream","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_usart_iostream"},{"keyWords":"%extension-wiseconnect3_sdk%pwm_instance","componentId":"%extension-wiseconnect3_sdk%pwm_instance","isConfigurable":true,"documentation":"","description":"The Motor Control Pulse Width Modulation (MCPWM) controller is used to generate a periodic pulse waveform, which is useful in motor control and power control applications. The MCPWM controller acts as a timer to count up to a period count value. The time period and the duty cycle of the pulses are both programmable.\nNote:\n For Configuring, Configurable Parameters of PWM, Open the configuration wizard and configure, Below are the Configurable Parameters of PWM:\n   - Frequency\n   - Output Polarity\n   - PWM Mode\n   - Timer counter\n   - Duty cycle\n   - Base Timer Mode and Selection\n   - External Trigger\n\nPWM Supports instances.\n","instantiable":true,"label":"PWM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%pwm_instance","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%pwm_instance","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%pwm_instance"},{"keyWords":"%extension-wiseconnect3_sdk%sl_qei","componentId":"%extension-wiseconnect3_sdk%sl_qei","isConfigurable":true,"documentation":"","description":"The quadrature encoder interface(QEI) decodes the digital pulses from a quadrature encoder wheel to integrate position over time and determine direction of rotation. QEI is also known as a 2-channel incremental encoder, converts angular displacement into two pulse signals.These two pulses are positioned 90 degrees out of phase. By monitoring both the number of pulses and the relative phase of the two signals, the user code can track the position, direction of rotation, and velocity. \n","instantiable":false,"label":"QEI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_qei","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_qei","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_qei"},{"keyWords":"%extension-wiseconnect3_sdk%sl_ssi_instance","componentId":"%extension-wiseconnect3_sdk%sl_ssi_instance","isConfigurable":true,"documentation":"","description":"The SSI driver supports sending, receiving, and transferring data at 40 MHz.  It enables full duplex and half duplex communication modes.  Offering both blocking and non-blocking data transfer functions.  The non-blocking functions utilize DMA to transfer data asynchronously,  signaling transfer completion via callback functions. This diriver can be configured as ULP-SSI using UC. SSI can be configured in master, slave and ULP master modes.\nWhen you install this component, it will also be installing the  SSI  dependency component,  which is the SSI driver's implementation.\nNote: When utilizing the ULP SSI instance in high power mode with DMA enabled, it is advisable to allocate buffers in the ULP Memory block.  For further details on buffer allocation, please refer to the ULP SSI MASTER example.\nSSI Supports modes. Modes created must be named as master, slave, ulp_master. \n","instantiable":true,"label":"SSI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_ssi_instance","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_ssi_instance","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_ssi_instance"},{"keyWords":"%extension-wiseconnect3_sdk%sl_sysrtc","componentId":"%extension-wiseconnect3_sdk%sl_sysrtc","isConfigurable":true,"documentation":"","description":"The System Real-Time Clock (SYSRTC) driver provides precise timekeeping and timer capabilities required by a variety of applications.  It is required for activities such as accurate time measurement and scheduling an event.  The SYSRTC driver provides complete features for setting and running the peripheral,  ensuring high performance and reliability in time-critical applications. It supports two groups and each group have two compare channels and one capture channel.  It saves power by letting all groups share a single counter. And this also supports ULP and UULP power domain. When you select this component, it will also be installing the  SYSRTC  dependency component,  which is the SYSRTC driver's implementation.\n","instantiable":false,"label":"SysRTC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_sysrtc","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_sysrtc","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_sysrtc"},{"keyWords":"%extension-wiseconnect3_sdk%sl_uart","componentId":"%extension-wiseconnect3_sdk%sl_uart","isConfigurable":true,"documentation":"","description":"UART stands for Universal Asynchronous Receiver/Transmitter. It is a communication protocol  used for serial communication between devices. It is used to exchange data between microcontrollers, sensors, and other peripherals. It supports half and full duplex communicationwith TX(transmitter) and  RX(Receiving) lines.  Configurable parameters in UART:\n  - Baud Rate\n  - Data Width\n","instantiable":false,"label":"UART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_uart","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_uart","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_uart"},{"keyWords":"%extension-wiseconnect3_sdk%ulp_timers_instance","componentId":"%extension-wiseconnect3_sdk%ulp_timers_instance","isConfigurable":true,"documentation":"","description":"ULP Timer will works in ultra low power mode and is designed to consume very little power in comparison to regular timers. It allows a microcontroller to wake up periodically, perform a task, and then return  to a low-power state to conserve energy.\nNote: For Configuring, Configurable Parameters of ULP Timer, Open the configuration wizard and configure, Below are the Configurable Parameters of ULP Timer:\n  - Timer Instance\n  - Timer Type\n  - Timer Mode\n  - Timer Direction\n\nULP Timer Supports instances.\n","instantiable":true,"label":"ULP Timer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%ulp_timers_instance","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%ulp_timers_instance","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%ulp_timers_instance"},{"keyWords":"%extension-wiseconnect3_sdk%sl_ulp_uart","componentId":"%extension-wiseconnect3_sdk%sl_ulp_uart","isConfigurable":true,"documentation":"","description":"ULP UART stands for Ultra Low Power Universal Asynchronous Receiver/Transmitter. It is a communication protocol  used for serial communication between devices. It is used to exchange data between microcontrollers, sensors, and other peripherals. It supports half and full duplex communicationwith TX(transmitter) and  RX(Receiving) lines.  Configurable parameters in ULP UART:\n  - Baud Rate\n  - Data Width\n\nNote: When utilizing the ULP UART instance in high power mode with DMA enabled, it is advisable to allocate buffers in the ULP Memory block.  For further details on buffer allocation, please refer to the ULP UART example.\n","instantiable":false,"label":"ULP_UART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_ulp_uart","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_ulp_uart","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_ulp_uart"},{"keyWords":"%extension-wiseconnect3_sdk%sl_usart","componentId":"%extension-wiseconnect3_sdk%sl_usart","isConfigurable":true,"documentation":"","description":"USART stands for Universal Synchronous Asynchronous Receiver/Transmitter. It is a communication protocol  used for serial communication between devices. It is used to exchange data between microcontrollers, sensors, and other peripherals. It supports half and full duplex communicationwith TX(transmitter) and  RX(Receiving) lines.  Configurable parameters in USART:\n  - Baud Rate\n  - Select the Asynchronous/Synchronous Modes \n  - Data Width\n","instantiable":false,"label":"USART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_usart","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_usart","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_usart"},{"keyWords":"%extension-wiseconnect3_sdk%sl_watchdog_timer","componentId":"%extension-wiseconnect3_sdk%sl_watchdog_timer","isConfigurable":true,"documentation":"","description":"WDT represents Watchdog Timer/Window Watchdog Timer. The WDT driver improves system dependability by monitoring a program's performance and resetting the system in the event of a malfunction or failure. Operates in both open and closed modes.  In addition, it will restart and reset the system/device in response to interruptions and it also supports UULP power domain. When you install this component, it will also be installing the  watchdog tiemr  dependency component,  which is the watchdog tiemr driver's implementation.\n","instantiable":false,"label":"WDT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_watchdog_timer","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_watchdog_timer","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral-%extension-wiseconnect3_sdk%sl_watchdog_timer"}],"isEnabled":false,"name":"Peripheral","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Peripheral","label":"Peripheral","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%sl_clock_manager","componentId":"%extension-wiseconnect3_sdk%sl_clock_manager","isConfigurable":false,"documentation":"","description":"Initiates the Clock Manager (CM) component to manage the MCU's clock usage, provides API support for configuring clocks in the application.\n","instantiable":false,"label":"Clock Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Clock_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Clock_Manager-%extension-wiseconnect3_sdk%sl_clock_manager","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_clock_manager","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Clock_Manager-%extension-wiseconnect3_sdk%sl_clock_manager"}],"isEnabled":false,"name":"Clock Manager","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Clock_Manager","label":"Clock Manager","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%adc_ulp_component","componentId":"%extension-wiseconnect3_sdk%adc_ulp_component","isConfigurable":false,"documentation":"","description":"ULP ADC component will enable ADC in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed. If an instantiable component then the user needs to install the instance manually.\n","instantiable":false,"label":"PM ULP ADC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%adc_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%adc_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%adc_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%bod_ulp_component","componentId":"%extension-wiseconnect3_sdk%bod_ulp_component","isConfigurable":false,"documentation":"","description":"ULP BOD component will enable BOD in the low-power state. It moves all the peripheral dependencies in RAM.  It also installs the peripheral component if already not installed. \n","instantiable":false,"label":"PM ULP BOD","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%bod_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%bod_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%bod_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%cts_ulp_component","componentId":"%extension-wiseconnect3_sdk%cts_ulp_component","isConfigurable":false,"documentation":"","description":"ULP CTS component will enable Capacitive Touch Sensor in the low-power mode.  It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed. \n","instantiable":false,"label":"PM ULP CTS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%cts_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%cts_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%cts_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%comparator_ulp_component","componentId":"%extension-wiseconnect3_sdk%comparator_ulp_component","isConfigurable":false,"documentation":"","description":"ULP COMPARATOR component will enable Comparator in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.\n","instantiable":false,"label":"PM ULP Comparator","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%comparator_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%comparator_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%comparator_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%dac_ulp_component","componentId":"%extension-wiseconnect3_sdk%dac_ulp_component","isConfigurable":false,"documentation":"","description":"ULP DAC component will enable DAC in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.\n","instantiable":false,"label":"PM ULP DAC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%dac_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%dac_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%dac_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%dma_ulp_component","componentId":"%extension-wiseconnect3_sdk%dma_ulp_component","isConfigurable":false,"documentation":"","description":"ULP DMA component will enable DMA in the low-power mode.  It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.\n","instantiable":false,"label":"PM ULP DMA","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%dma_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%dma_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%dma_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%debug_ulp_component","componentId":"%extension-wiseconnect3_sdk%debug_ulp_component","isConfigurable":false,"documentation":"","description":"ULP DEBUG component will enable Debug in the low-power mode.  It moves all the peripheral dependencies to RAM.\n","instantiable":false,"label":"PM ULP Debug","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%debug_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%debug_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%debug_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%gpio_ulp_component","componentId":"%extension-wiseconnect3_sdk%gpio_ulp_component","isConfigurable":false,"documentation":"","description":"ULP GPIO component will enable execution of GPIO in the low power state. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.\n","instantiable":false,"label":"PM ULP GPIO","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%gpio_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%gpio_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%gpio_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%i2c_ulp_component","componentId":"%extension-wiseconnect3_sdk%i2c_ulp_component","isConfigurable":false,"documentation":"","description":"ULP I2C component will enable I2C in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.  If an instantiable component then the user needs to install the instance manually.\n","instantiable":false,"label":"PM ULP I2C","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%i2c_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%i2c_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%i2c_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%i2s_ulp_component","componentId":"%extension-wiseconnect3_sdk%i2s_ulp_component","isConfigurable":false,"documentation":"","description":"ULP I2S component will enable I2S in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.\n","instantiable":false,"label":"PM ULP I2S","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%i2s_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%i2s_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%i2s_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%ir_ulp_component","componentId":"%extension-wiseconnect3_sdk%ir_ulp_component","isConfigurable":false,"documentation":"","description":"ULP IR component will enable IR in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.\n","instantiable":false,"label":"PM ULP IR","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%ir_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%ir_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%ir_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%ssi_ulp_component","componentId":"%extension-wiseconnect3_sdk%ssi_ulp_component","isConfigurable":false,"documentation":"","description":"ULP SSI component will enable  SSI in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.\n","instantiable":false,"label":"PM ULP SSI","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%ssi_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%ssi_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%ssi_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%sysrtc_ulp_component","componentId":"%extension-wiseconnect3_sdk%sysrtc_ulp_component","isConfigurable":false,"documentation":"","description":"ULP SYSRTC component will enable  Sysrtc in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.\n","instantiable":false,"label":"PM ULP SysRTC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%sysrtc_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sysrtc_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%sysrtc_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%timer_ulp_component","componentId":"%extension-wiseconnect3_sdk%timer_ulp_component","isConfigurable":false,"documentation":"","description":"ULP TIMER component will enable  Timer in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed. If an instantiable component then the user needs to install the instance manually.\"\n","instantiable":false,"label":"PM ULP Timer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%timer_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%timer_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%timer_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%usart_ulp_component","componentId":"%extension-wiseconnect3_sdk%usart_ulp_component","isConfigurable":false,"documentation":"","description":"ULP UART component will enable  USART in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.\n","instantiable":false,"label":"PM ULP UART","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%usart_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%usart_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral-%extension-wiseconnect3_sdk%usart_ulp_component"}],"isEnabled":false,"name":"ULP Peripheral","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-ULP_Peripheral","label":"ULP Peripheral","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%calendar_ulp_component","componentId":"%extension-wiseconnect3_sdk%calendar_ulp_component","isConfigurable":false,"documentation":"","description":"ULP Calendar component will enable Calendar in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.  As this is a NPSS peripheral, it also contributes to the wakeup source handler if the wakeup source config component  is installed. It initializes the wakeup source as per the selection in Wakeup Source Configuration UC. This component can be used for ultra-low power state also.\n","instantiable":false,"label":"PM UULP Calendar","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources-%extension-wiseconnect3_sdk%calendar_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%calendar_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources-%extension-wiseconnect3_sdk%calendar_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%dst_ulp_component","componentId":"%extension-wiseconnect3_sdk%dst_ulp_component","isConfigurable":false,"documentation":"","description":"ULP DST component will enable DST in the low-power mode.  It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.\n","instantiable":false,"label":"PM UULP Deep Sleep Timer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources-%extension-wiseconnect3_sdk%dst_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%dst_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources-%extension-wiseconnect3_sdk%dst_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%gpio_npss_component","componentId":"%extension-wiseconnect3_sdk%gpio_npss_component","isConfigurable":false,"documentation":"","description":"ULP GPIO component will enable GPIO in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.  As this is a NPSS peripheral, it also contributes to the wakeup source handler if the wakeup source config component is installed. It initializes the wakeup source as per the selection in Wakeup Source Configuration UC. This component can be used for ultra-low power state also.\n","instantiable":false,"label":"PM UULP GPIO","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources-%extension-wiseconnect3_sdk%gpio_npss_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%gpio_npss_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources-%extension-wiseconnect3_sdk%gpio_npss_component"},{"keyWords":"%extension-wiseconnect3_sdk%wdt_ulp_component","componentId":"%extension-wiseconnect3_sdk%wdt_ulp_component","isConfigurable":false,"documentation":"","description":"ULP Watchdog Timer component will enable WDT in the low-power mode. It moves all the peripheral dependencies to RAM.  It also installs the peripheral component if already not installed.  As this is a NPSS peripheral, it also contributes to the wakeup source handler if the wakeup source config component is installed.  It initializes the wakeup source as per the selection in Wakeup Source Configuration UC. This component can be used for ultra-low power state also.\n","instantiable":false,"label":"PM UULP Watchdog Timer","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources-%extension-wiseconnect3_sdk%wdt_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%wdt_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources-%extension-wiseconnect3_sdk%wdt_ulp_component"},{"keyWords":"%extension-wiseconnect3_sdk%wireless_wakeup_ulp_component","componentId":"%extension-wiseconnect3_sdk%wireless_wakeup_ulp_component","isConfigurable":false,"documentation":"","description":"As this is a NPSS peripheral, it also contributes to the wakeup source handler  if the wakeup source config component is installed. It initializes the wakeup source as per the selection in Wakeup Source Configuration UC.\n","instantiable":false,"label":"PM UULP Wireless Wakeup","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources-%extension-wiseconnect3_sdk%wireless_wakeup_ulp_component","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%wireless_wakeup_ulp_component","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources-%extension-wiseconnect3_sdk%wireless_wakeup_ulp_component"}],"isEnabled":false,"name":"UULP Wakeup Sources","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-UULP_Wakeup_Sources","label":"UULP Wakeup Sources","type":"category"},{"keyWords":"%extension-wiseconnect3_sdk%wakeup_source_config","componentId":"%extension-wiseconnect3_sdk%wakeup_source_config","isConfigurable":true,"documentation":"","description":"Wakeup Source Configuration component will enable the NPSS peripherals as wakeup source.  This also initializes the peripheral and configure as a wakeup source as per the selection in User Configuration.\nInstall the appropriate component based on the configured wakeup source.\nNote: The default sleep time for the deep sleep timer is 10 ms because reducing it further does not result in any decrease in sleep current.\n","instantiable":false,"label":"PM Wakeup Source Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-%extension-wiseconnect3_sdk%wakeup_source_config","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%wakeup_source_config","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-%extension-wiseconnect3_sdk%wakeup_source_config"},{"keyWords":"%extension-wiseconnect3_sdk%sl_power_manager","componentId":"%extension-wiseconnect3_sdk%sl_power_manager","isConfigurable":false,"documentation":"","description":"Initiates the Power Manager (PM) component to manage the MCU's power usage.  The system is initially set to PS3 power-save mode. The PM also allows the user to  specify callbacks that will be executed when entering or exiting specific Power States.  This enables the user to perform any accounting after PS transition occurrences.  It also exposes a set of events that other components may utilize to register  handlers for the power manager hooks function. \n","instantiable":false,"label":"Power Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-%extension-wiseconnect3_sdk%sl_power_manager","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_power_manager","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-%extension-wiseconnect3_sdk%sl_power_manager"},{"keyWords":"%extension-wiseconnect3_sdk%power_manager_advance_config","componentId":"%extension-wiseconnect3_sdk%power_manager_advance_config","isConfigurable":false,"documentation":"","description":"Provides optimized configuration for the peripheral enable/disable as well as the RAM retention. The default configuration provides the best current measurement, if needed user can modify the  configuration which may impact the current numbers. RAM configuration is provided either by size or by Bank number, the user can opt for anyone.  Priority is given to the RAM Bank number.\n","instantiable":false,"label":"Power Manager Advance Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-%extension-wiseconnect3_sdk%power_manager_advance_config","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%power_manager_advance_config","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-%extension-wiseconnect3_sdk%power_manager_advance_config"},{"keyWords":"%extension-wiseconnect3_sdk%power_manager_config","componentId":"%extension-wiseconnect3_sdk%power_manager_config","isConfigurable":false,"documentation":"","description":"Provides configuration for the peripheral enable/disable as well as the RAM retention.  Supports the configuration of HP, ULP, and UULP peripherals. RAM configuration is provided either by size or by Bank number, the user can opt for anyone.  Priority is given to the RAM Bank number.\n","instantiable":false,"label":"Power Manager Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-%extension-wiseconnect3_sdk%power_manager_config","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%power_manager_config","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-%extension-wiseconnect3_sdk%power_manager_config"},{"keyWords":"%extension-wiseconnect3_sdk%sl_power_manager_debug","componentId":"%extension-wiseconnect3_sdk%sl_power_manager_debug","isConfigurable":true,"documentation":"","description":"Provides the debugging mechanism in the power manager service. It maintains the requirement for all the power states and provides the power state requirement owner and power state requirement.\n","instantiable":false,"label":"Power Manager Debug (Si91x)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-%extension-wiseconnect3_sdk%sl_power_manager_debug","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_power_manager_debug","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager-%extension-wiseconnect3_sdk%sl_power_manager_debug"}],"isEnabled":false,"name":"Power Manager","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-Power_Manager","label":"Power Manager","type":"category"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_cpc_security","componentId":"%extension-wiseconnect3_sdk%sl_si91x_cpc_security","isConfigurable":false,"documentation":"","description":"CPC Security Si91x\n","instantiable":false,"label":"CPC Security Si91x","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_cpc_security","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_cpc_security","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_cpc_security"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_etm","componentId":"%extension-wiseconnect3_sdk%sl_si91x_etm","isConfigurable":false,"documentation":"","description":"An Embedded Trace Macrocell(ETM) is a real-time trace module providing instruction execution flow and data access patterns, for debugging and optimization. In this file, we are configuring the ETM pins and core registers that are needed for ETM initialization. The operating frequency of the ETM in SiWx917 is greater than  or equal to 40MHz. It is configured to operate at 120 MHz by default.\n","instantiable":false,"label":"ETM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_etm","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_etm","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_etm"},{"keyWords":"%extension-wiseconnect3_sdk%iostream_si91x","componentId":"%extension-wiseconnect3_sdk%iostream_si91x","isConfigurable":true,"documentation":"","description":"The IO Stream component allows to read/write data using a variety of physical communication interfaces, or Streams. This allows for standardized data  transfer operations while abstracting the underlying interface. This component provides an IO Stream implementation for the Si91x.\n","instantiable":false,"label":"IO Stream Si91x","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%iostream_si91x","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%iostream_si91x","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%iostream_si91x"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_littlefs_ext_flash","componentId":"%extension-wiseconnect3_sdk%sl_si91x_littlefs_ext_flash","isConfigurable":true,"documentation":"","description":"A little fail-safe filesystem. This component is used for performing file operations on common flash parts with external flash connected on GPIO_46 to GPIO_51 for common flash parts.  Configure SL_LITTLEFS_BASE_EXT in sl_si91x_littlefs_ext_flash_config.h file to indicate start address for littlefs region in external connected flash. note: QSPI2 peripheral is used to access the external flash. External flash base address starts from 0xA000000. For example, external flash physical address 0x00000000 translates to 0x0A000000.\n","instantiable":false,"label":"Little FS for common flash parts with external flash","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_littlefs_ext_flash","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_littlefs_ext_flash","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_littlefs_ext_flash"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_littlefs","componentId":"%extension-wiseconnect3_sdk%sl_si91x_littlefs","isConfigurable":false,"documentation":"","description":"A little fail-safe filesystem. This component is used for performing file operations on external flash MX25R6435F.  Basically on dual flash parts.\n","instantiable":false,"label":"Little FS for dual flash parts.","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_littlefs","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_littlefs","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_littlefs"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_nvm3","componentId":"%extension-wiseconnect3_sdk%sl_si91x_nvm3","isConfigurable":true,"documentation":"","description":"The NVM3 driver provides a means to write and read data objects (key/value pairs) stored in flash. Wear-leveling is applied to reduce erase and write cycles and maximize flash lifetime. The driver is resilient to power loss and reset events, ensuring that objects retrieved from the driver are always in a valid state. A single NVM3 instance can be shared among several wireless stacks and application code, making it well-suited for multiprotocol applications. This component includes only the NVM3 driver core. To configure and create the default instance of this driver, the NVM3 Default Instance component should be included in the project.\nWhen you install this component, it will also be installing the NVM3 dependency component,  which is the NVM3 driver's implementation.\n","instantiable":false,"label":"NVM3 for Si91x","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_nvm3","isEditable":true,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_nvm3","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_nvm3"},{"keyWords":"%extension-wiseconnect3_sdk%si91x_tickless_mode","componentId":"%extension-wiseconnect3_sdk%si91x_tickless_mode","isConfigurable":false,"documentation":"","description":"Free RTOS low power tickless mode with sleep timer.","instantiable":false,"label":"SI91X TICK-LESS MODE","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%si91x_tickless_mode","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%si91x_tickless_mode","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%si91x_tickless_mode"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_errno","componentId":"%extension-wiseconnect3_sdk%sl_si91x_errno","isConfigurable":false,"documentation":"","description":"Enables thread-safe errno\n","instantiable":false,"label":"SL errno","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_errno","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_errno","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_errno"},{"keyWords":"%extension-wiseconnect3_sdk%sensor_hub","componentId":"%extension-wiseconnect3_sdk%sensor_hub","isConfigurable":false,"documentation":"","description":"Si91x Sensor Hub API. \n","instantiable":false,"label":"Sensor Hub","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sensor_hub","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sensor_hub","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sensor_hub"},{"keyWords":"%extension-wiseconnect3_sdk%sleeptimer_si91x","componentId":"%extension-wiseconnect3_sdk%sleeptimer_si91x","isConfigurable":false,"documentation":"","description":"The Si91x Sleeptimer  driver provides software timers and delays using a low-frequency  real-time clock peripheral. Sleep Timer uses one Hardware Timer and creates multiple software timer instances. Sleep Timer can be used for creating timers. When you install this component, it will also be installing the Sleep timer dependency component,  which is the Sleep timer driver's implementation.\n","instantiable":false,"label":"Sleep Timer for Si91x","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sleeptimer_si91x","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sleeptimer_si91x","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sleeptimer_si91x"},{"keyWords":"%extension-wiseconnect3_sdk%sl_wdt_manager","componentId":"%extension-wiseconnect3_sdk%sl_wdt_manager","isConfigurable":true,"documentation":"","description":"Initiates the WDT Manager (WDTM) component to manage the MCU's reset recovery mechanism , provides API support for configuring wdt in the application.\n","instantiable":false,"label":"WDT Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_wdt_manager","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_wdt_manager","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_wdt_manager"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_cpc_sdio","componentId":"%extension-wiseconnect3_sdk%sl_si91x_cpc_sdio","isConfigurable":false,"documentation":"","description":"Provides Co-Processor Communication (CPC) protocol service for SDIO driver.\n","instantiable":false,"label":"sl_si91x_cpc_sdio","type":"component","quality":"EXPERIMENTAL","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_cpc_sdio","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_cpc_sdio","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service-%extension-wiseconnect3_sdk%sl_si91x_cpc_sdio"}],"isEnabled":false,"name":"Service","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Service","label":"Service","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%wiseconnect_toolchain_plugin","componentId":"%extension-wiseconnect3_sdk%wiseconnect_toolchain_plugin","isConfigurable":false,"documentation":"","description":"Toolchain support for GCC in Wiseconnect. Selecting this component will also include the GCC Toolchain component.\n","instantiable":false,"label":"GCC Toolchain Support","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Toolchain|wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Toolchain-%extension-wiseconnect3_sdk%wiseconnect_toolchain_plugin","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%wiseconnect_toolchain_plugin","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Toolchain-%extension-wiseconnect3_sdk%wiseconnect_toolchain_plugin"}],"isEnabled":false,"name":"Toolchain","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU-Toolchain","label":"Toolchain","type":"category"}],"isEnabled":false,"name":"MCU","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-MCU","label":"MCU","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%si91x_memory_default_config","componentId":"%extension-wiseconnect3_sdk%si91x_memory_default_config","isConfigurable":false,"documentation":"","description":"Provides default RAM memory configuration for the Si91x.\n","instantiable":false,"label":"Default RAM Memory Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration|wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration-%extension-wiseconnect3_sdk%si91x_memory_default_config","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%si91x_memory_default_config","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration-%extension-wiseconnect3_sdk%si91x_memory_default_config"},{"keyWords":"%extension-wiseconnect3_sdk%si91x_mem_config_3","componentId":"%extension-wiseconnect3_sdk%si91x_mem_config_3","isConfigurable":false,"documentation":"","description":"Provides RAM memory configuration option 3 for the Si91x, namely EXT_FEAT_352K_M4SS_320K. This memory split provides sufficient RAM split to enable advance features on the MCU and basic features on the wireless subsystem.\n","instantiable":false,"label":"MEMORY_MCU_ADVANCED_WIRELESS_BASIC","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration|wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration-%extension-wiseconnect3_sdk%si91x_mem_config_3","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%si91x_mem_config_3","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration-%extension-wiseconnect3_sdk%si91x_mem_config_3"},{"keyWords":"%extension-wiseconnect3_sdk%si91x_mem_config_1","componentId":"%extension-wiseconnect3_sdk%si91x_mem_config_1","isConfigurable":false,"documentation":"","description":"Provides RAM memory configuration option 1 for the Si91x, namely EXT_FEAT_480K_M4SS_192K. This memory split provides sufficient RAM split to enable basic features on the  MCU and advance features on the wireless subsystem. This is the default configuration.\n","instantiable":false,"label":"MEMORY_MCU_BASIC_WIRELESS_ADVANCED","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration|wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration-%extension-wiseconnect3_sdk%si91x_mem_config_1","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%si91x_mem_config_1","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration-%extension-wiseconnect3_sdk%si91x_mem_config_1"},{"keyWords":"%extension-wiseconnect3_sdk%si91x_mem_config_2","componentId":"%extension-wiseconnect3_sdk%si91x_mem_config_2","isConfigurable":false,"documentation":"","description":"Provides RAM memory configuration option 2 for the Si91x, namely EXT_FEAT_416K_M4SS_256K. This memory split provides sufficient RAM split to enable medium feature sets on both the MCU and the wireless subsystem.\n","instantiable":false,"label":"MEMORY_MCU_MEDIUM_WIRELESS_MEDIUM","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration|wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration-%extension-wiseconnect3_sdk%si91x_mem_config_2","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%si91x_mem_config_2","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration-%extension-wiseconnect3_sdk%si91x_mem_config_2"}],"isEnabled":false,"name":"Memory Configuration","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Memory_Configuration","label":"Memory Configuration","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_basic_buffers","componentId":"%extension-wiseconnect3_sdk%sl_si91x_basic_buffers","isConfigurable":false,"documentation":"","description":"This component implements a malloc-based buffer system for the Si91x\n","instantiable":false,"label":"Basic Buffer Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Buffer_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Buffer_Manager-%extension-wiseconnect3_sdk%sl_si91x_basic_buffers","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_basic_buffers","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Buffer_Manager-%extension-wiseconnect3_sdk%sl_si91x_basic_buffers"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_mem_pool_buffers","componentId":"%extension-wiseconnect3_sdk%sl_si91x_mem_pool_buffers","isConfigurable":false,"documentation":"","description":"Si91x Memory Pool based buffer system\n","instantiable":false,"label":"Memory Pool Buffers","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Buffer_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Buffer_Manager-%extension-wiseconnect3_sdk%sl_si91x_mem_pool_buffers","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_mem_pool_buffers","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Buffer_Manager-%extension-wiseconnect3_sdk%sl_si91x_mem_pool_buffers"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_mem_pool_buffers_with_quota","componentId":"%extension-wiseconnect3_sdk%sl_si91x_mem_pool_buffers_with_quota","isConfigurable":false,"documentation":"","description":"Si91x Memory Pool based buffer system with quota based allocation and deallocation\n","instantiable":false,"label":"Memory Pool buffers With Quota","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Buffer_Manager|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Buffer_Manager-%extension-wiseconnect3_sdk%sl_si91x_mem_pool_buffers_with_quota","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_mem_pool_buffers_with_quota","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Buffer_Manager-%extension-wiseconnect3_sdk%sl_si91x_mem_pool_buffers_with_quota"}],"isEnabled":false,"name":"Buffer Manager","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Buffer_Manager","label":"Buffer Manager","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_internal_stack","componentId":"%extension-wiseconnect3_sdk%sl_si91x_internal_stack","isConfigurable":false,"documentation":"","description":"The internal network stack component offloads the network stack to the Si91x Wireless Subsystem\n","instantiable":false,"label":"Internal Network Stack","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sl_si91x_internal_stack","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_internal_stack","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sl_si91x_internal_stack"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_lwip_stack","componentId":"%extension-wiseconnect3_sdk%sl_si91x_lwip_stack","isConfigurable":false,"documentation":"","description":"The LwIP network stack component enables the LwIP network stack on the host MCU.\n","instantiable":false,"label":"LwIP Network Stack (Hosted)","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sl_si91x_lwip_stack","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_lwip_stack","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sl_si91x_lwip_stack"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_spi_bus","componentId":"%extension-wiseconnect3_sdk%sl_si91x_spi_bus","isConfigurable":false,"documentation":"","description":"This component implements SPI communication interface to Si91x from the host MCU.\n","instantiable":false,"label":"Si91x NCP SPI bus interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sl_si91x_spi_bus","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_spi_bus","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sl_si91x_spi_bus"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_uart_bus","componentId":"%extension-wiseconnect3_sdk%sl_si91x_uart_bus","isConfigurable":false,"documentation":"","description":"This component implements UART communication interface to Si91x from the host MCU.\n","instantiable":false,"label":"Si91x NCP UART bus interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sl_si91x_uart_bus","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_uart_bus","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sl_si91x_uart_bus"},{"keyWords":"%extension-wiseconnect3_sdk%sli_si91x_ncp_spi_config","componentId":"%extension-wiseconnect3_sdk%sli_si91x_ncp_spi_config","isConfigurable":false,"documentation":"","description":"This component implements NCP configuration for host MCU.\n","instantiable":false,"label":"Si91x NCP bus SPI configuration.","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sli_si91x_ncp_spi_config","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sli_si91x_ncp_spi_config","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sli_si91x_ncp_spi_config"},{"keyWords":"%extension-wiseconnect3_sdk%sli_si91x_ncp_uart_config","componentId":"%extension-wiseconnect3_sdk%sli_si91x_ncp_uart_config","isConfigurable":false,"documentation":"","description":"This component implements NCP configuration for host MCU.\n","instantiable":false,"label":"Si91x NCP bus USART configuration.","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sli_si91x_ncp_uart_config","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sli_si91x_ncp_uart_config","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sli_si91x_ncp_uart_config"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_ncp_bus","componentId":"%extension-wiseconnect3_sdk%sl_si91x_ncp_bus","isConfigurable":false,"documentation":"","description":"This component implements NCP communication interface to Si91x from the host MCU.\n","instantiable":false,"label":"Si91x NCP bus interface","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sl_si91x_ncp_bus","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_ncp_bus","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack-%extension-wiseconnect3_sdk%sl_si91x_ncp_bus"}],"isEnabled":false,"name":"Network Stack","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Network_Stack","label":"Network Stack","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_asynchronous_socket","componentId":"%extension-wiseconnect3_sdk%sl_si91x_asynchronous_socket","isConfigurable":false,"documentation":"","description":"Si91x Asynchronous Socket\n","instantiable":false,"label":"Si91x Asynchronous Socket","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Socket|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Socket-%extension-wiseconnect3_sdk%sl_si91x_asynchronous_socket","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_asynchronous_socket","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Socket-%extension-wiseconnect3_sdk%sl_si91x_asynchronous_socket"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_socket","componentId":"%extension-wiseconnect3_sdk%sl_si91x_socket","isConfigurable":false,"documentation":"","description":"The Si91x Socket provides an API to manage Si91x internal sockets\n","instantiable":false,"label":"Si91x Socket","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Socket|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Socket-%extension-wiseconnect3_sdk%sl_si91x_socket","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_socket","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Socket-%extension-wiseconnect3_sdk%sl_si91x_socket"}],"isEnabled":false,"name":"Socket","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-Socket","label":"Socket","type":"category"},{"keyWords":"%extension-wiseconnect3_sdk%ble","componentId":"%extension-wiseconnect3_sdk%ble","isConfigurable":false,"documentation":"","description":"BLE API Implementation\n","instantiable":false,"label":"BLE","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-%extension-wiseconnect3_sdk%ble","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%ble","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-%extension-wiseconnect3_sdk%ble"},{"keyWords":"%extension-wiseconnect3_sdk%sl_si91x_wireless","componentId":"%extension-wiseconnect3_sdk%sl_si91x_wireless","isConfigurable":false,"documentation":"","description":"Si91x Wireless Subsystem provides an API to manage the Wireless Subsystem in the Si91x SoC\n","instantiable":false,"label":"Si91x Wireless Subsystem","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Device|wiseconnect3_sdk:3.4.0-Device-Si91x|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless|wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-%extension-wiseconnect3_sdk%sl_si91x_wireless","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_si91x_wireless","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless-%extension-wiseconnect3_sdk%sl_si91x_wireless"}],"isEnabled":false,"name":"Wireless","id":"wiseconnect3_sdk:3.4.0-Device-Si91x-Wireless","label":"Wireless","type":"category"}],"isEnabled":false,"name":"Si91x","id":"wiseconnect3_sdk:3.4.0-Device-Si91x","label":"Si91x","type":"category"}],"isEnabled":false,"name":"Device","id":"wiseconnect3_sdk:3.4.0-Device","label":"Device","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%basic_credential_manager","componentId":"%extension-wiseconnect3_sdk%basic_credential_manager","isConfigurable":false,"documentation":"","description":"Basic Credential Manager provides a basic reference implementation for managing credentials\n","instantiable":false,"label":"Basic Credential Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Protocol|wiseconnect3_sdk:3.4.0-Protocol-%extension-wiseconnect3_sdk%basic_credential_manager","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%basic_credential_manager","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Protocol-%extension-wiseconnect3_sdk%basic_credential_manager"},{"keyWords":"%extension-wiseconnect3_sdk%nvm3_credential_manager","componentId":"%extension-wiseconnect3_sdk%nvm3_credential_manager","isConfigurable":false,"documentation":"","description":"NVM3 Credential Manager provides an API to manage credentials stored in NVM3\n","instantiable":false,"label":"NVM3 Credential Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Protocol|wiseconnect3_sdk:3.4.0-Protocol-%extension-wiseconnect3_sdk%nvm3_credential_manager","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%nvm3_credential_manager","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Protocol-%extension-wiseconnect3_sdk%nvm3_credential_manager"},{"keyWords":"%extension-wiseconnect3_sdk%wifi","componentId":"%extension-wiseconnect3_sdk%wifi","isConfigurable":false,"documentation":"","description":"The SL Wi-FI API implements the core Wi-Fi functionality\n","instantiable":false,"label":"Wi-Fi","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Protocol|wiseconnect3_sdk:3.4.0-Protocol-%extension-wiseconnect3_sdk%wifi","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%wifi","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Protocol-%extension-wiseconnect3_sdk%wifi"}],"isEnabled":false,"name":"Protocol","id":"wiseconnect3_sdk:3.4.0-Protocol","label":"Protocol","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%freertos_config","componentId":"%extension-wiseconnect3_sdk%freertos_config","isConfigurable":true,"documentation":"","description":"SL SI91X FreeRTOS Configuration component allows user to configure its behavior through various configuration options available in its configuration file,  For modifying the Configuration options click on the configure button in the configuration WIzard and modify the Configuration. For more information related to the configurations and usage please refer https://www.freertos.org/.\n","instantiable":false,"label":"SL SI91X FreeRTOS Configuration","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-RTOS|wiseconnect3_sdk:3.4.0-RTOS-FreeRTOS|wiseconnect3_sdk:3.4.0-RTOS-FreeRTOS-Configuration|wiseconnect3_sdk:3.4.0-RTOS-FreeRTOS-Configuration-%extension-wiseconnect3_sdk%freertos_config","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%freertos_config","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-RTOS-FreeRTOS-Configuration-%extension-wiseconnect3_sdk%freertos_config"}],"isEnabled":false,"name":"Configuration","id":"wiseconnect3_sdk:3.4.0-RTOS-FreeRTOS-Configuration","label":"Configuration","type":"category"}],"isEnabled":false,"name":"FreeRTOS","id":"wiseconnect3_sdk:3.4.0-RTOS-FreeRTOS","label":"FreeRTOS","type":"category"}],"isEnabled":false,"name":"RTOS","id":"wiseconnect3_sdk:3.4.0-RTOS","label":"RTOS","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%wifi_resources","componentId":"%extension-wiseconnect3_sdk%wifi_resources","isConfigurable":true,"documentation":"","description":"WiSeConnect3 SDK default values and certificates\n","instantiable":false,"label":"WiSeConnect3 Resources","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Resources|wiseconnect3_sdk:3.4.0-Resources-%extension-wiseconnect3_sdk%wifi_resources","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%wifi_resources","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Resources-%extension-wiseconnect3_sdk%wifi_resources"}],"isEnabled":false,"name":"Resources","id":"wiseconnect3_sdk:3.4.0-Resources","label":"Resources","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%console","componentId":"%extension-wiseconnect3_sdk%console","isConfigurable":false,"documentation":"","description":"Provides a console (command line interpreter or CLI) service\n","instantiable":false,"label":"Console","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-Console|wiseconnect3_sdk:3.4.0-Service-Console-%extension-wiseconnect3_sdk%console","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%console","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-Console-%extension-wiseconnect3_sdk%console"},{"keyWords":"%extension-wiseconnect3_sdk%console_variables","componentId":"%extension-wiseconnect3_sdk%console_variables","isConfigurable":false,"documentation":"","description":"Enables Console to read and write variables.\n","instantiable":false,"label":"Console Variables","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-Console|wiseconnect3_sdk:3.4.0-Service-Console-%extension-wiseconnect3_sdk%console_variables","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%console_variables","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-Console-%extension-wiseconnect3_sdk%console_variables"}],"isEnabled":false,"name":"Console","id":"wiseconnect3_sdk:3.4.0-Service-Console","label":"Console","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%basic_network_config_manager","componentId":"%extension-wiseconnect3_sdk%basic_network_config_manager","isConfigurable":false,"documentation":"","description":"Basic Network Configuration Manager provides a basic reference implementation for managing network credentials and profiles\n","instantiable":false,"label":"Basic Network Configuration Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-Network_Management|wiseconnect3_sdk:3.4.0-Service-Network_Management-Configuration|wiseconnect3_sdk:3.4.0-Service-Network_Management-Configuration-%extension-wiseconnect3_sdk%basic_network_config_manager","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%basic_network_config_manager","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-Network_Management-Configuration-%extension-wiseconnect3_sdk%basic_network_config_manager"},{"keyWords":"%extension-wiseconnect3_sdk%nvm3_network_config_manager","componentId":"%extension-wiseconnect3_sdk%nvm3_network_config_manager","isConfigurable":false,"documentation":"","description":"NVM3 Network Config Manager provides an API to manage network credentials and profiles stored in NVM3\n","instantiable":false,"label":"NVM3 Network Configuration Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-Network_Management|wiseconnect3_sdk:3.4.0-Service-Network_Management-Configuration|wiseconnect3_sdk:3.4.0-Service-Network_Management-Configuration-%extension-wiseconnect3_sdk%nvm3_network_config_manager","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%nvm3_network_config_manager","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-Network_Management-Configuration-%extension-wiseconnect3_sdk%nvm3_network_config_manager"}],"isEnabled":false,"name":"Configuration","id":"wiseconnect3_sdk:3.4.0-Service-Network_Management-Configuration","label":"Configuration","type":"category"},{"keyWords":"%extension-wiseconnect3_sdk%network_manager","componentId":"%extension-wiseconnect3_sdk%network_manager","isConfigurable":false,"documentation":"","description":"The Network Manager (SL Net) provides an API to manage network interfaces and their behaviour\n","instantiable":false,"label":"Network Manager","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-Network_Management|wiseconnect3_sdk:3.4.0-Service-Network_Management-%extension-wiseconnect3_sdk%network_manager","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%network_manager","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-Network_Management-%extension-wiseconnect3_sdk%network_manager"}],"isEnabled":false,"name":"Network Management","id":"wiseconnect3_sdk:3.4.0-Service-Network_Management","label":"Network Management","type":"category"},{"keyWords":"%extension-wiseconnect3_sdk%bsd_socket","componentId":"%extension-wiseconnect3_sdk%bsd_socket","isConfigurable":false,"documentation":"","description":"The BSD Socket provides an BSD-style TCP/IP communications API\n","instantiable":false,"label":"BSD Socket","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%bsd_socket","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%bsd_socket","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%bsd_socket"},{"keyWords":"%extension-wiseconnect3_sdk%http_client","componentId":"%extension-wiseconnect3_sdk%http_client","isConfigurable":false,"documentation":"","description":"The HTTP Client provides an API to start a HTTP client service\n","instantiable":false,"label":"HTTP Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%http_client","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%http_client","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%http_client"},{"keyWords":"%extension-wiseconnect3_sdk%sl_http_server","componentId":"%extension-wiseconnect3_sdk%sl_http_server","isConfigurable":false,"documentation":"","description":"The HTTP Server provides an API to start a HTTP Server service\n","instantiable":false,"label":"HTTP Server","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%sl_http_server","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_http_server","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%sl_http_server"},{"keyWords":"%extension-wiseconnect3_sdk%mdns","componentId":"%extension-wiseconnect3_sdk%mdns","isConfigurable":false,"documentation":"","description":"The MDNS provides a simple, easy-to-use API to start a service that advertises service on network\n","instantiable":false,"label":"MDNS","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%mdns","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%mdns","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%mdns"},{"keyWords":"%extension-wiseconnect3_sdk%mqtt","componentId":"%extension-wiseconnect3_sdk%mqtt","isConfigurable":false,"documentation":"","description":"The MQTT Client provides an API to start an MQTT client service\n","instantiable":false,"label":"MQTT Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%mqtt","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%mqtt","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%mqtt"},{"keyWords":"%extension-wiseconnect3_sdk%sntp","componentId":"%extension-wiseconnect3_sdk%sntp","isConfigurable":false,"documentation":"","description":"The SNTP Client provides a simple, easy-to-use API to start a service that retrieves time from an SNTP server\n","instantiable":false,"label":"SNTP Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%sntp","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sntp","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%sntp"},{"keyWords":"%extension-wiseconnect3_sdk%sl_websocket_client","componentId":"%extension-wiseconnect3_sdk%sl_websocket_client","isConfigurable":false,"documentation":"","description":"The WebSocket Client provides an API to create a WebSocket client, connect to a WebSocket server, and send/receive messages.\n","instantiable":false,"label":"WebSocket Client","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Service|wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%sl_websocket_client","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%sl_websocket_client","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Service-%extension-wiseconnect3_sdk%sl_websocket_client"}],"isEnabled":false,"name":"Service","id":"wiseconnect3_sdk:3.4.0-Service","label":"Service","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%unity_si91x","componentId":"%extension-wiseconnect3_sdk%unity_si91x","isConfigurable":false,"documentation":"","description":"Unity test framework","instantiable":false,"label":"unity_si91x","type":"component","quality":"TEST","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Test|wiseconnect3_sdk:3.4.0-Test-Framework|wiseconnect3_sdk:3.4.0-Test-Framework-%extension-wiseconnect3_sdk%unity_si91x","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%unity_si91x","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Test-Framework-%extension-wiseconnect3_sdk%unity_si91x"}],"isEnabled":false,"name":"Framework","id":"wiseconnect3_sdk:3.4.0-Test-Framework","label":"Framework","type":"category"}],"isEnabled":false,"name":"Test","id":"wiseconnect3_sdk:3.4.0-Test","label":"Test","type":"category"},{"categoryType":"SDKExtensionNode","children":[{"keyWords":"%extension-wiseconnect3_sdk%aws_sdk","componentId":"%extension-wiseconnect3_sdk%aws_sdk","isConfigurable":false,"documentation":"","description":"AWS IoT Device SDK for Embedded C\n","instantiable":false,"label":"AWS IoT Device SDK","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Third_Party|wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%aws_sdk","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%aws_sdk","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%aws_sdk"},{"keyWords":"%extension-wiseconnect3_sdk%azure_freertos_middleware","componentId":"%extension-wiseconnect3_sdk%azure_freertos_middleware","isConfigurable":false,"documentation":"","description":"AZURE IoT Device SDK for Embedded C\n","instantiable":false,"label":"AZURE FreeRTOS Middleware","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Third_Party|wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%azure_freertos_middleware","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%azure_freertos_middleware","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%azure_freertos_middleware"},{"keyWords":"%extension-wiseconnect3_sdk%coreMQTT","componentId":"%extension-wiseconnect3_sdk%coreMQTT","isConfigurable":false,"documentation":"","description":"Core MQTT\n","instantiable":false,"label":"Core MQTT","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Third_Party|wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%coreMQTT","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%coreMQTT","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%coreMQTT"},{"keyWords":"%extension-wiseconnect3_sdk%iot_socket","componentId":"%extension-wiseconnect3_sdk%iot_socket","isConfigurable":false,"documentation":"","description":"ARM IoT Socket provides a simple, BSD-like IP socket API\n","instantiable":false,"label":"IoT Socket","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Third_Party|wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%iot_socket","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%iot_socket","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%iot_socket"},{"keyWords":"%extension-wiseconnect3_sdk%json_parser","componentId":"%extension-wiseconnect3_sdk%json_parser","isConfigurable":false,"documentation":"","description":"JSON Parser for Embedded C\n","instantiable":false,"label":"JSON Parser","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Third_Party|wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%json_parser","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%json_parser","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%json_parser"},{"keyWords":"%extension-wiseconnect3_sdk%littlefs_si91x","componentId":"%extension-wiseconnect3_sdk%littlefs_si91x","isConfigurable":false,"documentation":"","description":"A little fail-safe filesystem. It's designed to handle random power failures,  with flash in mind, and provides wear leveling over dynamic blocks and to work  with a small amount of memory. RAM usage is strictly bounded, which means RAM  consumption does not change as the filesystem grows.\n","instantiable":false,"label":"LITTLEFS_SI91X","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Third_Party|wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%littlefs_si91x","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%littlefs_si91x","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%littlefs_si91x"},{"keyWords":"%extension-wiseconnect3_sdk%qcbor","componentId":"%extension-wiseconnect3_sdk%qcbor","isConfigurable":false,"documentation":"","description":"QCBOR is a Concise Binary Object Representation (CBOR) encoder/decoder library\n","instantiable":false,"label":"QCBOR","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Third_Party|wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%qcbor","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%qcbor","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%qcbor"},{"keyWords":"%extension-wiseconnect3_sdk%tcose","componentId":"%extension-wiseconnect3_sdk%tcose","isConfigurable":false,"documentation":"","description":"t_cose is a CBOR Object Signing and Encryption (COSE) library\n","instantiable":false,"label":"t_cose","type":"component","quality":"PRODUCTION","isUserSelected":false,"tags":"","categoryType":"SDKExtensionNode","path":"wiseconnect3_sdk:3.4.0-Third_Party|wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%tcose","isEditable":false,"isEnabled":false,"name":"%extension-wiseconnect3_sdk%tcose","isSelected":false,"id":"wiseconnect3_sdk:3.4.0-Third_Party-%extension-wiseconnect3_sdk%tcose"}],"isEnabled":false,"name":"Third Party","id":"wiseconnect3_sdk:3.4.0-Third_Party","label":"Third Party","type":"category"}],"isEnabled":false,"name":"wiseconnect3_sdk","description":"WiSeConnect 3 extension for the Simplicity SDK (formerly Gecko SDK)\n","compatibilty":{"conflictId":null,"isCompatible":true,"hasExtensionUpgrade":false},"id":"wiseconnect3_sdk:3.4.0","label":"WiSeConnect 3 SDK v3.4.0","type":"SDKExtensionNode","version":"3.4.0"}]
