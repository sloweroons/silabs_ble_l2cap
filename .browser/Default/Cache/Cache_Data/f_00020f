{"availableCount":119,"searchTerms":[],"userState":"86dc0af4-b642-43e1-803a-6349675cd649","resources":[{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_ncp/readme.md"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_ncp.example/bt_ncp/bt_ncp.slcp","text":"Bluetooth - NCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_ncp/readme.md"],"description":"Network Co-Processor (NCP) target application with additional features to support the Electronic Shelf Label Profile ESL Access Point role. Note: Some BLE features unused by the ESL Access Point are removed compared to the NCP target application.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_ncp_esl_ap.example/bt_ncp/bt_ncp_esl_ap.slcp","text":"Bluetooth - NCP ESL Access Point","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application with additional features to support the Electronic Shelf Label Profile ESL Access Point role. Note: Some BLE features unused by the ESL Access Point are removed compared to the NCP target application.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_ncp_host/readme.md"],"description":"Reference implementation of an NCP (Network Co-Processor) host, which typically runs on a central MCU without radio. It can connect to an NCP target running the NCP Example via UART to access the Bluetooth stack on the target and to control it using BGAPI.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_ncp_host.example/bt_ncp_host/bt_ncp_host.slcp","text":"Bluetooth - NCP Host","priority":9999999,"category":"SOFTWARE","toolTipText":"Reference implementation of an NCP (Network Co-Processor) host, which typically runs on a central MCU without radio. It can connect to an NCP target running the NCP Example via UART to access the Bluetooth stack on the target and to control it using BGAPI.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_rcp/readme.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_rcp.example/bt_rcp/bt_rcp.slcp","text":"Bluetooth - RCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_rcp/readme_rcp_cpc.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_rcp_cpc.example/bt_rcp/bt_rcp_cpc.slcp","text":"Bluetooth - RCP CPC","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_rcp/readme_rcp_cpc.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_rcp_cpc_freertos.example/bt_rcp/bt_rcp_cpc_freertos.slcp","text":"Bluetooth - RCP CPC FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_rcp/readme.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_rcp_freertos.example/bt_rcp/bt_rcp_freertos.slcp","text":"Bluetooth - RCP FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_rcp/readme.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_rcp_micriumos.example/bt_rcp/bt_rcp_micriumos.slcp","text":"Bluetooth - RCP Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_blinky/readme.md"],"description":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the  Simplicity Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_blinky.example/bt_soc_blinky/bt_soc_blinky.slcp","text":"Bluetooth - SoC Blinky","priority":9999999,"category":"SOFTWARE","toolTipText":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the  Simplicity Connect mobile app.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_blinky/readme.md"],"description":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the Simplicity Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_blinky_freertos.example/bt_soc_blinky/bt_soc_blinky_freertos.slcp","text":"Bluetooth - SoC Blinky FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the Simplicity Connect mobile app.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_blinky/readme.md"],"description":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the Simplicity Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_blinky_micriumos.example/bt_soc_blinky/bt_soc_blinky_micriumos.slcp","text":"Bluetooth - SoC Blinky Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the Simplicity Connect mobile app.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_dtm/readme.md"],"description":"This example implements the direct test mode (DTM) application for radio testing. DTM commands can be called via UART.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_dtm.example/bt_soc_dtm/bt_soc_dtm.slcp","text":"Bluetooth - SoC DTM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example implements the direct test mode (DTM) application for radio testing. DTM commands can be called via UART.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_empty/readme.md"],"description":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_empty.example/bt_soc_empty/bt_soc_empty.slcp","text":"Bluetooth - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_empty/readme.md"],"description":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_empty_freertos.example/bt_soc_empty/bt_soc_empty_freertos.slcp","text":"Bluetooth - SoC Empty FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_empty/readme.md"],"description":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_empty_micriumos.example/bt_soc_empty/bt_soc_empty_micriumos.slcp","text":"Bluetooth - SoC Empty Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_iop_test/readme.md"],"description":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the Simplicity  Connect mobile app, through the \"Interoperability Test\" tile on the Develop  view of the app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_iop_test.example/bt_soc_iop_test/bt_soc_iop_test.slcp","text":"Bluetooth - SoC Interoperability Test","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the Simplicity  Connect mobile app, through the \"Interoperability Test\" tile on the Develop  view of the app.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_iop_test/readme.md"],"description":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the Simplicity  Connect mobile app, through the \"Interoperability Test\" tile on the Develop  view of the app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_iop_test_freertos.example/bt_soc_iop_test/bt_soc_iop_test_freertos.slcp","text":"Bluetooth - SoC Interoperability Test FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the Simplicity  Connect mobile app, through the \"Interoperability Test\" tile on the Develop  view of the app.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_iop_test/readme.md"],"description":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the Simplicity Connect mobile app, through the \"Interoperability Test\" tile on the Develop  view of the app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_iop_test_micriumos.example/bt_soc_iop_test/bt_soc_iop_test_micriumos.slcp","text":"Bluetooth - SoC Interoperability Test Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the Simplicity Connect mobile app, through the \"Interoperability Test\" tile on the Develop  view of the app.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_thermometer/readme.md"],"description":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_thermometer.example/bt_soc_thermometer/bt_soc_thermometer.slcp","text":"Bluetooth - SoC Thermometer","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the Si7021 digital relative humidity and temperature sensor of the WSTK or of the Thunderboard.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_thermometer_client/readme.md"],"description":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_thermometer_client.example/bt_soc_thermometer_client/bt_soc_thermometer_client.slcp","text":"Bluetooth - SoC Thermometer Client","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_thermometer/readme_rtos.md"],"description":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_thermometer_freertos.example/bt_soc_thermometer/bt_soc_thermometer_freertos.slcp","text":"Bluetooth - SoC Thermometer FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer sample app.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_throughput/readme.md"],"description":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using Simplicity Connect mobile app, through the Throughput demo tile.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_throughput_log_single.example/bt_soc_throughput/bt_soc_throughput_log_single.slcp","text":"Bluetooth - SoC Throughput (single button)","priority":9999999,"category":"SOFTWARE","toolTipText":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using Simplicity Connect mobile app, through the Throughput demo tile.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_thunderboard/readme.md"],"description":"Demonstrates the features of the Thunderboard EFR32BG22 Kit. This can be tested with the Simplicity Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_thunderboard_brd4184a.example/bt_soc_thunderboard/bt_soc_thunderboard_brd4184a.slcp","text":"Bluetooth - SoC Thunderboard EFR32BG22 (BRD4184A)","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the features of the Thunderboard EFR32BG22 Kit. This can be tested with the Simplicity Connect mobile app.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_voice/readme.md"],"description":"Voice over Bluetooth Low Energy sample application. It is supported by Thunderboard Sense 2 and Thunderboard EFR32BG22 boards and demonstrates how to send voice data over GATT, which is acquired from the on-board microphones.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_voice.example/bt_soc_voice/bt_soc_voice.slcp","text":"Bluetooth - SoC Voice","priority":9999999,"category":"SOFTWARE","toolTipText":"Voice over Bluetooth Low Energy sample application. It is supported by Thunderboard Sense 2 and Thunderboard EFR32BG22 boards and demonstrates how to send voice data over GATT, which is acquired from the on-board microphones.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_ibeacon/readme.md"],"description":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the Simplicity Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_ibeacon.example/bt_soc_ibeacon/bt_soc_ibeacon.slcp","text":"Bluetooth - SoC iBeacon","priority":9999999,"category":"SOFTWARE","toolTipText":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the Simplicity Connect mobile app.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_ibeacon/readme.md"],"description":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the Simplicity Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_ibeacon_freertos.example/bt_soc_ibeacon/bt_soc_ibeacon_freertos.slcp","text":"Bluetooth - SoC iBeacon FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the Simplicity Connect mobile app.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_soc_ibeacon/readme.md"],"description":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the Simplicity Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_ibeacon_micriumos.example/bt_soc_ibeacon/bt_soc_ibeacon_micriumos.slcp","text":"Bluetooth - SoC iBeacon Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the Simplicity Connect mobile app.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/bluetooth/example/bt_aoa_soc_asset_tag/readme.md"],"description":"This sample app demonstrates a CTE (Constant Tone Extension) transmitter that can be used as an asset tag in a Direction Finding setup estimating Angle of Arrival (AoA).","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_aoa_soc_asset_tag.example/bt_aoa_soc_asset_tag/bt_aoa_soc_asset_tag.slcp","text":"Bluetooth AoA - SoC Asset Tag","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample app demonstrates a CTE (Constant Tone Extension) transmitter that can be used as an asset tag in a Direction Finding setup estimating Angle of Arrival (AoA).\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":[],"description":"Network Co-Processor (NCP) target application extended with CTE Receiver support. It enables Angle of Departure (AoD) calculation. Use this application with Direction Finding Studio tools.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_aod_ncp_receiver.example/bt_aod_ncp_receiver/bt_aod_ncp_receiver.slcp","text":"Bluetooth AoD - NCP Receiver","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application extended with CTE Receiver support. It enables Angle of Departure (AoD) calculation. Use this application with Direction Finding Studio tools.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_ncp_empty/readme.md"],"description":"Demonstrates the bare minimum needed for an NCP Target C application.  This example is recommended for EFR32xG22, which has limited RAM and flash, and therefore some of the stack classes are disabled by default.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_ncp_empty.example/btmesh_ncp_empty/btmesh_ncp_empty_xg22.slcp","text":"Bluetooth Mesh - NCP Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the bare minimum needed for an NCP Target C application.  This example is recommended for EFR32xG22, which has limited RAM and flash, and therefore some of the stack classes are disabled by default.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_ambient_light/readme_xg22.md"],"description":"An out-of-the-box Software Demo where the device acts as an Ambient Light Sensor in a Networked Lighting Control (NLC) system. The device measures ambient light and sends these measurements to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_soc_nlc_sensor_ambient_light.example/btmesh_soc_nlc_sensor_ambient_light/btmesh_soc_nlc_sensor_ambient_light_tbbg22a.slcp","text":"Bluetooth Mesh - NLC Ambient Light Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as an Ambient Light Sensor in a Networked Lighting Control (NLC) system. The device measures ambient light and sends these measurements to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme_xg22.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_soc_nlc_basic_scene_selector.example/btmesh_soc_nlc_basic_scene_selector/btmesh_soc_nlc_basic_scene_selector_log_xg22.slcp","text":"Bluetooth Mesh - NLC Basic Scene Selector","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_soc_nlc_basic_scene_selector_low_power.example/btmesh_soc_nlc_basic_scene_selector/btmesh_soc_nlc_basic_scene_selector_low_power.slcp","text":"Bluetooth Mesh - NLC Basic Scene Selector Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme_xg22.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_soc_nlc_dimming_control.example/btmesh_soc_nlc_dimming_control/btmesh_soc_nlc_dimming_control_log_xg22.slcp","text":"Bluetooth Mesh - NLC Dimming Control","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_soc_nlc_dimming_control_low_power.example/btmesh_soc_nlc_dimming_control/btmesh_soc_nlc_dimming_control_low_power.slcp","text":"Bluetooth Mesh - NLC Dimming Control Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_occupancy/readme_xg22.md"],"description":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_soc_nlc_sensor_occupancy.example/btmesh_soc_nlc_sensor_occupancy/btmesh_soc_nlc_sensor_occupancy_tbbg22a.slcp","text":"Bluetooth Mesh - NLC Occupancy Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_soc_empty/readme.md"],"description":"Demonstrates the bare minimum needed for a Bluetooth Mesh C application. The application starts Unprovisioned Device Beaconing after booting, and then waits to be provisioned.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_soc_empty.example/btmesh_soc_empty/btmesh_soc_empty.slcp","text":"Bluetooth Mesh - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the bare minimum needed for a Bluetooth Mesh C application. The application starts Unprovisioned Device Beaconing after booting, and then waits to be provisioned.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_soc_sensor_client/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_soc_sensor_client.example/btmesh_soc_sensor_client/btmesh_soc_sensor_client_log_xg22.slcp","text":"Bluetooth Mesh - SoC Sensor Client","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_soc_sensor_thermometer/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. It measures temperature and sends the measurement data to a remote device (e.g., btmesh_soc_sensor_client).","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_soc_sensor_thermometer.example/btmesh_soc_sensor_thermometer/btmesh_soc_sensor_thermometer_tbbg22a.slcp","text":"Bluetooth Mesh - SoC Sensor Thermometer","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. It measures temperature and sends the measurement data to a remote device (e.g., btmesh_soc_sensor_client).\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_soc_switch/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_soc_switch_ctl.example/btmesh_soc_switch_ctl/btmesh_soc_switch_ctl_log_xg22.slcp","text":"Bluetooth Mesh - SoC Switch CTL","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/btmesh/documentation/example/btmesh_soc_switch/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.btmesh_soc_switch_ctl_low_power.example/btmesh_soc_switch_ctl/btmesh_soc_switch_ctl_low_power.slcp","text":"Bluetooth Mesh - SoC Switch CTL Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/bootloader-uart-bgapi/readme.md"],"description":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-uart-bgapi.sample-apps/bootloader-uart-bgapi/bootloader-uart-bgapi.slcp","text":"Bootloader - NCP BGAPI UART DFU","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/bootloader-spi-ezsp/readme.md"],"description":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-spi-ezsp.sample-apps/bootloader-spi-ezsp/bootloader-spi-ezsp.slcp","text":"Bootloader - NCP EZSP SPI","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the EZSP protocol over SPI. This is the recommended SPI bootloader for the EmberZNet and Connect protocol stacks.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/bootloader-uart-xmodem/readme.md"],"description":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-uart-xmodem.sample-apps/bootloader-uart-xmodem/bootloader-uart-xmodem.slcp","text":"Bootloader - NCP UART XMODEM","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/bootloader-apploader/readme.md"],"description":"Standalone Bootloader using the Bluetooth AppLoader OTA DFU. This implements in-place application updates using Bluetooth connection.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-apploader.sample-apps/bootloader-apploader/bootloader-apploader.slcp","text":"Bootloader - SoC Bluetooth AppLoader OTA DFU","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the Bluetooth AppLoader OTA DFU. This implements in-place application updates using Bluetooth connection.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/bootloader-storage-internal-single-352k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-storage-internal-single-352k.sample-apps/bootloader-storage-internal-single-352k/bootloader-storage-internal-single-352k.slcp","text":"Bootloader - SoC Internal Storage (single image on 352kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/bootloader-storage-internal-single-512k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-storage-internal-single-512k.sample-apps/bootloader-storage-internal-single-512k/bootloader-storage-internal-single-512k.slcp","text":"Bootloader - SoC Internal Storage (single image on 512kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/bootloader-storage-spiflash/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store up to two firmware update images at a time, in two storage slots. The storage slots are configured to start at address 0x2000 and 0x41000 of the SPI flash respectively, and have a size of 252 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-storage-spiflash.sample-apps/bootloader-storage-spiflash/bootloader-storage-spiflash.slcp","text":"Bootloader - SoC SPI Flash Storage (multiple images)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store up to two firmware update images at a time, in two storage slots. The storage slots are configured to start at address 0x2000 and 0x41000 of the SPI flash respectively, and have a size of 252 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/bootloader-storage-spiflash-single-1024k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 1024 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-storage-spiflash-single-1024k.sample-apps/bootloader-storage-spiflash-single-1024k/bootloader-storage-spiflash-single-1024k.slcp","text":"Bootloader - SoC SPI Flash Storage (single image with slot size of 1024kB)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 1024 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/bootloader-storage-spiflash-single/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-storage-spiflash-single.sample-apps/bootloader-storage-spiflash-single/bootloader-storage-spiflash-single.slcp","text":"Bootloader - SoC SPI Flash Storage (single image)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/bootloader-storage-spiflash-sfdp-single/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The SPI flash type is detected automatically by querying the SFDP parameter table present inside the flash memory. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-storage-spiflash-sfdp-single.sample-apps/bootloader-storage-spiflash-sfdp-single/bootloader-storage-spiflash-sfdp-single.slcp","text":"Bootloader - SoC SPI Flash Storage using SFDP (single image)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use an external SPI flash to store firmware update images. The SPI flash type is detected automatically by querying the SFDP parameter table present inside the flash memory. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x0 of the SPI flash, and have a size of 512 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/connect/readme.md"],"description":"Connect: NCP Application for the SoC","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.connect_ncp.../../protocol/flex/app/ncp-app/connect_ncp.slcp","text":"Connect - NCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Connect: NCP Application for the SoC"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/connect/documentation/example/connect_soc_direct_mode_device/readme.md"],"description":"The provided sample application facilitates direct commissioning of nodes and enables seamless data exchange between them through command line interface (CLI) commands. Developers can utilize this functionality to streamline communication and enhance interoperability within their networked systems.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.connect_soc_direct_mode_device.example/connect_soc_direct_mode_device/connect_soc_direct_mode_device.slcp","text":"Connect - SoC Direct Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"The provided sample application facilitates direct commissioning of nodes and enables seamless data exchange between them through command line interface (CLI) commands. Developers can utilize this functionality to streamline communication and enhance interoperability within their networked systems.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/connect/documentation/example/connect_soc_ecdh_key_exchange/readme.md"],"description":"This sample application demonstrates how to securely share a network key among multiple devices using the Elliptic-curve Diffie-Hellman (ECDH) key agreement protocol. By employing ECDH, two parties can establish a shared secret over an insecure channel, which can then be used as a symmetric encryption key for secure communication.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.connect_soc_ecdh_key_exchange.example/connect_soc_ecdh_key_exchange/connect_soc_ecdh_key_exchange.slcp","text":"Connect - SoC ECDH Key Exchange","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample application demonstrates how to securely share a network key among multiple devices using the Elliptic-curve Diffie-Hellman (ECDH) key agreement protocol. By employing ECDH, two parties can establish a shared secret over an insecure channel, which can then be used as a symmetric encryption key for secure communication.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/connect/documentation/example/connect_soc_empty/readme.md"],"description":"The Connect Empty project serves as a foundational Connect application, stripped down to its essential elements. It provides a clean slate for building customized, proprietary solutions with a streamlined approach.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.connect_soc_empty.example/connect_soc_empty/connect_soc_empty.slcp","text":"Connect - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The Connect Empty project serves as a foundational Connect application, stripped down to its essential elements. It provides a clean slate for building customized, proprietary solutions with a streamlined approach.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/connect/documentation/example/connect_soc_mac_mode_device/readme.md"],"description":"This sample application offers a command-line interface (CLI) that facilitates network formation and joining. Users can create new networks or connect to existing ones. Additionally, the app enables data transmission between nodes using either short or long addresses.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.connect_soc_mac_mode_device.example/connect_soc_mac_mode_device/connect_soc_mac_mode_device.slcp","text":"Connect - SoC MAC Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample application offers a command-line interface (CLI) that facilitates network formation and joining. Users can create new networks or connect to existing ones. Additionally, the app enables data transmission between nodes using either short or long addresses.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/connect/documentation/example/connect_sink_sensor/readme.md"],"description":"This demonstration illustrates the proper setup of a star network topology, enabling bidirectional communication between the Sink and Sensor nodes. The PB0 pushbutton serves to enable or disable sleep mode, in conjunction with adjusting the VCOM option for 'reception while sleeping'.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.connect_soc_sensor.example/sensor_sink/connect_soc_sensor/connect_soc_sensor.slcp","text":"Connect - SoC Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"This demonstration illustrates the proper setup of a star network topology, enabling bidirectional communication between the Sink and Sensor nodes. The PB0 pushbutton serves to enable or disable sleep mode, in conjunction with adjusting the VCOM option for 'reception while sleeping'.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/connect/documentation/example/connect_sink_sensor/readme.md"],"description":"The Sink example serves as the counterpart to the Sensor example. It receives reports from Sensor nodes as they join its network.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.connect_soc_sink.example/sensor_sink/connect_soc_sink/connect_soc_sink.slcp","text":"Connect - SoC Sink","priority":9999999,"category":"SOFTWARE","toolTipText":"The Sink example serves as the counterpart to the Sensor example. It receives reports from Sensor nodes as they join its network.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.cExeProject","text":"Empty C Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.cppExeProject","text":"Empty C++ Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates how to get stereo PCM data from a MEMS microphone using the PDM interface. An interrupt is triggered when there is valid data in the PDM's hardware FIFO. The interrupt handler reads and translates the raw PCM data from the FIFO into left and...","id":"projectTemplate.compatibleSDK.series2/pdm/pdm_stereo_interrupt/SimplicityStudio/BRD4184A_EFR32BG22_pdm_stereo_interrupt.slsproj","text":"Platform - BRD4184A EFR32BG22 PDM Stereo Interrupt","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates how to get stereo PCM data from a MEMS microphone using the PDM interface. An interrupt is triggered when there is valid data in the PDM's hardware FIFO. The interrupt handler reads and translates the raw PCM data from the FIFO into left and..."},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":[],"description":"This project demonstrates how to get stereo PCM data from a MEMS microphone using the PDM interface. An LDMA transfer is triggered when there is valid data in the PDM's hardware FIFO. The LDMA transfers the raw PCM data from the FIFO to the ping-pong buffers. The mai...","id":"projectTemplate.compatibleSDK.series2/pdm/pdm_stereo_ldma/SimplicityStudio/BRD4184A_EFR32BG22_pdm_stereo_ldma.slsproj","text":"Platform - BRD4184A EFR32BG22 PDM Stereo LDMA","priority":9999999,"category":"SOFTWARE","toolTipText":"This project demonstrates how to get stereo PCM data from a MEMS microphone using the PDM interface. An LDMA transfer is triggered when there is valid data in the PDM's hardware FIFO. The LDMA transfers the raw PCM data from the FIFO to the ping-pong buffers. The mai..."},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/blink_baremetal/readme.md"],"description":"This example project shows how to blink an LED in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.blink_baremetal.example/blink_baremetal/blink_baremetal.slcp","text":"Platform - Blink Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED in a bare-metal configuration.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/blink_kernel_freertos/readme.md"],"description":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.blink_kernel_freertos.example/blink_kernel_freertos/blink_kernel_freertos.slcp","text":"Platform - Blink Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/blink_kernel_micriumos/readme.md"],"description":"This example project shows how to blink an LED using a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.blink_kernel_micriumos.example/blink_kernel_micriumos/blink_kernel_micriumos.slcp","text":"Platform - Blink Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/blink_pwm_baremetal/readme.md"],"description":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.blink_pwm_baremetal.example/blink_pwm_baremetal/blink_pwm_baremetal.slcp","text":"Platform - Blink PWM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/cli_baremetal/readme.md"],"description":"This example project demonstrates how to use the CLI driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.cli_baremetal.example/cli_baremetal/cli_baremetal.slcp","text":"Platform - CLI Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/cli_kernel_freertos/readme.md"],"description":"This example project demonstrates how to use the CLI driver using a FreeRTOS Kernel.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.cli_kernel_freertos.example/cli_kernel_freertos/cli_kernel_freertos.slcp","text":"Platform - CLI Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver using a FreeRTOS Kernel.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/cli_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the CLI driver using a Micrium OS Kernel.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.cli_kernel_micriumos.example/cli_kernel_micriumos/cli_kernel_micriumos.slcp","text":"Platform - CLI Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the CLI driver using a Micrium OS Kernel.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/iostream_eusart_baremetal/readme.md"],"description":"This example project uses the I/O Stream service running in a bare-metal configuration to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.iostream_eusart_baremetal.example/iostream_eusart_baremetal/iostream_eusart_baremetal.slcp","text":"Platform - I/O Stream EUSART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/iostream_eusart_kernel_micriumos/readme.md"],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.iostream_eusart_kernel_micriumos.example/iostream_eusart_kernel_micriumos/iostream_eusart_kernel_micriumos.slcp","text":"Platform - I/O Stream EUSART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/iostream_usart_baremetal/readme.md"],"description":"This example project uses the I/O Stream service running in a bare-metal configuration to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.iostream_usart_baremetal.example/iostream_usart_baremetal/iostream_usart_baremetal.slcp","text":"Platform - I/O Stream USART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/iostream_usart_kernel_micriumos/readme.md"],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.iostream_usart_kernel_micriumos.example/iostream_usart_kernel_micriumos/iostream_usart_kernel_micriumos.slcp","text":"Platform - I/O Stream USART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/i2cspm_baremetal/readme.md"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.i2cspm_baremetal.example/i2cspm_baremetal/i2cspm_baremetal.slcp","text":"Platform - I2C Simple Polled Master Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a bare-metal configuration.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/i2cspm_kernel_freertos/readme.md"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a FreeRTOS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.i2cspm_kernel_freertos.example/i2cspm_kernel_freertos/i2cspm_kernel_freertos.slcp","text":"Platform - I2C Simple Polled Master on FreeRTOS Kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a FreeRTOS kernel task.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/i2cspm_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.i2cspm_kernel_micriumos.example/i2cspm_kernel_micriumos/i2cspm_kernel_micriumos.slcp","text":"Platform - I2C Simple Polled Master on Micrium OS Kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the I2C Simple Polled Master driver using the Si7021 Relative Humidity and Temperature Sensor in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/mpu_simple_baremetal/readme.md"],"description":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example, some fake malicious executable code is copied to RAM and executed with the MPU disabled and re-enabled to demonstrate its effectiveness.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.mpu_simple_baremetal.example/mpu_simple_baremetal/mpu_simple_baremetal.slcp","text":"Platform - MPU Simple","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example, some fake malicious executable code is copied to RAM and executed with the MPU disabled and re-enabled to demonstrate its effectiveness.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/nvm3_baremetal/readme.md"],"description":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.nvm3_baremetal.example/nvm3_baremetal/nvm3_baremetal.slcp","text":"Platform - NVM3 Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/nvm3_kernel_freertos/readme.md"],"description":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.nvm3_kernel_freertos.example/nvm3_kernel_freertos/nvm3_kernel_freertos.slcp","text":"Platform - NVM3 Kernel FreeRtos","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/spidrv_master_baremetal/readme.md"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.spidrv_master_baremetal.example/spidrv_master_baremetal/spidrv_master_baremetal.slcp","text":"Platform - SPIDRV Master Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/spidrv_master_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.spidrv_master_kernel_micriumos.example/spidrv_master_kernel_micriumos/spidrv_master_kernel_micriumos.slcp","text":"Platform - SPIDRV Master on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the master mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/spidrv_slave_baremetal/readme.md"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.spidrv_slave_baremetal.example/spidrv_slave_baremetal/spidrv_slave_baremetal.slcp","text":"Platform - SPIDRV Slave Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a bare-metal configuration.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/spidrv_slave_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.spidrv_slave_kernel_micriumos.example/spidrv_slave_kernel_micriumos/spidrv_slave_kernel_micriumos.slcp","text":"Platform - SPIDRV Slave on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the slave mode of the Serial Peripheral Interface driver in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/simple_button_baremetal/readme.md"],"description":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.simple_button_baremetal.example/simple_button_baremetal/simple_button_baremetal.slcp","text":"Platform - Simple Button Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/simple_button_kernel_micriumos/readme.md"],"description":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.simple_button_kernel_micriumos.example/simple_button_kernel_micriumos/simple_button_kernel_micriumos.slcp","text":"Platform - Simple Button on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/sleeptimer_wallclock_baremetal/readme.md"],"description":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.sleeptimer_wallclock_baremetal.example/sleeptimer_wallclock_baremetal/sleeptimer_wallclock_baremetal.slcp","text":"Platform - Sleeptimer Wallclock","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/tempdrv_kernel_micriumos/readme.md"],"description":"This example project demonstrates how to use the internal temperature sensor in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.tempdrv_kernel_micriumos.example/tempdrv_kernel_micriumos/tempdrv_kernel_micriumos.slcp","text":"Platform - TEMPDRV on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates how to use the internal temperature sensor in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/psa_crypto_aead/readme.md"],"description":"This example uses the PSA Crypto API to perform Authenticated Encryption with Associated Data (AEAD) operations on the supported device.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.psa_crypto_aead.example/psa_crypto_aead/psa_crypto_aead.slcp","text":"Platform Security - SoC PSA Crypto AEAD","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the PSA Crypto API to perform Authenticated Encryption with Associated Data (AEAD) operations on the supported device.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/psa_crypto_asymmetric_key/readme.md"],"description":"This example uses the PSA Crypto API to perform asymmetric key operations on the supported device.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.psa_crypto_asymmetric_key.example/psa_crypto_asymmetric_key/psa_crypto_asymmetric_key.slcp","text":"Platform Security - SoC PSA Crypto Asymmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the PSA Crypto API to perform asymmetric key operations on the supported device.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/psa_crypto_cipher/readme.md"],"description":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.psa_crypto_cipher.example/psa_crypto_cipher/psa_crypto_cipher.slcp","text":"Platform Security - SoC PSA Crypto Cipher","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/psa_crypto_dsa/readme.md"],"description":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.psa_crypto_dsa.example/psa_crypto_dsa/psa_crypto_dsa.slcp","text":"Platform Security - SoC PSA Crypto DSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/psa_crypto_ecdh/readme.md"],"description":"This example project demonstrates the ECDH key agreement API.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.psa_crypto_ecdh.example/psa_crypto_ecdh/psa_crypto_ecdh.slcp","text":"Platform Security - SoC PSA Crypto ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDH key agreement API.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/psa_crypto_hash/readme.md"],"description":"This example project demonstrates the hash API.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.psa_crypto_hash.example/psa_crypto_hash/psa_crypto_hash.slcp","text":"Platform Security - SoC PSA Crypto Hash","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the hash API.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/psa_crypto_kdf/readme.md"],"description":"This example project demonstrates the Key Derivation Function (KDF) API.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.psa_crypto_kdf.example/psa_crypto_kdf/psa_crypto_kdf.slcp","text":"Platform Security - SoC PSA Crypto KDF","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Key Derivation Function (KDF) API.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/psa_crypto_mac/readme.md"],"description":"This example project demonstrates the Message Authentication Code (MAC) API.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.psa_crypto_mac.example/psa_crypto_mac/psa_crypto_mac.slcp","text":"Platform Security - SoC PSA Crypto MAC","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Message Authentication Code (MAC) API.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/psa_crypto_symmetric_key/readme.md"],"description":"This example project demonstrates the symmetric key API.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.psa_crypto_symmetric_key.example/psa_crypto_symmetric_key/psa_crypto_symmetric_key.slcp","text":"Platform Security - SoC PSA Crypto Symmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the symmetric key API.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/psa_crypto_x509/readme.md"],"description":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.psa_crypto_x509.example/psa_crypto_x509/psa_crypto_x509.slcp","text":"Platform Security - SoC PSA Crypto X.509","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/se_manager_key_provisioning/readme.md"],"description":"This example project demonstrates the key provisioning API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.se_manager_key_provisioning.example/se_manager_key_provisioning/se_manager_key_provisioning.slcp","text":"Platform Security - SoC SE Manager Key Provisioning","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the key provisioning API of SE Manager.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/mbedtls_aescrypt/readme.md"],"description":"This example uses hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.mbedtls_aescrypt.example/mbedtls_aescrypt/mbedtls_aescrypt.slcp","text":"Platform Security - SoC mbedTLS AES","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/mbedtls_ecdh/readme.md"],"description":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.mbedtls_ecdh.example/mbedtls_ecdh/mbedtls_ecdh.slcp","text":"Platform Security - SoC mbedTLS ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/mbedtls_ecdsa/readme.md"],"description":"This example uses hardware accelerators on the supported device to perform ECDSA digital signature with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.mbedtls_ecdsa.example/mbedtls_ecdsa/mbedtls_ecdsa.slcp","text":"Platform Security - SoC mbedTLS ECDSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators on the supported device to perform ECDSA digital signature with mbedTLS.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/rail/documentation/example/rail_soc_simple_trx_ncp/readme_spi.md"],"description":"The Silicon Labs RAIL - NCP Simple TRX with CPC Support (SPI) sample application seamlessly integrates RAIL (Radio Abstraction Interface Layer) with CPC (Co-Processor Communication) via the SPI interface. In this example, the NCP (Network Co-Processor) device communicates with the host using CPC channels over SPI. The application initializes RAIL for a single PHY radio configuration, enabling transmit and receive operations. It serves as a foundational starting point for building more complex network protocols, leveraging the CPC feature for efficient communication between the host and the co-processor. Whether designing wireless mesh networks, sensor networks, or custom protocols, the Simple TRX with CPC Support (SPI) provides a practical foundation.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.rail_soc_simple_trx_ncp_spi.example/soc/rail_soc_simple_trx_ncp/rail_soc_simple_trx_ncp_spi.slcp","text":"RAIL - NCP Simple TRX with CPC Support (SPI)","priority":9999999,"category":"SOFTWARE","toolTipText":"The Silicon Labs RAIL - NCP Simple TRX with CPC Support (SPI) sample application seamlessly integrates RAIL (Radio Abstraction Interface Layer) with CPC (Co-Processor Communication) via the SPI interface. In this example, the NCP (Network Co-Processor) device communicates with the host using CPC channels over SPI. The application initializes RAIL for a single PHY radio configuration, enabling transmit and receive operations. It serves as a foundational starting point for building more complex network protocols, leveraging the CPC feature for efficient communication between the host and the co-processor. Whether designing wireless mesh networks, sensor networks, or custom protocols, the Simple TRX with CPC Support (SPI) provides a practical foundation.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/rail/documentation/example/rail_soc_simple_trx_ncp/readme_vcom.md"],"description":"The Silicon Labs RAIL - NCP Simple TRX with CPC Support (VCOM) sample application showcases the integration of RAIL (Radio Abstraction Interface Layer) with CPC (Co-Processor Communication). In this example, the NCP (Network Co-Processor) device communicates with the host via CPC channels. The application initializes RAIL for a single PHY radio configuration, enabling transmit and receive operations. It serves as a foundation for building more complex network protocols, leveraging the CPC feature for efficient communication between the host and the co-processor. Whether designing wireless mesh networks, sensor networks, or custom protocols, the Simple TRX with CPC Support (VCOM) provides a starting point for seamless co-processor interaction.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.rail_soc_simple_trx_ncp.example/soc/rail_soc_simple_trx_ncp/rail_soc_simple_trx_ncp.slcp","text":"RAIL - NCP Simple TRX with CPC Support (VCOM)","priority":9999999,"category":"SOFTWARE","toolTipText":"The Silicon Labs RAIL - NCP Simple TRX with CPC Support (VCOM) sample application showcases the integration of RAIL (Radio Abstraction Interface Layer) with CPC (Co-Processor Communication). In this example, the NCP (Network Co-Processor) device communicates with the host via CPC channels. The application initializes RAIL for a single PHY radio configuration, enabling transmit and receive operations. It serves as a foundation for building more complex network protocols, leveraging the CPC feature for efficient communication between the host and the co-processor. Whether designing wireless mesh networks, sensor networks, or custom protocols, the Simple TRX with CPC Support (VCOM) provides a starting point for seamless co-processor interaction.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/rail/documentation/example/rail_soc_empty/readme.md"],"description":"The RAIL Empty project is a bare-bones RAIL app that can be a basis for proprietary solutions. This comes prepared with a Single PHY radio configurator and a basic callback function for RAIL. With one click, this bare-metal sample app can be run on an OS; currently, MicriumOS and FreeRTOS are supported.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.rail_soc_empty.example/soc/rail_soc_empty/rail_soc_empty.slcp","text":"RAIL - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The RAIL Empty project is a bare-bones RAIL app that can be a basis for proprietary solutions. This comes prepared with a Single PHY radio configurator and a basic callback function for RAIL. With one click, this bare-metal sample app can be run on an OS; currently, MicriumOS and FreeRTOS are supported.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/rail/documentation/example/rail_soc_emode/readme.md"],"description":"The Silicon Labs RAIL - SoC Energy Mode sample application is a ready-to-use program designed to evaluate energy consumption in custom radio designs. By iterating over available energy modes or using TX/RX radio operations, you can assess the impact on energy usage. This application serves as a valuable tool for optimizing power efficiency. Whether working with MicriumOS or FreeRTOS, the Energy Mode example provides insights into how different energy levels affect the radio performance. Remember that continuous radio usage draws more current, so consider powering the board via USB rather than a coin cell for accurate assessments.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.rail_soc_emode.example/soc/rail_soc_emode/rail_soc_emode.slcp","text":"RAIL - SoC Energy Mode","priority":9999999,"category":"SOFTWARE","toolTipText":"The Silicon Labs RAIL - SoC Energy Mode sample application is a ready-to-use program designed to evaluate energy consumption in custom radio designs. By iterating over available energy modes or using TX/RX radio operations, you can assess the impact on energy usage. This application serves as a valuable tool for optimizing power efficiency. Whether working with MicriumOS or FreeRTOS, the Energy Mode example provides insights into how different energy levels affect the radio performance. Remember that continuous radio usage draws more current, so consider powering the board via USB rather than a coin cell for accurate assessments.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/rail/documentation/example/rail_soc_railtest/readme.md"],"description":"The RAILtest application provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.rail_soc_railtest.example/soc/rail_soc_railtest/rail_soc_railtest.slcp","text":"RAIL - SoC RAILtest","priority":9999999,"category":"SOFTWARE","toolTipText":"The RAILtest application provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/rail/documentation/example/rail_soc_range_test/readme.md"],"description":"The Range Test application, running on Micrium OS RTOS and multiprotocol RAIL, demonstrates the over-the-air range of the EFR32. It serves as both a transmitter and a receiver, with adjustable packet length and transmission options. Output power can be set from -15 dBm to +20 dBm. In Rx Mode, it inspects received packets based on device IDs, displaying Packet Error Rate, Bit Error Rate, and RSSI. The CLI can also be used for configuration. Note: Avoid powering the boards from a coin cell due to higher current consumption during continuous radio usage, particularly in Rx Mode. For portability, consider using a USB power bank instead.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.rail_soc_range_test.example/soc/rail_soc_range_test/rail_soc_range_test.slcp","text":"RAIL - SoC Range Test","priority":9999999,"category":"SOFTWARE","toolTipText":"The Range Test application, running on Micrium OS RTOS and multiprotocol RAIL, demonstrates the over-the-air range of the EFR32. It serves as both a transmitter and a receiver, with adjustable packet length and transmission options. Output power can be set from -15 dBm to +20 dBm. In Rx Mode, it inspects received packets based on device IDs, displaying Packet Error Rate, Bit Error Rate, and RSSI. The CLI can also be used for configuration. Note: Avoid powering the boards from a coin cell due to higher current consumption during continuous radio usage, particularly in Rx Mode. For portability, consider using a USB power bank instead.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/rail/documentation/example/rail_soc_range_test/readme.md"],"description":"This application showcases the over-the-air range of Silicon Labs boards using 5 predefined standard PHYs. The sample app serves as both a Transmitter and a Receiver, with role selection available in the LCD menu. Flashing the app onto two separate boards facilitates testing of radio features and specifications. The LCD menu provides essential information about settings, allowing users to make changes. In Tx Mode, users can transmit packets, adjusting packet length and quantity. Output power can be set via the LCD menu. In Rx Mode, the app listens on the predefined PHY, displaying Packet Error Rate, Bit Error Rate and RSSI. CLI enables configuration control. Supported platforms include MicriumOS and FreeRTOS.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.rail_soc_range_test_std.example/soc/rail_soc_range_test_std/rail_soc_range_test_std.slcp","text":"RAIL - SoC Range Test BLE and IEEE802.15.4","priority":9999999,"category":"SOFTWARE","toolTipText":"This application showcases the over-the-air range of Silicon Labs boards using 5 predefined standard PHYs. The sample app serves as both a Transmitter and a Receiver, with role selection available in the LCD menu. Flashing the app onto two separate boards facilitates testing of radio features and specifications. The LCD menu provides essential information about settings, allowing users to make changes. In Tx Mode, users can transmit packets, adjusting packet length and quantity. Output power can be set via the LCD menu. In Rx Mode, the app listens on the predefined PHY, displaying Packet Error Rate, Bit Error Rate and RSSI. CLI enables configuration control. Supported platforms include MicriumOS and FreeRTOS.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/rail/documentation/example/rail_soc_simple_trx/readme.md"],"description":"The Silicon Labs RAIL - SoC Simple TRX sample application demonstrates the most basic exchange of transmit and receive operations between two nodes implemented in RAIL. It serves as a straightforward link test setup, where the nodes primarily listen, except for short periods when packet transmission occurs. This example is ideal for evaluating radio performance, testing connectivity, or verifying signal integrity. The Simple TRX application initializes RAIL to support a single PHY radio configuration and defines an empty radio event handler, making it a recommended starting point for RAIL-based projects. Whether assessing energy consumption, optimizing radio configuration, or simply testing communication, the Simple TRX provides a solid foundation1.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.rail_soc_simple_trx.example/soc/rail_soc_simple_trx/rail_soc_simple_trx.slcp","text":"RAIL - SoC Simple TRX","priority":9999999,"category":"SOFTWARE","toolTipText":"The Silicon Labs RAIL - SoC Simple TRX sample application demonstrates the most basic exchange of transmit and receive operations between two nodes implemented in RAIL. It serves as a straightforward link test setup, where the nodes primarily listen, except for short periods when packet transmission occurs. This example is ideal for evaluating radio performance, testing connectivity, or verifying signal integrity. The Simple TRX application initializes RAIL to support a single PHY radio configuration and defines an empty radio event handler, making it a recommended starting point for RAIL-based projects. Whether assessing energy consumption, optimizing radio configuration, or simply testing communication, the Simple TRX provides a solid foundation1.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/rail/documentation/example/rail_soc_simple_trx_std/readme.md"],"description":"The Silicon Labs RAIL - SoC Simple TRX Standards example showcases the most straightforward packet exchange of transmit and receive operations between two nodes implemented in RAIL. This application adheres to compatibility with Bluetooth LE, IEEE 802.15.4 (2.4 GHz only), and IEEE 802.15.4g (subGHz only) standards. The nodes primarily listen, with brief periods for packet transmission. It serves as a foundational starting point for evaluating radio performance, connectivity testing, or signal integrity verification in various wireless scenarios. Whether fine-tuning energy consumption, optimizing radio configurations, or assessing communication reliability, the Simple TRX Standards provides a versatile foundation.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.rail_soc_simple_trx_std.example/soc/rail_soc_simple_trx_std/rail_soc_simple_trx_std.slcp","text":"RAIL - SoC Simple TRX Standards","priority":9999999,"category":"SOFTWARE","toolTipText":"The Silicon Labs RAIL - SoC Simple TRX Standards example showcases the most straightforward packet exchange of transmit and receive operations between two nodes implemented in RAIL. This application adheres to compatibility with Bluetooth LE, IEEE 802.15.4 (2.4 GHz only), and IEEE 802.15.4g (subGHz only) standards. The nodes primarily listen, with brief periods for packet transmission. It serves as a foundational starting point for evaluating radio performance, connectivity testing, or signal integrity verification in various wireless scenarios. Whether fine-tuning energy consumption, optimizing radio configurations, or assessing communication reliability, the Simple TRX Standards provides a versatile foundation.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/rail/documentation/example/rail_soc_simple_trx_auto_ack/readme.md"],"description":"The Silicon Labs RAIL - SoC Simple TRX with Auto-ACK example demonstrates how RAIL's Auto-ACK feature works. It sets up a straightforward link test that requires Auto-ACK functionality. In this application, two nodes exchange transmit and receive operations using RAIL. The nodes primarily listen, except for brief periods when packet transmission occurs. This sample is valuable for evaluating radio performance, testing connectivity, or verifying signal integrity. Whether optimizing energy consumption, fine-tuning radio configuration, or simply assessing communication reliability, the Simple TRX with Auto-ACK provides a practical starting point.","id":"template.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.rail_soc_simple_trx_auto_ack.example/soc/rail_soc_simple_trx_auto_ack/rail_soc_simple_trx_auto_ack.slcp","text":"RAIL - SoC Simple TRX with Auto-ACK","priority":9999999,"category":"SOFTWARE","toolTipText":"The Silicon Labs RAIL - SoC Simple TRX with Auto-ACK example demonstrates how RAIL's Auto-ACK feature works. It sets up a straightforward link test that requires Auto-ACK functionality. In this application, two nodes exchange transmit and receive operations using RAIL. The nodes primarily listen, except for brief periods when packet transmission occurs. This sample is valuable for evaluating radio performance, testing connectivity, or verifying signal integrity. Whether optimizing energy consumption, fine-tuning radio configuration, or simply assessing communication reliability, the Simple TRX with Auto-ACK provides a practical starting point.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/workspaces/bootloader-apploader/readme.md"],"description":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-apploader-workspace.sample-apps/workspaces/bootloader-apploader/bootloader-apploader.slcw","text":"bootloader-apploader-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/workspaces/bootloader-spi-ezsp/readme.md"],"description":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-spi-ezsp-workspace.sample-apps/workspaces/bootloader-spi-ezsp/bootloader-spi-ezsp.slcw","text":"bootloader-spi-ezsp-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/workspaces/bootloader-uart-bgapi/readme.md"],"description":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-uart-bgapi-workspace.sample-apps/workspaces/bootloader-uart-bgapi/bootloader-uart-bgapi.slcw","text":"bootloader-uart-bgapi-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/platform/bootloader/sample-apps/workspaces/bootloader-uart-xmodem/readme.md"],"description":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bootloader-uart-xmodem-workspace.sample-apps/workspaces/bootloader-uart-xmodem/bootloader-uart-xmodem.slcw","text":"bootloader-uart-xmodem-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":[],"description":"Demonstrates Certificate Based Authentication and Pairing over BLE. This example utilizes TrustZone for storing keys.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_cbap_tz_workspace.example/bt_soc_cbap/bt_soc_cbap_tz.slcw","text":"bt_soc_cbap_tz_workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"Demonstrates Certificate Based Authentication and Pairing over BLE. This example utilizes TrustZone for storing keys.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":[],"description":"Certificate generating firmware workspace. Software is generating the device EC key pair, the signing request for the device certificate, and other related data. The generated data can be read out by the Central Authority. This example utilizes TrustZone for storing keys.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.bt_soc_csr_generator_tz_workspace.example/bt_soc_csr_generator/bt_soc_csr_generator_tz.slcw","text":"bt_soc_csr_generator_tz_workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"Certificate generating firmware workspace. Software is generating the device EC key pair, the signing request for the device certificate, and other related data. The generated data can be read out by the Central Authority. This example utilizes TrustZone for storing keys.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/tz_psa_attestation/readme.md"],"description":"This example workspace demonstrates TrustZone for PSA Attestation.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.tz_psa_attestation_ws.example/tz_psa_attestation/tz_psa_attestation_ws.slcw","text":"tz_psa_attestation_ws","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"This example workspace demonstrates TrustZone for PSA Attestation.\n"},{"imageURL":"bundleentry://466.fwk327313420/icons/projectNew.svg","supportDocuments":["file:/C:/Users/berta/SimplicityStudio/SDKs/simplicity_sdk/app/common/example/tz_psa_crypto_ecdh/readme.md"],"description":"This example workspace demonstrates TrustZone for ECDH key agreement.","id":"template.solution.uc.com.silabs.sdk.stack.sisdk:2024.12.0._1958965794.tz_psa_crypto_ecdh_ws.example/tz_psa_crypto_ecdh/tz_psa_crypto_ecdh_ws.slcw","text":"tz_psa_crypto_ecdh_ws","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"This example workspace demonstrates TrustZone for ECDH key agreement.\n"}],"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[{"futureCount":31,"anySelected":false,"id":0,"filters":[],"title":"Bluetooth","parentId":0,"selected":false},{"futureCount":12,"anySelected":false,"id":1,"filters":[],"title":"Bluetooth Mesh","parentId":0,"selected":false},{"futureCount":7,"anySelected":false,"id":2,"filters":[],"title":"Connect","parentId":0,"selected":false},{"futureCount":10,"anySelected":false,"id":3,"filters":[],"title":"RAIL","parentId":0,"selected":false}],"title":"Wireless Technology","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":1,"filters":[{"futureCount":1,"anySelected":false,"id":0,"filters":[],"title":"Host","parentId":1,"selected":false},{"futureCount":13,"anySelected":false,"id":1,"filters":[],"title":"NCP","parentId":1,"selected":false},{"futureCount":5,"anySelected":false,"id":2,"filters":[],"title":"RCP","parentId":1,"selected":false},{"futureCount":96,"anySelected":false,"id":3,"filters":[],"title":"SoC","parentId":1,"selected":false}],"title":"Device Type","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":2,"filters":[{"futureCount":41,"anySelected":false,"id":0,"filters":[],"title":"32-bit MCU","parentId":2,"selected":false},{"futureCount":14,"anySelected":false,"id":1,"filters":[],"title":"Bootloader","parentId":2,"selected":false}],"title":"MCU","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":3,"filters":[{"futureCount":62,"anySelected":false,"id":0,"filters":[],"title":"Advanced","parentId":3,"selected":false},{"futureCount":53,"anySelected":false,"id":1,"filters":[],"title":"Beginner","parentId":3,"selected":false}],"title":"Project Difficulty","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":4,"filters":[{"futureCount":2,"anySelected":false,"id":0,"filters":[],"title":"Evaluation","parentId":4,"selected":false},{"futureCount":13,"anySelected":false,"id":1,"filters":[],"title":"Experimental","parentId":4,"selected":false},{"futureCount":2,"anySelected":false,"id":2,"filters":[],"title":"None Specified","parentId":4,"selected":false},{"futureCount":102,"anySelected":false,"id":3,"filters":[],"title":"Production","parentId":4,"selected":false}],"title":"Quality","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":5,"filters":[{"futureCount":2,"anySelected":false,"id":0,"filters":[],"title":"Peripheral Examples","parentId":5,"selected":false},{"futureCount":117,"anySelected":false,"id":1,"filters":[],"title":"Simplicity SDK Suite v2024.12.0","parentId":5,"selected":false}],"title":"Provider","parentId":-1,"selected":false}],"totalCount":119}
